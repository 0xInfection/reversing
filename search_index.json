{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["32","64","@0xinfect","@mytechnotal","[","]","added.","architecture,","architectures.","arm","artifici","as:","automat","back","backward","bar","basic","be","beginner,","bit","call","carri","code,","comprehens","concepts,","conduct","conveni","cover","craft","cyber","deconstruct","defin","designs,","differ","download","ebook","engin","engineering,","engineering?","entir","everyon","everyone!","exists.","extract","far.","format.","gitbook","here","here:","introduct","it?","knowledg","learn","look","main","make","mid","mobi","mouthful,","natur","new","newbi","noth","object","object.","on","pdf","phenomenon.","place.","possess.","possible.","process","quit","realm","reason","refresh","research","research,","reveal","revers","reversing,","revis","right","scientif","section","secur","set","side","similar","simpl","skill","someon","take","tutori","updat","upto","us","version","wait,","wasn't","well","well,","what'","whew,","wikipedia","within","x64","x86,","you'r","|","—","♡"],"pages/x86-course.html":["architectur","cours","dive","let'","rightaway!","x86"],"pages/part-1-goals.html":["1:","actual","aforement","analysi","analysis,","analysis.","antiviru","assembl","base","basic","begin","binari","break","chang","code","complex","comput","concentr","concept","contain","contrast","contrast,","corpor","creat","critic","deeper","detect","develop","discuss","doing.","down","edit","effect","engin","entri","essenti","examin","file","find","full","goal","graduat","hidden","home","host","identif","identifi","import","indic","infect","inform","intrusion.","it.","key","kingdom","lan","language.","lesson","level","machine.","make","malici","malwar","media.","migrat","modern","more","necessari","need","network","next","note","part","quit","refer","registry.","remov","requir","respect","respond","revers","root","short","signatur","signature,","signatures,","signatures.","speak","step","such","suspect","target","techniqu","throughout","tool","traffic.","tutori","ultim","understand","up","upon","us","util","wan","whether","wireshark"],"pages/part-2-techniques.html":["2:","abc","actual","against","analysi","analysis.","analyz","assembl","assembly,","assembly.","basic","be","better","binari","binaries.","bio","biochem","bullet","c++,","c,","call","capston","ceo","chemic","code","compani","control","convert","creat","debug","debugg","debugger.","decompil","design","disassembl","disassembler,","disassembler/debugg","discuss","door","dynam","employ","end","engin","etc","ethic","examin","execut","first","focu","go","hack","hopper","ida","instead.","instruct","lab","languag","lesson","look","make","malwar","malware.","mani","manipulate.","market","more","more.","much","multi","next","ollydbg","on","order","part","platform,","popular","power","processor","project","proof","provid","real","revers","safer.","scenario","secretli","sensit","series,","showcas","softwar","solut","static","such","task","techniqu","test","threats.","today","tool","tri","tutori","two","type","ultim","us","util","variou","veri","well","without","work","world","written"],"pages/part-3-types-of-malware.html":["3:","access","account","addit","allow","alter","amount","assembl","attack","author","back","backdoor","base","basic","begin","below","below.","botnet","brief","briefli","build","categori","click","cloaking/hid","code","command","complet","comput","computer.","computers.","content","control","copi","core","cover.","danger","deep","direct","directli","discuss","dive","download","each","emb","emerg","end","engin","execut","exist","exists.","extrem","fall","fals","final","find","first","form","form.","frequent","gain","gather","gener","give","go","goe","grabber","greater","hacker","hard","hide","host","https://github.com/mytechnotalent/revers","incom","increas","inform","initially.","instal","instruct","ip","it'","itself","journey","keylogg","kind","know","language.","later","launch","lesson","level.","littl","local","locate.","long","machin","make","malici","malwar","manipul","month","more","need","never","next","non","noth","now","obtain","on","onc","onlin","option","order","over","part","password","pay","penetr","pleas","process","program","protect","purchas","purpos","real","receiv","regard","remot","remov","resid","respect","revers","road","rootkit","same","scan","scarewar","sell","send","sensitive.","server","servic","sever","socket","softwar","software.","sometim","spam","standard","stay","such","system","system.","tabl","take","target","techniqu","threat","time.","topic","touch","tradit","trick","truli","tutori","type","understand","unlimit","up.","upon","us","user","users.","usual","variou","veri","viru","way","whatsoev","work","worm","x86"],"pages/part-4-x86-assembly-intro.html":["32","4:","64","8000","absolut","addit","aforement","ages!","analyz","answer","applications/malwar","architectur","assembl","assembly.","at&t","back","backward","basic","basics.","befor","bell","below","between","binari","bit","boy","brief","c","capabl","cell","chang","children","choic","click","code","coffe","come","commerci","company,","compat","complet","complex","comput","confus","conjunct","content","context","contrast,","control","cover","cover.","cpu","cup","debug","demonstr","destin","detail","develop","devic","differ","directli","disassembl","discuss","do","document","domin","door","each","elf","embark","engin","environment,","environments.","essenti","examin","execute.","famili","first","focu","forever!","format","format.","free!","freeli","gentlemen,","girls,","give","go","good","grab","hardwar","help","https://github.com/mytechnotalent/revers","import","infect","instruct","intel","intro","it!","journey","journey,","labs.","ladi","languag","larg","later","learn","lesson","life","linux","main","malwar","mani","materi","measure.","microprocessor","microprocessors.","microsoft,","million","mnemon","more","ms","need","next","normal","number","object","obtained.","on","open","oper","order","origin","os","own","part","patch","pe","perfectli","person","phone,","platform","pleas","point","possible.","processors.","produc","profession","program","provid","purposes,","quest.","question","regret","remember,","repres","respect","run","same","secur","see","seri","server.","servic","software,","sourc","source.","such","syntax","syntax,","syntax.","system","system.","systems.","tabl","throughout","time.","topic","tutori","tutorial.","two","ubuntu","ultim","understand","unix","updates,","us","util","varieti","variou","vast","versions.","want","whether","window","work","world","world.","written","x86"],"pages/part-5-binary-number-system.html":["(1","(5","+","0","1","1)","1.","10)","10,","10.","1111.","15","2.","5","5:","9","=","above,","absent","addit","architectur","base","below","binari","binary,","bit","brief","click","column","complet","comput","computer.","confused,","content","core","cover.","decim","decimal,","deeper","defin","definit","design","digit","digits,","discuss","dive","each","electr","engin","excit","fashion","fear!","futur","get","give","go","happen","here!","here?","hexadecim","https://github.com/mytechnotalent/revers","illustrate:","import","instead","lesson","mean","mention","more","necessari","next","now","number","off.","part","pleas","plu","puzzl","refer","relat","repres","right","same","similar","simplest","simplifi","such.","system","system.","tabl","technologies.","therefor","through","time","topic","turn","tutori","tutorials.","two","understand","us","valu","within","work","x"],"pages/part-6-hexadecimal-number-system.html":["'h'","(2","(4","*","+","0","0)","0,","0010","1","1)","1,","10","10,","10.","1010","12","13","15","16","16.","192","1st","2","2,","240","245","256","2a","3","3,","32","4","4,","40","4096","42","42.","5","5,","6","6,","61,440","61,901","6:","7","7,","8","8,","9","=","=>","^","a,","abov","add","addit","anoth","answer","ask","assembl","assembly.","b","b,","base","base.","becom","below","binari","binary,","bit","bit.","bits,","bits.","brief","byte","byte.","c","c,","call","case,","click","coffee,","column","combin","come","comment","compar","complet","content","conversion:","convert","cover.","creat","critic","d","d,","deal","dealt","decim","decimal,","decimal.","decimal:","differ","discuss","e","each","ear","easier","emphas","engin","equal","equivalent.","everyth","examin","exampl","except","excit","express","f","f1cd","f5","final","focu","follows.","follows:","formula","forward","fun","fundament","further","further.","give","go","grab","guy","happi","help","help!","here","hexadecim","hexadecimal,","hexadecimal.","hexadecimal:","https://github.com/mytechnotalent/revers","import","it'","keep","learn","lesson","let","let'","littl","long","look","low","mani","masters,","memory.","mind","more","much","need","next","next.","nibble.","now","number","number:","numbers.","ok","ok!","order","out","over","part","picture.","pleas","point","possibl","power","probabl","proce","program","put","questions,","rang","re","reason","rememb","repres","represent","revers","right.","same","saying:","see","sever","show","similar","simpl","smoke","spend","start","stuff!","subdivid","subtraction:","such:","switches,","symbols.","system","system,","system.","systems!","tabl","table:","tackl","take","therefor","therefore,","this!","time","togeth","top","topic","transistor","tutori","understand","us","valu","want","way","way.","whole","with.","work","x","x86","yourself"],"pages/part-7-transistors-and-memory.html":["0","1","1,","2","3","3.","7:","abil","absenc","act","add","addit","allow","answer","appear","appli","ask","ask.","assembl","back","base","basic","becom","below","between","binari","bit","box,","brief","byte","calculators,","capacitor","cell","cell.","chang","choke","click","complet","comput","conjunct","consol","content","convers","core","cover.","crystal","current","day.","debugg","deep","deeper","digit","diod","discuss","dive","do?","down","each","easili","effect","electr","electron","emphas","engin","exampl","execut","field","first","first.","flow","focu","format","fulli","get.","give","go","go!","grasp","great.","greatest","gui","here","hexadecim","hold","https://github.com/mytechnotalent/revers","ida","import","indic","input","is,","jump","keep","last","lesson","lesson,","lesson.","let","let'","librari","linux","machin","made","malware.","manual","mean","memori","microscop","minimum","modern","much","never","next","now","number","off.","on","oper","order","others.","ourselv","out","output","part","patienc","persever","pin","pin,","pin.","pins.","pleas","portabl","presenc","pro","profession","program","properti","put","question","re","read","real","refer","remain","remov","respect","revers","right","see","select","server","set","short","silicon","similar","simple,","simpli","simply,","small","soap","state","step","stop","subtract","switch","switches.","system,","system.","tabl","taken","them.","therefor","threat","togeth","took","topic","transistor","transistors.","tutori","understand","until","us","util","veri","voltag","way.","week","win","window","without","words.","world","world,","zoom"],"pages/part-8-bytes-words-double-words-etc.html":["(32","(64","(hexadecimal)","(in","0","0.","0x","0xf7fac3dc","0xffffd040","0xffffd040,","255.","256","256.","2^8","32","4","40","6:","8","addit","address","address.","again,","alway","applic","architecture.","assembl","basic","begin","below","binari","bit","bit)","bit).","bits.","break","breakpoint","brief","byte","bytes,","bytes.","call","click","comment","complet","comput","computer.","content","cours","cover.","cpu","cpu.","critic","d040,","debugger:","design","digit","disassembl","discourag","discuss","discussing.","does.","don't","doubl","down","dozen","each","eight","engin","esp","etc...","examin","exampl","example,","executing,","feel","fetch","ffffd040","finally,","finish","first","four","free","frustrat","function.","futur","gdb","give","go","hello","here.","hexadecim","hexadecimal),","hexadecimal.","https://github.com/mytechnotalent/revers","import","insid","instruct","know","learn","length","length.","lesson","lessons.","let","let'","like:","linux","load","locat","long","long.","look","look.","machin","main","make","measur","memori","memory.","more","new","next","nibble.","noth","now","number","on","otherwis","part","peek","pleas","point","pointer.","power","program","quad","questions.","read","regist","register.","review","right","row","see","sens","set","simpl","simpli","size","sneak","soon","start","step","store","system,","tabl","take","those","through","time","topic","tutori","two","understand","uniqu","us","util","valu","value.","want","word","word.","words,","world","worri","x86","yet."],"pages/part-9-x86-basic-architecture.html":["(4","1)control","2)execut","3)regist","32","4","4)flag","9:","addit","address","alter","applic","architectur","are:","basic","begin","below","below.","binari","bit","brief","bu","byte","call","click","clock","complet","comput","connect","consist","contain","content","control","cover.","cpu","cpu,","cpu.","data","deal","decod","deeper","detail","devic","direct","discuss","dive","do.","doubl","each","eip","eip,","emit","engin","entir","event","execut","executed.","fetch","first","flow","futur","gener","give","goe","https://github.com/mytechnotalent/revers","i/o","ia","immedi","indic","input/output","instruct","instruction,","intend","intern","intervals.","length)","lesson","load","locat","look","machin","made","make","malwar","memori","memory.","next","number","occurs.","operates.","oscil","part","pattern","pleas","point","pointer","popular","precis","procedur","process","program","puls","purpos","read","regist","register,","registers.","retriev","see","sequence.","simpli","specif","squar","storage.","store","system","tabl","techniqu","temporari","them.","therefor","thing","ti","topic","tutori","tutorial,","uniqu","unit","up","upon","us","wave","way","within","word","x86"],"pages/part-10-general-purpose-registers.html":["(in","(or","1","10:","16","2","32","4","64","8","8080","abov","accumulator,","acquir","addit","addition","addition,","address","ah","ah,","al","al,","architectur","architecture.","arithmet","array","ax","backward","base","below","below:","bh","bh,","bit","bits.","bl","bl,","bottom","bp","bp,","brief","broken","bx","byte","calculations.","ch","chip","chipset.","cl","click","code","compat","complet","comput","confus","content","continu","counter","cover.","creat","current","cx","data","data.","destin","destination)","dh","di","di,","discuss","dl","down","dramat","ds","dx","each","each.","eax","eax,","eax:","ebp","ebp:","ebx","ebx,","ebx:","ecx","ecx,","ecx:","edi","edi,","edi:","edx","edx:","engin","equival","es","esi","esi,","esi:","esp","esp:","evolv","extend","focu","follows:","frame.","function","further","gener","give","high","hold","https://github.com/mytechnotalent/revers","i/o","ia","illustr","impli","index","keep","known","length","length.","lesson","let","local","loop","low","lower","main","mean","mind","name","new","next","number","offset","oper","operations.","over","part","pleas","point","pointer","pointer.","previou","process","processor.","processors.","program.","programs.","purpos","purposes.","read","refer","referenc","regist","register.","registers.","repeated.","repres","result","return","review","same","segment","segment).","segment,","segment.","si","si,","so.","someon","sourc","sp","sp.","specif","ss","stack","still","store","string","studi","subdivid","tabl","temporarili","time","today'","top","topic","true","tutori","type","us","util","valu","values.","variables.","version","well.","write","x86"],"pages/part-11-segment-registers.html":["(.data","(.text","(eip)","(ss)","(x86","11:","16","32","4,294,967,296","4gb","access","access.","addit","address","appropri","architectur","area","arrang","assign","base","below","billion","bit","bit),","brief","cases.","chang","click","close","code","complet","computer,","consid","contain","content","continu","control","cover.","cs","cs:","data","default","defin","differ","directli","discuss","ds,","ds:","dure","each","element","engin","ensur","es,","es:","except","explicitli","express","extra","flat","focu","follows:","four","fs","fs:","function","give","gs","gs:","help","https://github.com/mytechnotalent/revers","ia","implicitli","individu","instruct","keep","larger","lesson","limit","load","locat","locations.","memori","memory.","method","mind","mode","model","more","new","next","offset","oper","operations.","os","overlap.","part","pass","physic","pleas","point","pointer","pointer.","potenti","procedur","processor","program","program.","protect","purposes.","read","receiv","refer","referenc","region","region.","regist","register.","relev","retriev","run","section","section)","segment","segment.","segments.","separ","six","space","space.","specif","ss:","stack","start","store","string","system","system.","tabl","task","this.","those","three","topic","tutori","us","valu","value.","variabl","within","work"],"pages/part-12-instruction-pointer-register.html":["0x0804843b","0x680cec83.","12:","32","=>","addit","address","address.","advantage!","again","ahead","alter","anoth","applic","architectur","area","assembl","back","basic","befor","below","break","breakpoint","brief","c","call","click","code","code!","code.","compil","complet","condit","consol","content","continu","control","control.","cover.","deal","debugger.","detail","disabl","disassembl","discuss","dive","do","don’t","down","each","eip","eip,","engin","engineering.","examin","exampl","execut","execute.","executed.","exit.","fact","flow","flow,","follow","forward","function","function.","functionality.","gdb","give","go","hack","hard","hello","here","hijack","https://github.com/mytechnotalent/revers","ia","ia32","idea","import","in.","instruct","instruction.","ip","is?","it.","jump","keep","kind","languag","later","learn","lengthi","lesson","let","look","main","main+17","make","malici","mani","memori","mind","more","much","never","next","normal","note","now","oper","originated.","over","part","particularli","pay","pleas","point","pointer","potenti","power","print","proactiv","program","program!","program.","purpos","question","ran","raw","regist","registers.","revers","run","see","see:","series.","set","show","simpl","simpli","sometim","start","stay","step","such","tabl","tada!","take","today,","topic","trace","track","tutori","under","understand","unreach","unreachablefunct","unreachablefunction.","us","want","watch","whatev","work","world","world!","world!`","worri","write","‘hello"],"pages/part-13-control-registers.html":["(not","13:","32","access","addit","applic","architectur","below","bit","brief","can’t","capabl","chang","characterist","chip","click","complet","conjunct","content","continu","control","cover.","cpu","cr.","cr0:","cr1:","cr2:","cr3:","cr4:","current","data","determin","directli","directori","discuss","each","enabl","engin","entri","examin","execut","fault","feather","featur","five","flag","flags.","follows:","gener","give","gp","host","https://github.com/mytechnotalent/revers","ia","implemented)","indic","information.","lesson","level","low","made","memori","mode","modifi","move","next","normal","on","onc","oper","page","part","pleas","processor","processor.","program","programm","purpos","queri","regist","register,","registers.","requir","run","running.","state","statu","system","tabl","task.","topic","tutori","us","usual","valu","value,","variou"],"pages/part-14-flags.html":["1","14:","3","32","8086","ac:","access","addit","address","adjust","af:","align","answer","applic","application.","arithmet","assembl","automat","away","becom","behavior","below","big","binari","bit","bit.","borrow","brief","bu","byte","c","calculation.","call","carri","case","cf:","chain","check","checked,","clear","cleared,","clearer","click","code","complet","complex","complic","concept","condit","conjunct","contain","content","control","control,","correct","corrupt","cover.","cpuid","cr0","critic","current","data","deal","debug","debugging.","decim","decrement","defin","denied.","determin","df","direct","discuss","each","eflag","enabl","engin","engineering.","enter","equal","essenti","even","except","execut","execution.","exist.","extern","extrem","fact","field","final","flag","flags,","flags.","flow","follows:","function","gener","give","group","handl","help","here","https://github.com/mytechnotalent/revers","i/o","id","id:","identif","if:","import","increment","indic","inform","information.","input","instead","instruct","instruction.","integ","interrupt","involv","iopl:","kind","languag","language.","less","lesson","level","link","map","math","mechan","memori","mode","mode.","modifi","much","n","neg","negative.","nest","never","next","not.","nt:","number","occur","occurs,","odd.","of:","on","oper","operation.","os","output","overflow","pariti","part","pend","pending.","perform","pf:","phase","pleas","posit","previous","privileg","processor","processor.","program","protect","real","receiv","references.","regist","register.","remain","replic","repres","request","requir","required,","respect","respond","result","resum","revers","rf:","run","set","set,","sf:","sign","signal","signific","singl","small","sources.","space","space.","specif","stack.","statu","status,","step","string","string.","success","support","system","tabl","take","task","tasks.","tf:","three","time,","topic","total","train","trap","tutori","unsign","us","util","valu","verifi","vif:","vip:","virtual","vm","vm:","wait","way","whether","zero","zero.","zf:"],"pages/part-15-stack.html":["(esp),","0x00001000","0x00001000,","0xffffd030","0xffffd050.","12","15:","5","a,","abov","above.","absolut","abstract","access","activ","actual","ad","add","addit","addm","addme(int","address","address,","addresses.","advantag","alloc","allow","alway","area","argument","around","around.","arrow","asid","assembl","attack","attempt","avail","b)","b),","b)’","b.","becom","befor","below","below,","better","bodi","both","bottom","breakpoint","brief","build","c","call","certain","chang","circumst","clear","click","closely.","code","code.","comment","compil","complet","complete.","complic","comput","confus","consid","contain","content","contigu","continu","control","copi","corrupt","cours","cover.","cpu","creat","critic","data","deal","declar","deleted.","despit","develop","develop,","development.","diagram","discuss","done","downward","duplic","durat","each","effici","engin","esp","essenti","examin","exampl","example,","excess","execut","exist","exists,","exit","exits,","expect","fast.","featur","find","finishes.","first","fix","forever.","forward.","four","fp","frame","frame.","framework.","free","freed","freed,","function","function,","function.","functions.","fundament","futur","garbag","get","give","go","greater","grow","happen","happening.","head","heap.","help","here.","higher","https://github.com/mytechnotalent/revers","idea","implement","import","in,","includ","increas","insid","instruct","int","it.","keep","languag","larger","largest","last","learn","lesson","let","let’","lifo","like:","limit","list","local","local.","locat","logic","look","lost","lot","lower","main","main(void)","main,","main.","malwar","manag","manual","manually.","meantime,","memori","memory.","mind","mind,","minim","model.","modern","more","move","move,","multipl","need","never","new","next","normal","now","number","offset","on","onc","onto","oper","opposit","optim","organ","os","out","overflow","overflows.","overwhelming.","part","pass","perspective:","place","pleas","point","pointer","pointer.","pop","pop.","prevent","print","program","program,","protect","push","put","questions,","random","realiti","recent,","record.","refer","region","regist","registers,","reserv","restor","return","returns,","run","section","see","seri","set","sever","show","shown","shrink","simply,","size.","smaller","smallest","softwar","sp","space","special","specifi","spin","stack","stack,","stack.","stage","start","store","structur","subtract","such","sum,","system.","tabl","take","task.","temporari","therefor","this,","this:","those","throughout","time","top","topic","tutori","tutorials.","two","under","understand","unreachablefunct","until","up","upward","upward.","us","usual","valid","valid.","valu","value.","values.","variabl","variables.","vary.","veri","want","way","well","whenev","work","you."],"pages/part-16-heap.html":["16:","access","addit","alloc","analysi","anywher","around","array","asid","assembl","automat","avail","basic","below","block","both","box","brief","built","c","calloc(),","chang","choos","click","complet","comprehens","comput","computer'","computer.","concept","content","cover.","cpu.","creat","current","de","demonstr","disassembl","dive","don't","don’t","downward","durat","dynam","each","effect","engin","engineering.","environ","essenti","float","focus","forward","free","free()","function","function,","functions.","futur","give","global","globally,","good","grow","heap","heap,","heap.","https://github.com/mytechnotalent/revers","import","instal","is,","it.","keep","known","larg","larger","leak.","learn","lesson","limit","linux","look","malloc()","malloc(),","malwar","manag","manually.","memori","memory.","mind,","more.","need","needed,","next","onc","part","physic","pleas","pointer","process","program","program.","progress","purpose.","read","realloc()","region","respons","restrict","revers","scope.","section","see","seri","set","shrink","size","size.","skill","slightli","slower","softwar","someth","stack","stack,","step","step,","still","struct","such","tabl","take","thing","this.","tightli","to,","tool.","topic","tutori","tutorials.","understand","unlik","upward.","us","variabl","veri","very,","virtual","week","won't","written","you,"],"pages/part-17-how-to-install-linux.html":[".dmg",".iso",".iso,","108355","16.00","17","32","5.0.24","8.00",">_","abov","above,","account.","addit","addition,","amount","applic","apt","area","assembl","avail","available.","bar","begin","below","better","big","bit","blue","both","bottom","box","brief","button","button.","c","call","cancel","cd","check","chose","circle.","click","close","code","coding!","cog","command","commands.","compil","complet","comput","congratulations!","content","continu","continue.","copi","corner","cover.","creat","create.","current","date.","desktop","devic","dial","directori","disk","doubl","download","each","earlier","editor","engin","enter","enter.","environ","eras","examination,","examination.","execut","exist","field","file","file.","final","finished,","first","first,","folder","follow","forward","free","function","futur","gb","gcc","give","go","green","guest","household,","http://www.ubuntu.com/download/desktop","https://github.com/mytechnotalent/revers","https://www.virtualbox.org/wiki/download","icon","image…","import","inform","insert","instal","installed.","it.","keep","keyboard","keyboard.","launcher","layout","learn","left","lesson","link","linux","linux!","locat","lock","login,","long","look","mac","mac,","mac.","machin","mkdir","move","multilib","name","necessari","need","new","next","next.","noroot","now.","onc","open","open.","oper","order","out","out.","overwhelm","packag","part","password","place","pleas","point","point,","power","press","process","program","progress","ram","re","resources.","restart","right","run","same","screen","screen.","screen:","see","select","shown","simpli","slider","slider,","softwar","sourc","start","start.","step","store","sudo","suggest","system.","tabl","take","termin","text","time","timezon","top","topic","tutori","tutorials.","type","ubuntu","ubuntu.","up","up,","updat","upgrad","us","username.","veri","verif","version","vim","virtual","virtualbox","vm.","week","whatev","win.ex","window","window.","with.","within","work","x","yellow","–"],"pages/part-18-vim-text-editor.html":["$","0","18","4",":q!",":w",":wq","[copi","[delet","[move","[put","[quit","[save","[undo","addit","allow","arrow","assembl","awar","b","back","begin","begin,","below","better","between","brief","chang","changes]","charact","character]","clean.","click","code","code.","command","commands:","common","complet","configured,","congratulations!","consist","content","copi","cover.","creat","current","cursor","cursor]","d","dd","debug","done","down","each","editor","editor.","editor]","end","engin","enter.","essenti","exit","expandtab","file","file!","file]","first","format","forth","forward","functionality.","give","go","h","help","https://github.com/mytechnotalent/revers","import","indent","insert","instal","instead","it’","j","k","keep","key","key.","l","language.","last","learn","left","lesson","let","letter","line","line,","line]","linux,","look","mean","mind,","mode","mode.","move","need","next","now","number","of.","on","on]","onc","open","order","p","part","per","perform.","pleas","posit","preced","press","properli","rememb","right","rule","save","see","set","sever","shiftwidth","show","simpli","smartindent,","space","start","state","statement","tab","tabl","tabstop,","talk","termin","terminal.","text","thing","time","topic","tutori","type","type:","typing,","typing.","u","up","us","version","vi","vim","vim.","want","way","week","word]","work","yy","‘:wq’","‘esc’","‘i’","‘i’."],"pages/part-19-why-learn-assembly.html":["18","19","32","64","abov","addit","affect","allow","although","analyst","anyth","application.","archaic","ask","assembl","assembly.","attack","attack.","author","basic","below","binari","binary.","bit","break","brief","brought","can’t","career","click","code","compil","complet","content","continu","control","convers","cover.","craft","crap?","cyber","daily.","damn","danger","deal","debug","debugg","demand","design","destruct","dinosaur","down","down,","each","eip","else,","encourag","engin","entir","everyth","exactli","examin","face","flow.","focu","forward","game","gave","gdb,","give","go","goe","grab","great","greatest","grow","hacker","handling.","hardwar","hardware.","hell","high","higher","hot","https://github.com/mytechnotalent/revers","human","immedi","instruct","instruction,","java","job","knee","languag","language.","language?","learn","lesson","let","level","login","look","low","machin","malwar","malware,","mani","manipul","middl","more","multitud","need","network","network.","new","next","noth","numer","offer","on","onc","open","order","os","over","part","path","peopl","people,","pid","pleas","pointer","possibl","prior","process","process.","profession","program","program.","properli","question","read","read,","readable.","revers","run","said,","secur","see","seri","series.","significantli","singl","societi","someon","sourc","state","stated,","system","tabl","talk","termin","thing","this,","those","threat","threat.","time","time.","tool","topic","town.","tri","true,","tutori","tutorials,","ultim","understand","us","useless","valu","wast","week","world,","write","written","written,","wrong","x86"],"pages/part-20-instruction-code-handling.html":["(8","0","0.","00","00.","01","0x0","0x1","1","12","15","20","3","32","4","80483de","=","abov","addit","address","addresses.","alreadi","appear","area","assembl","b8","basic","be:","below","between","bit","brief","byte","byte).","c","call","center","click","code","code.","command.","compil","complet","concept.","confus","contain","content","correspond","cover.","cpu","creat","data","defin","detail","differ","dive","do","don’t","down","each","eax","eax,","element","endian","endian?","engin","examin","exit","far","final","find","first","forward","function","function.","give","guid","handl","head","help","here","https://github.com/mytechnotalent/revers","ia","includ","inform","instruct","integ","intel","it.","keep","languag","last","left","left.","length","lesson","let","list","littl","look","lower","main","make","mean","memori","memory,","memory.","mind","mind,","more","mov","move","need","new","next","next.","notat","objdump","ok.","on","op","opcod","order","os.","paramet","part","perform","performed.","place","platform","pleas","pointer","pretend","process","processor","program","program.","read","regist","rememb","repres","representation.","result","return","revers","review","right","right.","run","scenario","see","seri","set","simpl","simple,","simpli","snippet","special","specif","spoke","stack","stack,","stack.","start","started.","store","stored.","straight","sure","syntax","syntax.","tabl","task","task.","test.c","therefor","tool","topic","track","tutori","tutorial.","type","understand","uniqu","up","us","valu","veri","void","want","was:","week","wide","within","–"],"pages/part-21-how-to-compile-a-program.html":["%ebp","%esp,","./","./exit","0","0.","1,","2","21","3","32",":","[thi","abov","above.","actual","addit","again","amount","area","assembl","assembly,","at&t","begin","below","below:","biggest","binari","binary.","bit","breakpoint","brief","c","c,","call","capit","case","click","code","code!","code.","command","compar","compil","complet","content","convert","cover","cover.","creat","debugg","debugger.","deeper","destin","differ","disassembl","dive","each","ebp","ebp.]","engin","equival","esp","esp,","esp.]","essenti","exactli","examin","examinations,","except","execut","executable.","exit","exit.","exit.o","far","fashion.","file","file.","final","first","focu","follow","forward","futur","ga","gdb","gener","give","gnu","go","good","happens.","https://github.com/mytechnotalent/revers","human","increas","instruct","intel","l,","languag","language.","last","later","lesson","let","let’","linker","linker:","linux","list","look","m32","main","mean","mention","more","mov","move","movl","much","name","natur","need","next","noth","numer","o","o0","objdump,","object","optim","os.","output","part","pleas","press","program","program.","pure","readabl","return.","reversed.","review","run","s","same","saw","see","seri","set","set.","simpli","singl","so,","sourc","start","state","step","substitut","switch","switch.","syntax","syntax,","syntax:","tabl","take","tell","terminal:","thing","three","throughout","thu","time","topic","turn","tutori","tutorial.","tutorials.","type","type:","up.","us","util","valu","varianc","want","week"],"pages/part-22-asm-program-1-moving-immediate-data.html":["#","$0,","$0x80.","$1,","%eax","%ebx","./moving_immediate_data","/usr/include/asm/unistd_32.h","0","0,","0x80","0x80,","0x80.","1","1)data","1)program","1,024","2)bss","2)debug","20","21","21,","22","255","256","3","3)hack","3)text","3.","32","4","64","7,","[comment]","[label]","[move","[operands]","_start","abil","abov","access","activ","actual","addit","addition,","address","advantag","allow","amount","analysi","answer","anyth","appreci","approach:","apt","architectur","area","asm","assembl","assembler:","at&t","attack","back","background","basic","be","befor","begin","begins.","below","between","bit","bottom","brief","buffer","byte","call","can’t","carri","cat","chang","click","code","code,","code.","come","command","command.","comment","comments.","commun","compil","compiler.","complet","compon","compris","constant","constantli","contain","content","continu","control","convert","cornerston","correct","cover","cover.","creat","critic","danger","data","data]","debug","debug!","debugg","debugger.","decim","declar","deeper.","demonstr","develop","diagram","diagram:","directli","discuss","dispatch","distinct","dive","divid","each","easi","eax","ebx","elf32","elf_i386","end","engin","ensur","enter","entir","entri","entries.","etc.","even","everyon","everyth","exactli","examin","execut","execution.","exist","exit","f","fault.","few","file","final","first","flow","flow.","focu","follow","following:","follows:","forth","forward","forward.","fulli","gate","gateway","gdb","give","global","gnu","go","gui","hack","heap","heck!","here,","high","hood.","https://github.com/mytechnotalent/revers","ida","ignor","illustr","immedi","implement","includ","inform","initi","instal","instruct","instruction,","instruction’","int","intel","intern","interrupt","interrupt.","iret","keep","kernel","key","keystrokes,","know","languag","language.","languages.","ld","learn","lesson","let","let’","level","like.","liking.","line","linux","linux,","littl","load","long","look","lookup","m","made","malwar","mani","manipul","manipulation.","maximum","mean","memori","memory.","middl","mind","mind,","mnemon","mode","modern","more","move","moving_immediate_data","moving_immediate_data.","moving_immediate_data.asm","moving_immediate_data.o","movl","much","name","names,","nasm","nativ","natur","necessari","necessarili","need","netwid","new","next","none","number","o","occupi","offset","ok","on","open","oper","operand","order","os","out","output!","paramet","part","patch","patient","per","perman","place","pleas","point","pop","portion","possible.","prior","pro","program","prompt","proper","properli","protect","purpos","question","regist","remov","repres","reserv","respect","return","routines.","run","runtime.","sandbox","second","section","section:","sections:","see","segment","semicolon","sequenti","seri","servi","servic","set","show","simple,","sizes,","snapshot","softwar","sort","space","space,","space.","specifi","stack","stack,","stack.","start","statement","static","step","structur","successfulli","such","sudo","symbol","syntax","syntax,","sys_exit","system","systems,","systems.","tabl","table.","take","taken","tell","termin","them.","there.","thing","third","this?","those","though","threat.","three","through","time","tool","top","topic","track","tutori","tutorials.","two","type","type:","typing:","under","understand","uniniti","up","upgrades.","us","user","util","valu","values,","variables.","vector","veri","version","very,","vim","want","way","week","well","well.","whatev","whole","work","work,","written","wrong.","–","–32"],"pages/part-23-asm-debugging-1-moving-immediate-data.html":["/x","0x50","0x50.","0x64","0x8049090","0x90","1","100","2","23","[move","_start+0","_start+5","_start.","abov","above.","addit","address","advanc","again","asm","assembl","at&t","b","back","befor","begin","below","between","binari","both.","breakpoint","brief","buffer","byte","case","clearli","click","code","comfort","command","comments.","complet","comput","consequ","content","cover.","cpu","creat","data,","data]","deal","debug","decim","decimal.","deliber","demonstr","design","disas,","disas.","disassembl","disassembly,","dive","do","each","eax","eax.","engin","examin","exampl","few","first","flavor","for.","forth","forward","gdb","gdb.","give","go","good","hack!","here","hex","hex.","hit.","https://github.com/mytechnotalent/revers","immedi","inform","insid","instruct","instruction.","intel","it,","keep","label","last","leav","lesson","let’","load","locat","look","mani","mean","mind","move","moving_immediate_dat","nativ","next","non","nop","now","on","opcod","oper","painfulli","part","perspect","pleas","practic","print","process.","program","programs.","proper","properli","purpos","q","questions,","r","r.","refer","regist","register.","registers.","review","run","see","see.","set","show","si","simpli","slide","sourc","space","start","state","step","stick","syntax","tabl","time","topic","tutori","type","type:","us","valu","want","week","x/xb","yield"],"pages/part-24-asm-hacking-1-moving-immediate-data.html":["$eax","0x64","0x66","0x66.","0x90","1","100","102","24","=","[move","_start.","addit","asm","assembl","b","bam!","begin","below","binari","breakpoint","brief","clearli","click","code","complet","computer.","concept","content","cover.","creat","create,","data]","debug","decimal.","develop","disas.","disassembly,","dive","each","eax","eax.","engin","exampl","fact","first","forward","fun!","gdb","gdb.","give","go!","good","greater","hack","here!","hijack","hit.","https://github.com/mytechnotalent/revers","immedi","learn","lesson","let","let’","load","look","manipul","master","mean","move","moving_immediate_data","next","nop","now","on","onc","opcod","oper","over","part","perspect","pleas","point","portion","power","practic","program","program!","programs.","proper","properli","purpos","q","r","r.","run","second","see","set","si","simpl","simpli","someth","start","tabl","topic","trivial","tutori","type","type:","ultim","valu","veri","want.","week","whatev"],"pages/part-25-asm-program-2-moving-data-between-registers.html":["16","2","22","25","32","[move","access","addit","advis","alway","anoth","asm","assembl","ax","below","between","bit","brief","can’t","click","complet","content","cover.","data","data.","debug","decim","demonstr","dive","dx","each","eax","eax.","edx","engin","fastest","forward","give","go","https://github.com/mytechnotalent/revers","immedi","initi","keep","know","lesson","look","mind","move","much","next","on","other.","part","pleas","program","program!","regist","registers.","registers]","respectively.","second","see","similar","simpl","specif","speed.","tabl","topic","tutori","ultim","valu","versa.","vice","way","week"],"pages/part-26-asm-debugging-2-moving-data-between-registers.html":["0x16","2","22","26","[move","_start,","addit","again.","asm","assembl","below","below:","between","binari","break","brief","click","complet","content","cover.","data","debug","decim","disas:","dive","each","eax.","edx","engin","fire","forward","gdb","give","hack","https://github.com/mytechnotalent/revers","lesson","let","let’","look","move","next","now","part","pleas","program","program!","r:","registers]","run","second","see","si","successfulli","successfully.","tabl","topic","tutori","twice","up","valu","week"],"pages/part-27-asm-hacking-2-moving-data-between-registers.html":["$edx","0x16","0x19","2","22","25","27","=","[move","_start,","addit","asm","assembl","assembly.","below","below:","between","binari","binary.","bite","break","brief","click","complet","content","continu","control","cover.","data","decim","decimal.","disas:","dive","each","easili","edx","else.","engin","everyon","exampl","example:","fire","forward","gdb","give","go","goal","hack","here","hopefulli","https://github.com/mytechnotalent/revers","instruct","key","languag","last","lesson","let","let’","look","manipul","move","next","now","over","pace","part","pattern","pleas","program","program!","programs.","r:","registers]","rest","run","second","see","set","si","simpl","size","small","snail","someth","successfully.","tabl","third","throughout","topic","tutori","twice","understand","up","valu","veri","week","write","x86"],"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":["10","28","3","[move","addit","asm","assembl","below","between","brief","click","complet","constant","content","cover.","data","debug","decim","demonstr","dive","each","ecx.","elf_i386","engin","file","forward","give","https://github.com/mytechnotalent/revers","insid","integ","keep","ld","lesson","link","look","m","memori","mind","move","moving_data_between_memory_and_regist","moving_data_between_memory_and_registers.","moving_data_between_memory_and_registers.o","next","o","object","part","pleas","program","program!","registers.","registers]","see","specif","tabl","third","topic","tutori","type:","valu","week","–32"],"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":["0.","0xa","10","29","3","[move","_start","above.","addit","asm","assembl","below","between","break","brief","click","command","complet","constant","content","cover.","data","debug","debug!","decim","dive","each","ecx","ecx.","engin","follow","forward","gdb","give","hack","hex.","https://github.com/mytechnotalent/revers","info","insid","integ","lesson","let’","look","memori","mode","move","next","now","open","part","pleas","program!","quiet","regist","registers]","run","see","specif","step","tabl","third","topic","tutori","twice,","valu","week"],"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":["$ecx","0.","0x539","0xa","10","1337","3","30","=","[move","_start","above.","addit","anoth","asm","assembl","before.","below","between","bite","break","brief","clearli","click","command","complet","constant","content","control.","cover.","creat","data","decim","decimal.","dive","each","ecx","else.","engin","exampl","follow","forward","fourth","gdb","give","hack","hack!","hard","hex","https://github.com/mytechnotalent/revers","info","insid","integ","lesson","let","let’","look","masteri","memori","mode","move","muscl","next","now","open","part","pleas","prior","processor","program!","quiet","r.","regist","registers]","run","see","series.","set","si","si.","situat","size","someth","specif","state","tabl","through","throughout","topic","tutori","ultim","valu","varieti","veri","week"],"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":[".bss",".data","0xa","10","31","4","777","[move","abov","absolut","academ","addit","anyth","asm","assembl","below","between","brief","call","chose","clearli","click","code","complet","constant","constant.","content","cover.","data","debug","decim","deliber","demonstr","dive","each","eax","eax.","elf_i386","engin","exercis","file","flexibl","form","forward","fourth","give","hex.","https://github.com/mytechnotalent/revers","immedi","initi","keep","language.","ld","lesson","link","look","m","manipul","memori","memory.","memory]","mind","move","moving_data_between_registers_and_memori","moving_data_between_registers_and_memory.","moving_data_between_registers_and_memory.o","next","normal","o","object","part","pleas","possibl","program","program!","pure","regist","runtime.","section","section.","see","set","show","specif","stay","store","tabl","topic","tutori","type:","under","up","valu","variabl","want","week","–32"],"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":[".data","10","16","32","4","6","777","[move","abov","addit","anyth","asm","assembl","begin","below","between","brief","call","clearli","click","code","complet","constant","constant.","content","cover.","data","debug","decim","demonstr","dive","each","eax","eax.","engin","forward","fourth","gdb","give","go","hack","https://github.com/mytechnotalent/revers","immedi","initi","keep","lesson","line","look","memori","memory.","memory]","mind","move","next","part","pleas","program","program!","regist","replac","runtime.","section.","see","set","specif","store","successfulli","tabl","topic","tutori","tutorial.","up","valu","week"],"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":[".data","10","16","33","4","6","666.","777","[move","abov","addit","again","anyth","asm","assembl","begin","below","between","brief","call","clearli","click","code","code.","complet","constant","constant.","content","cover.","creat","data","debug","decim","dive","each","eax","eax.","engin","examin","fifth","forward","gdb","give","go","hack","here","https://github.com/mytechnotalent/revers","immedi","initi","keep","last","lesson","lesson.","let","let’","line","look","memori","memory]","mind","move","next","now","part","pleas","program!","re","regist","replac","runtime.","section.","see","set","sourc","step","store","successfulli","tabl","thing!","time","took","topic","tutori","tutorial.","up","valu","veri","week"],"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":["0.","1","11","2nd","34","4","5","[indirect","abov","above.","add","addit","address","address,","array","array.","asm","assembl","base","below","brief","byte","bytes.","case","click","code","complet","constant","contain","content","cover.","creat","data","debug","deeper","demonstr","determin","dive","each","ebx.","edi","element","element,","elf_i386","engin","fifth","file","forward","give","go","goe","good","grasp","https://github.com/mytechnotalent/revers","index","indic","indirect","indirect_addressing_with_regist","indirect_addressing_with_registers.","indirect_addressing_with_registers.o","integ","keep","ld","lesson","link","locat","look","m","manipul","memori","memory.","mind","mode","more","move","next","o","object","occupi","offset","on","on.","part","past,","place","pleas","program","program!","registers.","registers]","see","select.","separ","sequenti","seri","singl","size","start","studi","system","tabl","take","therefor","time","topic","tutori","type:","ultim","unit","us","util","valu","value.","values.","want","week","–32"],"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":["0","1","11","18","25","25.","35","5","6","8","[indirect","_start,","_start.:","a24","abov","actual","addit","address","analyst","array","array.","arrays.","asm","assembl","at&t","back","based.","beginning!","below","between","binari","both.","break","brief","chang","choos","click","code","code.","comfort","compil","complet","complex","confus","constant","content","convert","cover.","critic","d","debug","decim","deliber","demonstr","differ","dive","each","easili","edi","edi.","engin","essenc","examin","explained.","few","fifth","first","flavor","forc","forth","forward","fun","gdb","gdb.","give","go","grep","hack","higher","https://github.com/mytechnotalent/revers","immedi","index","indirect","indirect_addressing_with_regist","insid","intel","introduct","it’","keep","label","label.","language.","last","lesson","let’","level","line","load","look","m","malwar","mani","manipul","manual","memori","mind","mind,","move","next","now","number","objdump","on","origin","overwrit","part","path","pleas","previou","prior","program","program!","program.","provid","question","recap.","registers.","registers]","regularli","revers","review","schedul","second","see","show","someday","sourc","start","step","such","syntax","syntax.","tabl","take","through","topic","tutori","understand","us","valu","value.","view","want","way","week","work","x86.","|"],"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":["*0x804909e","*0x804909e.","0x804909e","0x80490a2","0x80490a2.","32","36","4","5","66","8","8.","[indirect","_start","_start.","abov","above.","addit","address","address.","advanc","again","array","array.","asm","assembl","below","below.","binari","bit","break","brief","broke","byte","case","chang","click","command","comment","complet","constant","content","continu","cover.","data.","decim","decimal.","dive","each","element","engin","examin","forth.","forward","gdb","give","hack","hack!","here","hold","https://github.com/mytechnotalent/revers","import","insid","instead","integ","label","leav","lesson","lesson.","let’","load","locat","look","manipul","memori","more.","move","next","on","onc","part","pleas","pointer","print","prior","program","program!","put","questions,","ran,","reexamin","registers]","rememb","respect","runtim","see","sixth","sourc","state","store","successfulli","tabl","them.","through","topic","tutori","ultim","understand","valu","veri","week","x86","yield"],"pages/part-37-asm-program-6-cmov-instructions.html":["%eax","%ebx,","0]","14","1]","21","22.","24","37","6","=","=0]","[carri","[cmov","[overflow","[pariti","[sign","[zero","abov","addit","appropriately.","array","as:","ascii","asm","assembl","befor","begin","below","between","binary.","brief","carri","cf,","click","cmov","cmov_instruct","cmov_instructions.","cmov_instructions.o","cmova","cmovb","cmovc","cmove","cmovg","cmovl","cmovn","cmovna","cmovnb","cmovnc","cmovng","cmovnl","cmovno","cmovnp","cmovnz","cmovo","cmovp","cmovpo","cmovz","cmp","code","code.","compar","comparison","complet","condit","content","convert","cover.","cycl","debug","demonstr","determin","differ","display","dive","each","eax","ebx","ebx.","eflag","elf_i386","engin","equal","examin","exit","experienc","feed.","file","final","find","find_smallest_valu","first","flag","forward","function","give","greater","https://github.com/mytechnotalent/revers","indic","instruct","instructions.","instructions]","integ","is.","jmp","keep","ld","less","lesson","let","line","link","look","loop","lowest","m","mathemat","message,","mind","move","need","neg","new","next","noth","o","object","ok","oper","operand","operands.","operations.","origin","overflow","pariti","part","period","pf","pleas","point","posit","prevent","processor","program","program!","programm","refresh","regist","register.","relationship","reli","replac","respect","review","save","second","see","series.","set","sf","sign","simpli","sixth","smaller","sourc","speed","statement","statement.","subtract","such","sys_writ","tabl","talk","therefor","three","through","topic","tutori","two","type:","ultimately.","unsign","up","us","util","valu","week","work","xor","zero","zf","–32"],"pages/part-38-asm-debugging-6-cmov-instructions.html":["$ebx.","&answer.","0x08048092","0x080480b1","31.","38","46.","6","7.","[cmov","addit","answer,","ascii","asm","assembl","below","break","brief","click","code.","complet","content","convert","cover.","debug","dive","each","engin","equival","examin","forward","give","hack","https://github.com/mytechnotalent/revers","instructions]","lesson","let","line","look","next","now","ok","order","part","pleas","print","printabl","program!","r","re","rememb","run","see","sixth","sourc","tabl","topic","tutori","type","valu","week","x/1c","‘7’"],"pages/part-39-asm-hacking-6-cmov-instructions.html":["$eip","0x080480dd","39","6","7","=","[cmov","_start.","addit","anywher","asm","below","binari","binary.","bit","brief","bring","broke","bypass","choose.","click","code","command","complet","content","cover.","debugger.","each","engin","execut","exit","expected.","final","forward","gdb.","give","hack","https://github.com/mytechnotalent/revers","insid","instruct","instructions]","jump","lesson","let’","look","next","nop","now","part","pleas","routine.","run","see","series.","set","smallest","tabl","teach","topic","tutori","up","us","valu","week","within","wrap"],"pages/part-40-conclusion.html":["40","addit","all.","allow","android","assembl","assembly,","bare","below","benefici","brief","c++","c,","career","click","complet","comput","conclus","content","cover.","develop","development.","devic","each","engin","engineering,","even","everyon","extens","forward","futur","give","higher","hopefulli","https://github.com/mytechnotalent/revers","impact","import","io","java,","join","languag","languages.","lesson","level","look","make","malwar","matter","metal","more","natur","part","pleas","power","program","pursu","python","rapid","revers","second","seri","significantli","tabl","thank","today","tomorrow!","topic","tri","tutori","understand","want","work","you."],"pages/arm-32-course-1.html":["(part","1","1)","32","architectur","arm","bit","cours","dive","let'","rightaway!"],"pages/part-1-the-meaning-of-life.html":["1","2,000","64","64.","\\_arm64","addit","anoth","approach","architectur","arm","assembl","attack","autom","basic","below","brief","c++","c++?","catastroph","click","complet","comprehens","content","cours","cover.","crippl","day","develop","each","engin","environment.","execut","facet","few","full","fundament","further","give","go","hack","https://github.com/mytechnotalent/hacking\\_c","languag","learn","lesson","level","level.","life","low","mean","next","over","part","pass","pleas","primarili","profession","python","ransomwar","relat","revers","roughli","see","seri","set","societi","step","tabl","take","topic","truli","understand","up","veri","way.","wide","world","–"],"pages/part-2-number-systems.html":["(hex)","(off","(on","(technic","+","+5v","0","0).","0.","0011","0101","0111","0:","0v","0v.","0x","0x3a","0x5f","1","1)","1)can","1,","10","1000","1010","1101","1111","120","120:","128","15","16","16^0","16^1","2","2)can","2017,","24","24.","24:","3","3)can","32","352","4","4)can","5","5)can","56","56.","56:","6)can","64","7)can","8","8)can","8.","80","850","8:","93","95","=","abov","above,","ad","addit","addition!","address","applic","arm","as:","ask","assembl","assembly,","base","basic","bcm2837","befor","begin","below","binari","binary,","binary.","bit","bits.","bottom","brief","byte","byte.","c++,","c,","carri","check","click","code.","column","combin","compar","complet","comput","conjunct","consid","content","convert","core","cover.","crap","creating,","data.","deal","debug","decim","decimal,","decimal.","denot","digit","discuss","dive","down","each","each.","effect","engin","equal","even","everyth","examin","exampl","f","familiar","final","firm","fit","follow","following.","following:","get","give","go","goe","grasp","hack","happen","hard","hell","hex","hex.","highest","hit","hold","https://github.com/mytechnotalent/revers","human","import","inform","insid","is,","it’","java,","javascript,","keep","know","languag","learn","length","length.","lesson","let","let’","linux","liter","look","manipul","me!”","mean","memor","microprocessor","microprocessor.","mind,","moment","new","next","nibbl","no,","notat","number","oper","operates.","opposit","order","overflow","part","place","pleas","possibl","processor","processor.","put","python,","question.","r,","realiti","realli","regist","register).","registers,","rel","remaind","repres","result","revers","row.","see","seri","seventeen.","simpl","simpli","singl","sizes.","so,","stay","street,","subtract","such","suggest","system","system.","tabl","table.","take","therefor","thousand","time","togeth","top","topic","tuned!","tutori","two","ultim","understand","valu","veri","version","want","wast","week","whether","wide","within","work","works,","x","yes,","–","“whi"],"pages/part-3-binary-addition.html":["(1)","(1)11000101","+","0","0100","01010101","0111","01110000","1","1011","11000101","11010101","11110000","3","3rd","4","8","8th","=","[one","addit","below","binari","bit","bit.","brief","carri","click","complet","content","cover.","cpu","cpu.","differ","discuss","dive","each","engin","equal","examin","exampl","example:","fashions:","flag","follow","four","gener","give","had:","here","https://github.com/mytechnotalent/revers","import","keep","later","lesson","let","let’","mean","mind","next","nibbl","number:","obviou","occur","on","one]","overflow.","part","pleas","plu","refer","see","simpli","stay","subtraction!","tabl","take","topic","trigger","true.","tuned!","tutori","tutorials.","understand.","veri","week","within","zero,","–"],"pages/part-4-binary-subtraction.html":["(1)","+","0","00000010","1","1.","11111101","2.","4","4,","4.","7","8","abov","ad","addit","ask,","below","binari","bit","bit.","bits.","brief","carri","click","complet","compliment","concept","content","cover.","direct","dive","each","engin","examin","exampl","final","flag","flag.","four","futur","give","https://github.com/mytechnotalent/revers","indic","invert","lengths!","lesson","let","let’","more","move","neg","negative.","next","noth","number","operation:","overflow","part","pleas","point","posit","refer","repres","sign","start","stay","subtract","subtracted.","tabl","topic","tuned!","tutori","two","util","valu","week","word","yield","zero","–"],"pages/part-5-word-lengths.html":["0x00000000","0x00000004","0x00000008","0x0000000c","0xffffffff.","16","31","32","4","4.","5","actual","addit","address","appreci","architectur","arm","assembl","assembly,","associ","basic","befor","below","bit","bits.","block","boundari","brief","byte","bytes.","carri","chip","click","code","complet","concept","content","cover.","cpu","cpu.","critic","deal","defin","differ","differently.","dive","divis","each","engin","everyon","exampl","execut","execution.","fashion","fetch","first","framework","gener","give","go","goe","hang","here","https://github.com/mytechnotalent/revers","important?","inform","instruct","lectur","length","lesson","locat","lowest","make","memori","more","next","number","occur","operates.","over","overflow","part","pleas","prior","processor","proper","refer","registers!","rememb","see","signific","start","stay","system","tabl","there!","there.","therefor","topic","tuned!","tutori","understand","up","week","word","word.","word:","work","x86","–"],"pages/part-6-registers.html":["(gener","0x02","16","22","22,","32","6","8","@","[r10]","[r4]","access","addit","addition","aforement","apart","arm","assembl","bare","below","better","binari","bit","brief","build","byte","cell","chip","click","come","comment","compil","complet","content","counter","counter!","cover.","cpsr","cpsr.","critic","current","data","decim","detail","develop","device,","device.","dive","do.","down","dump","each","each.","engin","example:","extern","faster","few","focus","follow","gener","give","given","go","gpr","grasp","great","hack","hex","hex,","high","https://github.com/mytechnotalent/revers","ignored.","illustrate.","in,","indic","inform","intern","known","languag","ldr,","length","lesson","let","level","line","link","linux","load","locat","location.","look","machine.","make","manipul","matter","mean","memori","metal","microcontrol","microprocessor","mode","modes,","more","multi","need","needed.","next","oper","operation.","os","part","phone","pleas","point","pointer","program","purpos","r0","r1","r10","r10,","r11","r12","r13","r14","r15","r2","r3","r4","r4,","r5","r6","r7","r8","r9","r9,","regist","register)","revers","simpl","simpli","special","stack","statu","stay","storag","store","str,","such","suit","system","tabl","take","thumb.","time","topic","tuned!","tutori","two","ultim","understand","uniqu","us","user","valu","veri","way.","week","well","within","word","work","written","–"],"pages/part-7-program-counter.html":["0x00000000","15","7","addit","address","area","area.","arm","befor","begin","below","binary,","break","brief","call","care","caus","click","code","code:","come","complet","content","control","convent","counter","counter.","cover.","cpsr!","cpu","crash","deal","design","direct","directli","discuss","dive","do.","doing.","down","each","easily.","engin","essenti","exactli","execut","fault","fetch","firm","flow","follow","futur","give","go","hack","hold","https://github.com/mytechnotalent/revers","import","inform","instruct","learn","lesson","link","liter","make","mean","mode","more","mov","next","next.","obtain","oper","order","os","over","param","part","pass","pc","place","pleas","processor,","program","put","quit","r0","r15","r15,","r3","refer","reg","regard","regist","respons","return","returning.","revers","role","set","stack","standard","stay","subroutin","suggest","sure","tabl","test","think","thumb","topic","treat","tri","tuned!","tutori","tutorials.","understand","valu","want","week","wrong","–"],"pages/part-8-cpsr.html":["(","(sign","(unsign","+","0,","1","28","29","30","31","32","4","8","=","@","addit","aforement","anoth","are:","as:","assign","below","beq","bit","bits.","branch","brief","c","carri","click","cmn","cmn.","cmp","cmp,","code.","command","command,","compar","comparison","complet","concern","condit","content","cover.","cpsr","deal","directli","dive","each","effect","engin","equal","equal,","example:","fall","flag","flags.","follow","give","goe","highest","https://github.com/mytechnotalent/revers","inform","instruct","label","lesson","link","logic","make","mean","more","n","neg","negat","next","notat","occurr","occurs,","on","operand","operation.","operations)","overflow","part","particular","pleas","pre","program","r0","r0)","r1","r1,","regard","regist","register!","register.","respect","respectively.","result","same","scenarios.","second","set","stay","store","sub","subtract","such","tabl","test","topic","total","tuned!","tutori","two","updat","us","usual","v","week","within","z","zero","zero.","–"],"pages/part-9-link-register.html":["(branch","(program","9","addit","address","address.","allow","anoth","back","becom","below","bl","brief","call","call,","call.","clear","click","code","compile:","complet","consider","contain","content","continu","copi","counter","counter)","counter.","cover.","creat","debugg","directli","discourag","dive","don’t","each","engin","essenti","everyth","exactli","exampl","execut","executed,","exit.","explanatory.","few","final","finished,","function","fundament","gdb","get","give","happen","here","here.","hold","https://github.com/mytechnotalent/revers","insid","instruct","jump","ld","lesson","lessons.","link","link)","load","locat","lr","lr_demo","lr_demo.","lr_demo.o","memori","my_funct","necessari","next","no_return","o","oper","over","part","pc","percentag","perform","pleas","point","pointer!","pretti","prior","proce","process.","program","progress","r14,","r14.","r15","read","regist","register,","register.","repeat","requir","return","returns,","right","save","section.","see","self","sequenti","set","show","simpl","skip","small","source.","stack","start","stay","step","step:","subroutin","subroutines.","tabl","time","time!","topic","tuned!","tutori","understand","until","us","week","wrap_up","write"],"pages/part-10-stack-pointer.html":["(last","0x73fff3a0.","0x7efff39c","0x7efff3a0","0x7efff3a0.","0xefff39c.","10","16","30","4","48","abstract","addit","again","again,","again.","analysi","answer","arm","around","ask!","back","backward","be","becom","befor","below","beneath","binari","boot","brief","bytes.","chang","change.","choosing.","clear","click","code","code,","compil","compile:","complet","content","cover.","critic","data","debug","decim","discourag","dive","don’t","downward","downward.","each","engin","everyth","exampl","fact","few","firmwar","first","gdb","gdb.","give","go","goe","grow","happening.","heck","here.","hex","https://github.com/mytechnotalent/revers","imagin","insid","kind.","ld","lesson","lessons.","let","lifo","link","load","look","malwar","memory.","move","movement","new","next","notic","now","o","on","onc","onto","oper","origin","other.","out","out).","over","part","place","plate","pleas","pointer","pop","procedures.","push","put","r7","r7.","regist","revers","revolv","see","seri","sp","sp.","sp_demo","sp_demo.","sp_demo.o","stack","stack,","step","tabl","take","therefor","through","time","time!","time.","top","topic","truli","tutori","type","understand","valu","week","well"],"pages/part-11-arm-firmware-boot-procedures.html":["0","0x8000","0x8000,","0x8000.","0x8001,","0x8002,","0x8003,","0xa","0xe","0xea","0xfe","0xff","1)condit","1010","11","1110","2","2)op","23","24:","27","28:","3","3)offset","31","31.","32","8","@","abov","above!","above,","above.","actual","addit","address","alway","anyon","architecture.","arm","around","ask","asked!","bare","basic","begin","below","better","bit","bits,","boot","boot.","bootcode.bin","boots,","bored!","branch","break","brief","byte,","c2","cach","card","champagne!","click","code","code.","command","complet","condit","config.txt","content","content/uploads/2012/02/bcm2835","control","corner","cover.","cpu","crap","creat","critic","current","cut","danger","datasheet","datasheet!","datasheet:","device.","dive","down","ea","each","earth","editor","effort","engin","entir","even","everyth","execut","exercis","far","fe","ff","file","firmwar","firmware!","first","following:","get","give","glad","go","gpu","graphic","hack","happen","happen,","happens,","hard","held","hell","hex","https://github.com/mytechnotalent/revers","https://www.raspberrypi.org/wp","imag","infinit","it:","keep","kernel.","kernel.img","kit","know","learn","lesson","let","let’","link","linux","load","loaded,","loaded.","loads.","locat","long","look","loop.","lot","machin","malwar","matter?”","memori","memory.","metal","mind","mod.","moment","move","neumann","never","next","noth","offset","on","on?”","onc","op","open","origin","os","out","over","painstak","part","particular","passion","peripherals.pdf","pi","planet","pleas","power","power,","procedur","process","processor","progress","ram","raspberri","reach","read","realli","reboot.","receiv","replac","research","reset","rest","review","rom","root","routin","run","save","sd","set","simpli","singl","size","someth","soon","start","start.elf","state","stated,","step","stuck","sucks!”","tabl","take","talk","thing","those","through","time","today","topic","total","truli","turn","tutori","understand","understanding.","up","variety.","version","von","wanted,","week","within","word","wrap","write","–","“i’m","“ok","“so"],"pages/part-12-von-neumann-architecture.html":["(along","12","access","addit","architectur","arithmet","arm","below","between","brief","bus.","chip","click","complet","comput","content","control","cover.","cpu","data","data,","digit","dive","each","engin","form","give","hold","https://github.com/mytechnotalent/revers","instruct","instructions,","keep","lesson","load","local","locat","logic","machin","main","memori","memory)","motherboard.","move","need","neumann","next","on","oper","out","part","pipeline.","pleas","program","ram","ram,","ram.","random","read","regist","same","share","stick","store","tabl","themselv","topic","tutori","unit","von","week","well","write,"],"pages/part-13-instruction-pipeline.html":["1","1)fetch","13","2","2)decod","2,","3)execut","3,","addit","again","are:","arm","assembl","background","basi","basic","be","below","between","branch","brief","c++","capabl","click","complet","comput","configur","content","control","cover.","cycles.","decod","dive","each","engin","execut","fetch","first","flows.","flush","fresh","give","goe","grab","hardwar","https://github.com/mytechnotalent/revers","instruct","instruction.","keep","lesson","load","memori","mind,","next","now","occurs,","operation.","over","part","perform","phase","phase.","pipelin","pleas","process","processor","program!","refer","regard","regist","register.","respect","result","separ","set","stage","stage.","start","store","strong","tabl","three","topic","tutori","unit","week","within","work","–"],"pages/part-14-add.html":["\"so","(add","(here)","(set","1)the","14","2)the","3)the","53","67","about:","adc","add","add,","add.","addit","addition,","allow","android.","approach","arm","assembl","assembly,","basic","basics.","be","behind","below","binari","bite","break","brief","briefli","care?\"","carry)","class.","click","code","code:","complet","content","cover.","critic","debug","debug:","debugg","decim","dive","does.","down","each","engin","exactli","exampl","extrem","few","final","first","flag).","flags.","flow,","focu","gdb","give","go","goal","good","grasp","hack","hack:","handl","heck","help","here","https://github.com/mytechnotalent/revers","illustrate:","instruct","iphon","it'","kind,","learn","lesson","let’","look","make","malwar","minut","move","next","part","piec","pleas","program","put","r0.","r1","r2","r2.","regist","result","revers","scenes.","second","see","seri","small","speak","specif","spend","step","tabl","take","talk","though","three","topic","tutori","understand","unlik","valu","want!","week","whatev","work"],"pages/part-15-debugging-add.html":["(cpsr","(cpsr)","0x10).","0x10.","0x43","0x78","120","15","53","67","_start,","add","add.","add.o","addit","again","b","below","below:","break","brief","bring","click","compile:","complet","content","cover.","cpsr","debug","debug:","decim","decimal.","disassembly.","dive","each","engin","exampl","flag","gdb","give","hack","hex","hold","https://github.com/mytechnotalent/revers","info","instruct","ld","lesson","let’","move","next","notic","now","o","operation.","part","place","pleas","put","q","r","r,","r0","r0.","r1","r1.","r2","r2.","regist","registers:","remain","result","review","run","saw","see","start","step","successfulli","tabl","topic","tutori","unchang","week"],"pages/part-16-hacking-add.html":["119!","120.","16","66!","67","=","abil","absolut","add","addit","adds.","again","applic","assembly.","back","be","below","below:","binari","brief","case","click","combin","complet","content","control","cover.","creat","debug","debug:","decim","differ","dive","each","engin","exactli","exampl","experi","give","hack","hack!","hand","help","here","https://github.com/mytechnotalent/revers","instruct","it.","last","learn","lecture,","lesson","let","let’","make","malwar","move","new","next","now","output.","over","part","pleas","power","program","program,","r0","r1","rememb","revers","review","see","seri","set","simpl","state","tabl","topic","tutori","understand","valu","veri","want!","week"],"pages/part-17-adds.html":["(nzcv)","0110","100","17","20,","28","29","30","30,","31","31,","4,294,967,295","=","abov","accordingli","adc","adc.","adc.o","add","addit","adds.","below","binari","binary.","bit","brief","by:","c","carri","click","come","compil","compile,","complet","content","convert","cover.","cpsr","cpsr.","critic","debug","decim","dive","each","engin","exampl","except","exercis","flag","following:","gdb,","give","go","hack","here.","hex","hex.","https://github.com/mytechnotalent/revers","illustrate:","indic","ld","lesson","let’","look","make","mean:","n","need","neg","next","o","order","overflow","part","place","pleas","r0.","r1","r1,","r2","r2.","rememb","same","see","sens","set","set,","start","tabl","therefor","topic","tutori","tutorials.","understand","v","valu","week","z","zero"],"pages/part-18-debugging-adds.html":["(nzcv)","0000","0001","0001.","0010","0010:","10","100","18","20,","20000010","28","29","30","30,","31","31,","32","4,294,967,295","4294967295","64","99","=","abov","ad","add","addit","addition.","adds.","again","answer","below","binari","binary.","bit","brief","c","carri","cf","chang","click","code","code:","come","complet","content","convert","cover.","cpsr","cpsr.","deal","debug","debug:","decim","dive","each","engin","examin","exampl","execut","expected.","flag","focu","following:","gdb,","give","hack","hex","hex.","https://github.com/mytechnotalent/revers","indic","it’","larger","lesson","let","let’","make","mean:","more.","move","n","natur","need","neg","next","noth","notic","now","number","numbers.","order","overflow","part","place","pleas","possible?","program:","r0","r0.","r1","r1,","r2","r2.","re","regist","register.","rememb","result","saved.","see","sens","set","set,","set.","sign","signific","simple,","start","state","step","tabl","that?","therefor","through","together.","topic","transpir","tutori","tutorials.","two","unsign","upon","v","valu","week","z","zero","–"],"pages/part-19-hacking-adds.html":["(nzcv)","0001","0001.","0010","0x1","0x10","0xffffffff","1","10","100","101","19","20,","28","29","30","30,","31","31,","4,294,967,295","4294967295","=","action","adc.","add","addit","again","again:","bam!","befor","below","binari","binary.","bit","brief","c","carri","caus","chang","click","code:","come","complet","content","convert","cover.","cpsr","cpsr.","debug","debug:","decim","dive","each","engin","entirety.","examin","exampl","flag","flag.","following:","gdb,","give","hack","hack:","happen","hex","hex.","https://github.com/mytechnotalent/revers","import","indic","kept","know","last","lesson","lessons.","let","let’","look","make","mean","mean:","means:","n","need","neg","next","not,","now","onc","order","overflow","part","place","pleas","r0","r0.","r1","r1,","r2","r2.","re","rememb","review","see","sens","set","set,","start","step","step.","tabl","take","therefor","this,","time","topic","trigger","tutori","tutorials.","two","understand","v","valu","week","went","z","zero","–"],"pages/part-20-adc.html":["1","100","20","4,294,967,295","abov","ad","adc","adc.","adc.o","add","addit","again","ask","attent","below","binary.","brief","by:","carri","click","come","compil","complet","content","convert","cover.","cpsr","cpsr.","debug","decim","decimal)","decimal)?","dive","each","engin","exampl","except","first","flag","gdb,","give","go","hack","happen","hex","hex.","https://github.com/mytechnotalent/revers","illustrate:","keep","ld","lesson","let’","look","make","mind","need","next","o","onc","order","part","particular","pay","place","pleas","r0","r1","r1,","r2","r2,","r3","r3(100","r4","r4(100","r4.","r5","r5.","regist","rememb","result?","same","see","sens","sentenc","set","set,","set.","start","statu","tabl","think","topic","tutori","tutorial.","tutorials.","valu","want","week","work","yourself","–"],"pages/part-21-debugging-adc.html":["(nzcv)","0010","0010.","1","100","20,","20000010","201","21","28","29","30","30,","31","31,","4,294,967,295","=","abov","ad","adc","adc.","add","addit","again","ask","attent","below","binari","binary.","bit","brief","broken?","c","carri","clearli","click","code:","come","complet","content","convert","cover.","cpsr","cpsr.","debug","decim","decimal)","decimal)?","digest","dive","each","effect","engin","exampl","except","extra","flag","following:","gdb,","give","go","hack","happen","hex","hex.","hope","https://github.com/mytechnotalent/revers","indic","last","lesson","let’","make","mean:","n","need","neg","next","ok","onc","oper","order","overflow","part","particular","pay","place","pleas","question","r0","r1","r1,","r2","r2,","r3","r3(100","r4","r4(100","r4.","r5","r5!","r5.","rais","recap,","regist","rememb","result?","review","same","see","sens","set","set,","set.","signific","simpl","someth","start","statu","tabl","therefor","think","togeth","topic","tutori","tutorials.","understand","v","valu","veri","want","week","work","yourself","z","zero","–"],"pages/part-22-hacking-adc.html":["(nzcv)","0001","0001.","1","10","100","20,","200","201?","22","28","29","30","30,","31","31,","4,294,967,295","=","adc","adc.","add","addit","again","again,","attent","below","below.","binari","bit","brief","c","carri","chang","clearli","click","code:","comparison.","complet","content","cover.","cpsr","cpsr.","decim","decimal.","digest","dive","each","effect","engin","examin","except","few","flag","following:","give","hack","hex","hex.","hope","https://github.com/mytechnotalent/revers","indic","last","lesson","let’","mean:","more","move","n","need","neg","next","now","ok","oper","overflow","part","particular","pay","place","pleas","program","r0","r1","r1,","r2","r2,","r2.","r3","r4","r4.","r5!","r5.","recap","regist","rememb","review","run","same","see","set","set.","signific","simpl","statu","step","sub.","tabl","take","therefor","time","times:","togeth","topic","tutori","understand","v","valu","veri","week","work","z","zero","–"],"pages/part-23-sub.html":["23","53","67","add","addit","affect","arm","below","brief","click","compile:","complet","content","cover.","debugging.","decim","dive","each","end","engin","enough","examin","exampl","firm","flag","flags.","four","give","grasp","https://github.com/mytechnotalent/revers","instruct","keep","ld","lesson","let’","mind","move","next","now.","o","part","pleas","prior","put","r0.","r1","r2","result","rsb","rsbs,","rsc.","rscs,","s","sbc,","sbcs,","simpli","spent","start","sub","sub,","sub.","sub.o","sub:","subs,","subtract","such","suffix","tabl","take","time","today","topic","tutori","week","–"],"pages/part-24-debugging-sub.html":["14","24","53","67","abov","add","addit","affect","arm","becomes.","below","brief","clear.","click","complet","content","cover.","debug","debug.","decim","dive","each","end","engin","enough","examin","exampl","expected.","firm","flag","flags.","four","give","grasp","hacking.","https://github.com/mytechnotalent/revers","instruct","keep","lesson","let","let’","mind","move","next","now","now.","part","pleas","prior","put","r0","r0.","r1","r2","re","regist","result","rsb","rsbs,","rsc.","rscs,","s","sbc,","sbcs,","see","simpli","spent","start","stated,","step","sub","sub,","sub.","sub:","subs,","subtract","such","suffix","tabl","take","through","time","today","topic","tutori","valu","week","work","–"],"pages/part-25-hacking-sub.html":["17","25","50","53","53.","67","abov","add","addit","affect","arm","assembl","assembly.","becom","believ","below","brief","clear.","click","complet","content","continu","cover.","decim","done","each","encourag","end","engin","engineers!","enough","examin","exampl","expect","firm","flag","flags.","forward","foundat","four","futur","give","grasp","hack","hack.","hacking.","https://github.com/mytechnotalent/revers","instead","instruct","journey","keep","learn","lesson","let","let’","littl","look","mind","move","now","now.","part","pleas","prior","progress.","provid","purpos","put","r0","r0.","r1","r2","re","regist","result","revers","rsb","rsbs,","rsc.","rscs,","s","sbc,","sbcs,","see","seri","set","simpli","solid","spent","start","stated,","step","sub","sub,","sub.","sub:","subs,","subtract","such","suffix","tabl","take","thank","that.","through","time","today","topic","tutori","tutorial’","valu","want","work","–"],"pages/arm-32-course-2.html":["(part","2","2)","32","architectur","arm","bit","cours","dive","let'","rightaway!"],"pages/part-1-the-meaning-of-life-part-2.html":["$35","(pid)","1","1.2ghz","13","2","3","3,","4x","a53,","abov","actual","addit","advanc","again","agil","alon","alway","amazon","android","anyth","applic","architectur","arm","arm,","assembl","assembly.","attach","attack","augment","avail","back","bare","base","base.","based.","bcm2837","becom","befor","below","binari","binaries.","bone","both","brief","bring","broadcom","c","c#","call","care","caus","cell","challeng","chip","chip.","choic","circuit","cisc","cisc,","cli","click","cloud","code","colleg","come","commerci","common","compar","compil","complet","complex","compon","compromise.","comput","concept","consid","consumption.","contain","content","continu","contrast","cortex","cover.","cpu","creat","critic","curb","day","debug","debugg","decim","develop","development,","devic","directli","disassembled.","dive","dollar","done","don’t","each","earth","echo","electron","embed","engin","engineering.","enorm","environ","environment,","everywher","exact","examin","exist","expans","fact","felt","firm","first","flavor","focu","focus","forward.","framework","function","gb","gdb","get","give","gnu","go","govern","graphic","grasp","grow","gui","hardcor","hardwar","help","hexadecim","hood","hood.”","https://github.com/mytechnotalent/revers","https://www.raspberrypi.org.","ida","includ","increas","instruct","instructions.","integr","internet","iot","java","java,","javaee.","jessie,","keep","know","lab","languag","learn","less.","lesson","librari","life","linux","look","low","lpddr2","machin","machine.","machines.","make","mani","market","mean","million","moment.","more","move","necessari","need","next","nice","not,","number","obviou","on","oper","origin","out","part","pass","pass,","phone","pi","pictur","pleas","power","pretti","primarili","pro","process","program","project","proper","put","python,","quot","race","ram.","rapid","raspberri","raspbian","re","react,","real","reality.","reduc","refer","reflect","retailers.","revers","review","rf","risc","risc.","robust","run","running.","second","sector,","seri","set","shell.","shrink","singl","smaller","smart","soc","softwar","sole","spring","ssh","start","started...","statement","statement.","such","system","system.","systems.","tabl","take","termin","that’","thing","things?","things?”","think","third","time","time.","today","today,","today?","today’","togeth","tool","toolkit","topic","toward","tradit","trend","tutori","tutorial.","tv","typic","under","understand","unfortun","us","usual","util","veri","version","visit","vulner","want","want,","week","welcom","well.","windows,","work","world","worri","x86","x86/x64","–","“so","“well"],"pages/part-11-firmware-boot-procedures.html":["0","0x800.","0x8000","0x8000,","0x8001,","0x8002,","0x8003,","0xa","0xe","0xea","0xfe","0xff","1)condit","1010","11","1110","2","2)op","23","24:","27","28:","3","3)offset","31","31.","32","8","@","abov","above!","above,","above.","actual","addit","address","alway","anyon","architecture.","arm","around","ask","asked!","bare","basic","begin","below","better","bit","bits,","boot","boot.","bootcode.bin","boots,","bored!","branch","break","brief","byte,","c2","cach","card","champagne!","click","code","code.","command","complet","condit","config.txt","content","content/uploads/2012/02/bcm2835","control","corner","cover.","cpu","crap","creat","critic","current","cut","danger","datasheet","datasheet!","datasheet:","device.","dive","down","ea","each","earth","editor","effort","engin","entir","even","everyth","execut","exercis","far","fe","ff","file","firmwar","firmware!","first","following:","get","give","glad","go","gpu","graphic","hack","happen","happen,","happens,","hard","held","hell","hex","https://github.com/mytechnotalent/revers","https://www.raspberrypi.org/wp","imag","infinit","it:","keep","kernel.","kernel.img","kit","know","learn","lesson","let","let’","link","linux","load","loaded,","loaded.","loads.","locat","long","look","loop.","lot","machin","malwar","matter?”","memori","memory.","metal","mind","mod.","moment","move","neumann","never","next","noth","offset","on","on?”","onc","op","open","origin","os","out","over","painstak","part","particular","passion","peripherals.pdf","pi","planet","pleas","power","power,","procedur","process","processor","progress","ram","raspberri","reach","read","realli","reboot.","receiv","replac","research","reset","rest","review","rom","root","routin","run","save","sd","set","simpli","singl","size","someth","soon","start","start.elf","state","stated,","step","stuck","sucks!”","tabl","take","talk","thing","those","through","time","today","topic","total","truli","turn","tutori","understand","understanding.","up","variety.","version","von","wanted,","week","within","word","wrap","write","–","“i’m","“ok","“so"],"pages/part-14-hello-world.html":["#includ","()","(translat","./example1","0.","11","14","abov","abstract","ad","addit","allow","appear","applic","applications.","approach","architectur","arm","assembl","associ","basic","becom","befor","begin","below","better","binary.","bit","break","brief","c","c++","call","caus","clear","click","code","code.","collis","compil","complet","complex","concept","confus","console.","constant","content","convers","convert","cout","cover.","cpp","cpu","creat","created.","data,","deal","debug","declar","device.","discussed.","displayed.","dive","down","each","endl","endl.","engin","entir","entri","essenti","everyth","exampl","example1","example1.cpp","executable.","execute.","exist","file","file.","files,","files.","final","find","first","focu","format","function","function.","g++","gain","generated.","get","give","goe","group","hack","happen","header","hello","https://github.com/mytechnotalent/revers","includ","indic","insid","instructions.","int","int,","integ","interact","intermedi","iostream","it.","journey","keyword","languag","language.","later","learn","lesson","let","let’","librari","libraries.","line","line:","link","logic","machin","main","main(void)","mani","master","mean","mechan","more","move","multipl","name","namespac","need","never","new","next","notic","now","o","obj","occur","on","onc","opcod","oper","operator.","order","organ","output","overload","paramet","pars","part","pass","past","pleas","point","preprocessor","prevent","print","printf","prior","process","processor","processor.","program","program.","push","quit","refer","requir","respect","rest","return","save","section","see","seri","similar","simpli","singl","something.","sourc","stage","standard","start","statement","statement.","std","std::cout","std;","step","stick","string","success!","symbol","syntax","tabl","take","termin","terminal!","text","thing","through","through.","today","togeth","topic","touch","tradit","translat","tree","tutori","type","type:","ultim","understand","units)","upon","us","util","variabl","veri","void","week","works.","world","world.","world”","{","“hello"],"pages/part-15-debugging-hello-world.html":["0x10750","0x10848.","15","4","ad","addit","address","address.","advanc","allow","analysi","answer","arm","ask","assembl","assembly.","attach","back","base","be","below","binari","binaries.","binary!","binary.","bit","break","breakpoint","brief","c++","caus","childishli","click","code","complet","complex","comprehensive.","comput","consuming.","content","continu","control","cours","cover.","day","debug","debug!","debugg","disassembl","dive","down","each","effect","engin","engineer,","engineering.","examin","exampl","final","fire","focu","foreign","form","fulli","gdb","give","gnu","go","graphic","hack","hack.","hello","here","hours,","https://github.com/mytechnotalent/revers","ida","in,","insid","know","languag","last","learn","lesson","let’","level.","line","link","load","locat","look","low","luxuri","machin","main+16.","mani","manipul","match","matter","memori","method","more","need","next","nice","notic","now","origin","over","part","pleas","pointer","preserv","prior","probabl","process","profession","program","properli","purpos","r1","r1.","r11","r11.","refresher,","regist","resid","revers","review","routin","run","same","scari","see","seeing.","seri","series.","set","simpl","simpli","sole","sophist","sourc","space","stack","stack.","start","step","string","string.","tabl","take","techniqu","techniques.","text","those","through","time","tool","topic","train","truli","tutori","ultim","understand","up","us","usag","values.","veri","voila!","week","week.","world","world!”","world.","yourself","“hello"],"pages/part-16-hacking-hello-world.html":["(load","0x10750","16","3x","absolut","addit","address","again","again.","ago.","amaz","anyth","assembl","back","begin","below","binari","brief","chang","clearli","click","code","come","complet","constants.","contains,","content","continu","control","cover.","debug","disassembly.","dive","each","echoed,","echo’","engin","entir","examin","exampl","execut","execution.","first","flow","give","hack","hack!","hello","here","hijack","hold","https://github.com/mytechnotalent/revers","in.","insid","journey!","languag","ldr","lesson","let","let’","main+12.","matter","memori","memory.","next","now","number","onc","out","output.","over","overwrit","part","pleas","procedur","program","program.","purpose!","r1","r1.","regist","register)","revers","review","run","same","see","set","si","simpl","standard","step","string","string,","successfulli","such","such.","suit","tabl","termin","through","today","took","topic","tutori","two","understand","valu","veri","way","ways.","week","woohoo!","world","world!”","written","“hack","“hello"],"pages/part-17-constants.html":["#includ","(unless","./example2","17","2017.","2017;","=","ad","add","addit","architectur","assign","base.","below","break","brief","c++","call","cap","chang","click","code","compil","complet","con","const","constant","constant.","constants.","content","cout","cover.","created,","debug","declar","device.","dive","down","down:","each","earli","echo","endl","engin","exampl","example2","example2.cpp","execut","expand","far","function","function.","futur","g++","give","hack","hacked).","have","https://github.com/mytechnotalent/revers","indic","int","integ","it!","keyword","know","languag","lesson","let’","line","main(void)","new","next","o","on","output","part","place","pleas","practic","print","program","program.","redefin","referenc","save","second","see","simpl","simple.","simpli","somewher","standard","start","std::cout","step","string","success!","such","tabl","termin","terminal!","terminal.","that’","through","throughout","tint","topic","tutori","type:","updat","upon","us","util","valu","veri","week","works.","year","{","“2017”","“constant”"],"pages/part-18-debugging-constants.html":["(terminal)","0x10730","18","2017.","above.","addit","address","assembl","below","branch","brief","clearli","click","code.","comfort","complet","constant","constants.","content","continu","cout","cover.","debug","debug!","dive","do","each","engin","equal","feel","function","give","hack","https://github.com/mytechnotalent/revers","it.","last","lesson","let’","littl","memori","more","move","next","output","part","pleas","print","r1","ran","review","see","stage","standard","tabl","terminal.","topic","tutori","understand","valu","veri","watch","week","week’","–"],"pages/part-19-hacking-constants.html":["0x10730","19","1981!","1981.","2017.","addit","address","below","breakpoint","breakpoint.","brief","chang","charact","click","code.","complet","constant","content","continu","cover.","dive","each","engin","equal","give","hack","hack!","https://github.com/mytechnotalent/revers","lesson","let'","let’","main+28","memori","next","origin","part","pleas","program","r1","re","review","second","see","set","start","success","successfulli","tabl","topic","turn","tutori","valu","variables.","watch","way!","week","–"],"pages/part-20-character-variables.html":["#includ","./example3","0x6e","110","20","4","8","=","actual","add","addit","ascii","assign","below","bit","break","brief","byte","c++","call","char","charact","click","code","come","compil","complet","content","cout","cover.","data,","data.","deal","dealt","debug","decimal.","deriv","device.","digit","dive","down","down:","each","endl","engin","example3","example3.cpp","far,","function","function.","g++","give","handi","hex","https://github.com/mytechnotalent/revers","indic","int","it!","journey","keep","keyword","languag","length","length.","lesson","lesson.","let’","line","liter","long.","main(void)","mind,","n","n.","new","next","o","on","output","part","pleas","print","processor","program","program.","recap,","rememb","repres","respect","review","save","see","simple.","simpli","stage","standard","start","std::cout","step","string","success!","tabl","take","termin","terminal!","terminals.","that’","therefor","third","thu","topic","translat","tutori","two","type:","understands.","unlik","up","util","valu","value.","variabl","variables.","variable”","veri","week","works.","yes_no","{","–","‘n’;","“charact","“n”"],"pages/part-21-debugging-character-variables.html":["0x6e","110","21","addit","address","ascii","be","below","brief","byte","case","charact","character.","clear","click","code","code.","complet","confusing.","content","continue.","cover.","data.","deal","debug","debug!","decimal.","deriv","directli","dive","don’t","down","each","engin","expected.","experi","few","give","hack","here.","hex","https://github.com/mytechnotalent/revers","import","keep","last","lesson","let’","load","locat","main+12","manipul","memori","mind","n","next","notic","now","output","part","place","pleas","previou","print","process","processor","r3","r3.","regist","register.","rememb","respect","review","see","seen","singl","standard","step","string","tabl","time","topic","translat","tutori","understand","understands.","valu","value.","variabl","variable.","variables.","week","woah!","–","‘n’","‘n’."],"pages/part-22-hacking-character-variables.html":["0x6e","22","4","addit","again","below","boolean","brief","chang","charact","clearli","click","code.","complet","content","continu","cover.","direct","dive","each","engin","give","hack","hack!","https://github.com/mytechnotalent/revers","lesson","let’","main+12","move","next","now","output.","part","pleas","print","r3","r3.","reexamin","review","see","standard","step","successfulli","tabl","time","topic","tutori","valu","variabl","variables.","verifi","week","worked!","–","‘n’.","‘y’","‘y’."],"pages/part-23-boolean-variables.html":["#includ","+","./example4","0","0.","1,","23","=","addit","assign","back","below","binari","bool","boolean","break","brief","call","clearli","click","code.","compil","complet","comput","content","cover.","creat","debug","derived.","dive","down:","each","echo","engin","examin","example4","example4.cpp","fals","false;","g++","georg","give","goe","great","https://github.com/mytechnotalent/revers","int","ishack","journey","lesson","let’","level","lowest","main(void)","modern","name","next","o","output","output.","part","pleas","print","run","scienc","see","simpli","stage","standard","std::cout","success!","successfulli","tabl","terminal!","topic","true,","tutori","type:","valu","variabl","variables.","week","{","–"],"pages/part-24-debugging-boolean-variables.html":["0","24","4","actual","addit","appreci","base","basic","below","boolean","break","brief","c++","clearli","click","code.","complet","components.","content","cover.","critic","debug","debug.","devic","disassemble.","dive","down","each","engin","examin","exampl","fals","flow.","give","hack","https://github.com/mytechnotalent/revers","ishack","know","lesson","let’","logic","make","next","now","part","patienc","pi","pleas","process","proper","r3.","raspberri","re","revers","see","seem","sens","sourc","step","tabl","take","thing","through","time","topic","trivial","tutori","valu","variabl","variables.","week","work","works.","–"],"pages/part-25-hacking-boolean-variables.html":["0","1","25","addit","approach","below","boolean","break","brief","build","click","code","code.","complet","content","continu","control","cover.","disa","dive","each","elementari","engin","everyth","examin","exampl","execut","fals","folks!","four","give","hack","hack!","help","https://github.com/mytechnotalent/revers","integ","ishack","it’","lesson","let’","librari","main+12.","main,","matter","mental","move","next","notic","now","part","pleas","r3","re","run","see","set","simpl","simpli","step","tabl","take","times.","topic","true","true.","tutori","understand","variabl","variables.","veri","week","what!","–"],"pages/part-26-integer-variables.html":["#includ","(2^31","(2^32","(unsigned)","(−2^31)","./example5","0","1)","2,147,483,647","26","2^32","32","4","4,294,967,295","777","777;","=","access","addit","address","assign","below","binari","bit","break","brief","byte","c++","click","code.","common","compil","complement.","complet","content","cout","cover.","debug","depend","differ","directli","dive","down:","each","engin","examin","example5","example5.cpp","function.","g++","gb","give","https://github.com/mytechnotalent/revers","int","integ","journey","keep","lesson","let’","main(void)","maximum","memori","memory.","mind","mynumb","next","number,","o","out","output","part","pleas","print","rang","regist","represent","representations,","see","simpli","stage","standard","std::cout","store","success!","tabl","termin","terminal!","through","topic","tutori","two","two'","type:","used.","valu","values.","variabl","variables.","week","{","–","−","−2,147,483,648"],"pages/part-27-debugging-integer-variables.html":["#arm","#asm","#cplusplu","#reverseengin","(2^31","(2^32","(unsigned)","(−2^31)","0","0x10730","1)","2,147,483,647","27","2^32","32","4","4,294,967,295","777","access","addit","address","again","back","below","binari","bit","brief","byte","c++.#linux","clearli","click","closer","code.","common","complement.","complet","content","continu","cout","cover.","data","debug","debug!","depend","differ","directli","dive","each","echo","emphas","engin","examin","function","gb","give","go","hack","https://github.com/mytechnotalent/revers","includ","inform","insid","integ","integers.","keep","last","lesson","let’","load","look.","main+12","make","maximum","memori","memory.","mind","next","number,","part","pleas","present.","r3.","rang","regard","regist","represent","representations,","review","see","sens","store","tabl","take","termin","through","topic","tutori","two","two'","used.","util","valu","values.","variabl","variables.","want","week","week’","within","–","−","−2,147,483,648"],"pages/part-28-hacking-integer-variables.html":["0x10730","0x10730.","28","666","777","addit","again","appear","below","brief","c++","clearli","click","code.","complet","content","continu","continue.","correspond","cout.","cover.","dive","each","echo","engin","float","function","give","hack","hack!","https://github.com/mytechnotalent/revers","insid","integ","lesson","let’","locat","look","memori","next","out","part","pleas","reexamin","review","see","set","stdout.","success!","tabl","take","termin","topic","tutori","valu","variabl","variables.","week","–"],"pages/part-29-float-variables.html":["#includ","./example6","1337.1","1337.1;","29","=","addit","arm","assembl","assign","attach","below","break","brief","c++","click","co","code.","compil","complet","content","cout","cover.","debug","design","differ","directli","dive","down:","each","engin","examin","example6","example6.cpp","far","float","fraction","function.","g++","give","good","https://github.com/mytechnotalent/revers","int","integ","introduc","journey","lesson","let’","level,","main(void)","manipul","math","mynumb","next","now","number","o","out","output","part","period.","pleas","point","print","processor","regist","registers.","see","simpli","stage","standard","std::cout","store","success!","tabl","termin","terminal!","through","thu","topic","tutori","type:","understand","up","valu","variabl","variables.","week","whole","within","work","{","–"],"pages/part-30-debugging-float-variables.html":["#8","#includ","1337.09998","1337.1","1337.1;","30","7","8.","=","addit","approxim","be","below","below.","break","brief","c++","clearli","click","co","code.","command","complet","constant","content","continu","continue.","cover.","debug","debug!","decim","digit","dive","doubl","each","element","engin","examin","exampl","float","forward.","give","go","hack","here","high","https://github.com/mytechnotalent/revers","info","insid","instruct","instruction.","int","keep","lesson","let’","load","main(void)","main+20","main+28","math","memory.","mind","move","mynumb","new","next","now","numbers.","origin","part","pleas","point","point.","precis","processor","r11","r11,","re","regist","rememb","roughli","s0.","s0?","see","seri","singl","special","std::cout","strang","such","tabl","topic","tutori","valu","variabl","variables.","vldr","week","within","work","{","–"],"pages/part-31-hacking-float-variables.html":["#8","#includ","(less","1337.09998","1337.1","1337.1;","31","6","7","8.","=","accur","addit","approxim","back","be","below","below.","break","brief","c++","clearli","click","co","code.","command","complet","constant","content","continu","continue.","cout","cover.","decim","digit","dive","doubl","each","echo","element","engin","examin","exampl","executes.","final","float","forward.","function","give","go","hack","hack!","here","high","https://github.com/mytechnotalent/revers","info","insid","instruct","instruction.","int","issu","keep","last","lesson","let’","load","look","main(void)","main+20","main+28","math","memory.","mind","move","mynumb","new","next","now","numbers.","origin","out","part","places)!","pleas","point","point.","precis","processor","r11","r11,","re","regist","rememb","review","roughli","s0.","s0?","see","seri","singl","special","std::cout","strang","such","tabl","termin","topic","transpired.","tutori","tutorial.","up","valu","variabl","variables.","vldr","week","week’","within","work","{","–"],"pages/part-32-double-variables.html":["#includ","./example7","1337.77","1337.77;","15","17","32","64","=","addit","assign","below","bit","break","brief","c++","click","code.","compil","complet","content","cout","cover.","debug","differ","digit","directli","dive","doubl","down:","each","engin","examin","example7","example7.cpp","float","function.","g++","give","https://github.com/mytechnotalent/revers","int","journey","lesson","let’","main(void)","mynumb","next","o","out","output","part","pleas","point","precis","precision.","print","see","signific","simpli","stage","standard","std::cout","success!","tabl","termin","terminal!","topic","tutori","type:","variabl","variables.","week","wide","{","–"],"pages/part-33-debugging-double-variables.html":["#","0x7efff230","12","12]","1337.77","1337.77;","33","=","[r11,","addit","below","below.","breakpoint","brief","c++","click","co","code.","complet","content","continu","continue.","cout","cover.","d0","d0,","debug","debug!","dive","doubl","each","echo","engin","exactli","examin","execut","final","fulli","function.","give","hack","https://github.com/mytechnotalent/revers","int","lesson","let’","load","locat","main(void)","main+24","math","mean","memory.","mynumb","next","now","offset","part","pleas","precis","print","processor","r11","r2,","r2.","regist","register.","resid","review","see","set","specif","std::cout","step","store","strd","tabl","terminal.","there.","topic","tutori","twice","understand","valu","variabl","variables.","vldr","voila!","watch","week","{","–"],"pages/part-34-hacking-double-variables.html":["#","0x7efff230","12","12]","1337.77","1337.77;","34","=","[r11,","addit","below","below.","breakpoint","brief","click","code.","complet","content","continue.","coprocessor","cover.","d0","d0,","d0.","debug!","dive","doubl","each","engin","exactli","examin","execut","fulli","give","hack","hacked!","https://github.com/mytechnotalent/revers","insid","int","lesson","let’","load","locat","main(void)","main+24","math","mean","memory.","mynumb","next","now","offset","operator.","part","pleas","precis","print","r11","r2,","r2.","reexamin","regist","register!","register.","resid","review","see","set","sizeof","specif","std::cout","step","store","strd","successfulli","tabl","there.","topic","tutori","twice","understand","valu","variabl","vldr","voila!","week","{","–"],"pages/part-35-sizeof-operator.html":["#includ","./example8","16","16;","35","4","=","addit","anoth","below","break","brief","byte","click","code","code.","compil","complet","content","cover.","creat","debug","dive","down:","each","engin","examin","example8","example8.cpp","execut","g++","give","hold","https://github.com/mytechnotalent/revers","indic","int","integ","journey","lesson","let’","main(void)","mynumb","mynumber.","mynumbers","next","o","oper","operator.","part","pleas","print","screen.","see","show","simpli","size","sizeof","sizeof(mynumber);","stage","std::cout","tabl","therefor","topic","tutori","type:","valu","variabl","week","wide.","{","–"],"pages/part-36-debugging-sizeof-operator.html":["#includ","$r11","12","16","16.","16;","36","4","8","8.","=","abov","addit","anoth","be","below","break","brief","byte","case","click","code","code.","complet","content","continu","cover.","creat","debug","dive","each","echo","engin","examin","execut","exist","fact","final","give","go","hack","here","hold","https://github.com/mytechnotalent/revers","indic","insid","int","integ","lesson","let’","main(void)","main+16","main+20","main.","make","move","mynumb","mynumber.","mynumbers","next","oper","operator.","origin","part","pleas","r3","r3.","re","rememb","repres","return","see","sens","show","size","sizeof","sizeof(mynumber);","std::cout","store","tabl","terminal.","therefor","topic","tutori","valu","variabl","week","wide.","{","–"],"pages/part-37-hacking-sizeof-operator.html":["#includ","$r11","12","16","16.","16;","37","4","8","8.","=","abov","addit","anoth","back","be","below","break","brief","byte","case","click","code","code.","complet","content","continu","cover.","creat","debug","dive","each","echo","engin","examin","execut","exist","expected.","fact","final","give","go","hack","hack!","here","hold","https://github.com/mytechnotalent/revers","increment","indic","insid","int","integ","last","lesson","let’","logic","machine!","main(void)","main+16","main+20","main+28.","main+36.","main.","make","move","mynumb","mynumber.","mynumbers","next","oper","operator.","origin","part","pleas","pre","r1","r1!","r1.","r11","r3","r3.","re","rememb","repres","return","review","run","see","sens","show","size","sizeof","sizeof(mynumber);","start","std::cout","store","success!","tabl","terminal.","therefor","topic","tutori","valu","variabl","week","week’","wide.","{","–"],"pages/part-38-pre-increment-operator.html":["#includ","++mynumber;","./example9","16","16;","17","17.","38","=","addit","anoth","assign","be","befor","below","break","brief","click","code","code.","compil","complet","content","cover.","creat","debug","dive","down:","each","engin","examin","exampl","example9","example9.cpp","execut","g++","get","give","https://github.com/mytechnotalent/revers","increment","int","journey","lesson","let’","main(void)","mynewnumb","mynumb","mynumber.","next","o","oper","operator.","part","pleas","pre","print","screen.","see","show","simpli","stage","std::cout","tabl","therefor","topic","tutori","type:","valu","variabl","variable.","week","{","–"],"pages/part-39-debugging-pre-increment-operator.html":["#includ","++mynumber;","./example9","1","16","16.","16;","17","17.","39","8","=","addit","anoth","assign","back","be","befor","below","break","breakpoint","brief","click","code","code.","compil","complet","content","continu","continue.","cover.","creat","debug","debug.","dive","down:","each","echo","engin","evalu","examin","exampl","example9","example9.cpp","execut","expected.","g++","gdb","get","give","hack","https://github.com/mytechnotalent/revers","increment","int","lesson","let’","main(void)","main+24","main+28","main.","move","mynewnumb","mynumb","mynumber.","next","normal","note","o","oper","operator.","origin","part","pleas","pre","print","r11","r3","r3.","re","rememb","screen.","see","set","show","simpli","stage","start","std::cout","store","success","successfulli","tabl","take","termin","therefor","through","topic","tutori","type:","valu","variabl","variable.","week","{","–"],"pages/part-40-hacking-pre-increment-operator.html":["#includ","++mynumber;","./example9","1","16","16.","16;","17","17.","40","8","=","addit","again","anoth","assign","back","be","befor","below","break","breakpoint","brief","click","code","code.","compil","complet","content","continu","continue.","cover.","creat","debug.","dive","down:","each","echo","else.","engin","evalu","examin","exampl","example9","example9.cpp","execut","expected.","g++","gdb","get","give","hack","hack!","here","https://github.com/mytechnotalent/revers","increment","int","know","lesson","let’","main(void)","main+24","main+28","main.","move","mynewnumb","mynumb","mynumber.","next","normal","note","now","o","on","oper","operator.","origin","part","pleas","post","pre","print","program.","r11","r3","r3.","re","rememb","review","run","screen.","see","set","show","simpli","someth","stage","start","std::cout","store","success","success!","successfulli","tabl","take","termin","terminal.","therefor","through","topic","tutori","type:","valu","variabl","variable.","week","{","–"],"pages/part-41-post-increment-operator.html":["#includ","++mynumber;","./example10","16","16;","17","17.","41","=","addit","anoth","assign","be","below","break","brief","click","code","code.","compil","complet","content","cover.","creat","debug","dive","down:","each","engin","exampl","example10","example10.cpp","execut","g++","get","give","https://github.com/mytechnotalent/revers","increment","int","lesson","let’","main(void)","mynewnumb","mynumb","mynumber.","next","o","oper","operator.","part","pleas","post","print","screen.","see","show","simpli","std::cout","tabl","therefor","topic","tutori","type:","valu","variabl","variable.","week","{","–"],"pages/part-42-debugging-post-increment-operator.html":["#includ","(standard","*main+12","*main+24","*main+28","++mynumber;","1","16","16;","17","17.","42","=","add","addit","anoth","assign","be","below","break","brief","c++","call","click","code","code.","complet","content","continu","continue.","cout","cover.","creat","debug","debug.","directli","dive","each","echo","engin","examin","exampl","execut","expected.","function","get","give","hack","https://github.com/mytechnotalent/revers","increment","instruct","int","lesson","let'","let’","load","main(void)","memori","mov","mynewnumb","mynumb","mynumber.","next","oper","operator.","out","output)","part","pleas","post","put","r2","r2.","r3","re","regist","see","show","std::cout","tabl","termin","therefor","topic","tutori","valu","variabl","variable.","week","{","–"],"pages/part-43-hacking-post-increment-operator.html":["#includ","*main+12","*main+24","*main+28","++mynumber;","1","16","16;","17","17.","43","=","add","addit","anoth","assign","baby!","be","below","break","brief","c++","click","code","code.","complet","content","continu","continue.","cout","cover.","creat","debug.","decrement","desire!","directli","dive","each","echo","engin","examin","exampl","execut","function","get","give","hack","heart'","https://github.com/mytechnotalent/revers","increment","instruct","int","know","lesson","let'","let’","load","main(void)","memori","mov","mynewnumb","mynumb","mynumber.","new","next","now","oper","operator.","part","pleas","post","pre","put","r2","r2.","r3","re","regist","screen!","see","set","show","std::cout","tabl","therefor","topic","tutori","valu","variabl","variable.","week","{","–"],"pages/part-44-pre-decrement-operator.html":["#includ","15","16","16;","44","=","action","addit","assign","assigned.","befor","below","brief","click","code.","compil","complet","content","cover.","debuggin","decrement","dive","each","echo","engin","examin","example.","get","give","given","https://github.com/mytechnotalent/revers","int","lesson","let'","look","main(void)","mynewnumb","mynewnumber.","mynumb","mynumber;","new","next","oper","operator.","out","part","pleas","pre","run","see","std::cout","tabl","take","terminal.","topic","tutori","valu","week","{","–"],"pages/part-45-debugging-pre-decrement-operator.html":["#includ","15","15.","16;","45","=","abov","addit","area","below","both","break.","brief","click","code","code.","compil","complet","content","continu","cout","cover.","debug","debug.","decrement","dive","each","echo","engin","examin","expected.","figur","final","function","give","hack","hold","https://github.com/mytechnotalent/revers","int","keep","lesson","let'","main(void)","mind","mynewnumb","mynumb","mynumber;","next","oper","operator.","out.","part","place","pleas","pre","r1","r3","re","rememb","see","statement.","std::cout","stored.","tabl","topic","tutori","valu","week","well.","{","–"],"pages/part-46-hacking-pre-decrement-operator.html":["#includ","15","15.","16;","46","=","addit","affect","again","below","binari","break","break.","brief","click","code.","compil","complet","content","continu","cover.","debug.","decrement","dive","don't","down","each","engin","examin","experi","firm","first","give","hack","hacked!","handl","here","hold","https://github.com/mytechnotalent/revers","insid","int","it.","lesson","let'","main(void)","mynewnumb","mynumb","mynumber;","next","now","oper","operator.","outcome.","part","pleas","post","pre","print","r1","r3","re","realli","regist","rememb","review","run","see","set","std::cout","store","successfulli","tabl","take","that?","thing","this.","time","topic","tutori","valu","value.","want.","week","yourself","{","–"],"pages/part-47-post-decrement-operator.html":["#includ","0;","15","15.","16","16;","47",";","=","address","code.","compil","debug","decrement","dive","examin","int","let'","main(void)","mynewnumb","mynumb","next","oper","operator.","out","part","post","print","reduc","respectively.","return","scenario","see","std::cout","std::endl;","take","valu","week","{","}","–"],"pages/part-48-debugging-post-decrement-operator.html":["#includ","15","16;","48",";","=","abov","addit","anoth","assign","below","break","brief","c++","clear","clearli","click","code","code.","complet","content","cover.","debug","debug.","decrement","decremented.","dive","do","each","engin","examin","fact","get","give","hack","hold","https://github.com/mytechnotalent/revers","init","int","lesson","let'","load","main(void)","main+68","main+72.","more","mynewnumb","mynumb","next","noth","number","oper","operator.","origin","output","part","pleas","post","r1","re","see","simpl","std::cout","tabl","terminal.","topic","tutori","valu","value.","variabl","veri","week","{","–"],"pages/part-49-hacking-post-decrement-operator.html":["#includ","15.","16;","49",";","=","addit","again","along","arm","below","better","bidding.","binary.","bite","brief","chang","click","code.","come","complet","conclud","content","continu","cover.","debug.","decrement","each","engin","execut","framework","give","grasp","hack","hack!","here","hope","https://github.com/mytechnotalent/revers","int","interfac","journey!","last","lesson","let'","main(void)","main+68","manipul","mynewnumb","mynumb","onc","oper","part","pleas","post","processor","processor.","program","r1","review","see","seri","series.","size","solid","std::cout","tabl","thank","topic","tutori","understand","valu","week'","{","–"],"pages/x64-course.html":["architectur","cours","dive","let'","rightaway!","x64"],"pages/part-1-the-cyber-revolution.html":["\"the","(with","1","actual","addit","ai,","alon","archiv","arm","ask","assembl","assembly.","base","basic","below","better","brief","charg","chip","chipset.","click","cloud","complet","comput","content","course.","cover.","cyber","cyber.","decim","deep","devic","dive","do.","dove","down","drones,","each","engag","engin","engineering?","even","everyth","exceptions).","ey","few","forc","free","give","go","goe","hack","here","https://github.com/mytechnotalent/revers","idea","impact","in!","includ","infrastructur","intent","iot","languag","last","latest","learn","lesson","let'","level.","linkedin","live","mani","matter","microprocessor","minut","more","natur","networks,","notion","number","onc","open","opportun","part","peopl","phone,","pleas","possibl","privaci","profile.","public","publish","rare","realli","revers","review","revolut","revolution\".","run","scienc","security.","see","seri","server","simpli","skill","smart","support","system.","tabl","tablet","take","time","today","topic","true","tutori","understand","up","varieti","veri","want","week","wonder","work","x64","x86","year","–"],"pages/part-2-transistors.html":["0.","1","2","addit","appli","architectur","architectures.","attach","audienc","basic","below","binari","boolean","bootabl","brief","build","chang","charg","charge.","chip.","click","close","combin","complet","complex","complic","comput","concept","conduct","content","control","core","cours","cover.","deeper","deliber","discuss","dive","down","draw","each","electr","electrod","end","engin","entir","faucet","few","flow","gate","give","go","grasp","hexadecim","high","https://github.com/mytechnotalent/revers","introduct","journey","keep","kitchen","lack","largest","later","lesson","level","level.","logic","made","make","manipulated.","materi","material.","minut","modern","more","need","next","noth","number","off.","open","oper","part","pleas","possibl","processor","program","properli","quit","realli","relay","repres","resist","semiconductor","semiconductor.","short","similar.","simpl","simpli","spend","start","stick","such","switch","system","system.","tabl","take","think","time","time.","topic","touch","transistor","transistor.","tri","turn","tutori","two","understand","up","us","veri","water","week","wire","wire.","works."],"pages/part-3-logic-gates.html":["\"the","0","0.","1","1.","3","addit","amount","and,","anoth","assembl","basic","below","below.","binari","binary,","both","brief","briefli","build","built","charge.","click","code","combin","complet","complex","comput","concept","content","core","cover.","each","engin","engineer.","engineering?","equal","etc","fals","false.","form","four","gate","give","go","here","https://github.com/mytechnotalent/revers","import","importantli","infinit","input","instruct","instructions.","it.","last","leav","lesson","let’","liter","logic","more","negat","ok","on","oper","or,","order","output","over","part","pick","pleas","possibl","practic","processor","repres","revers","see","sequences.","shortly!","show","simpl","simpli","singl","spend","spoke","start","stay","such","system","tabl","take","this?","togeth","topic","true","tuned!","tutori","two","ultim","understand","up","valu","veri","well...","why...\"","xor","xor,","year"],"pages/part-4-number-systems.html":["(off","(on","+","+5v","0","0).","0,","0.","0101","0111","0:","0v","0v.","0x","0x5f","1","1)","1)can","1,","10","1000","1101","1111","120","120:","128","15","16","2","2)can","2017,","24","24.","24:","3)can","32","352","4","4)can","5)can","56","56.","56:","6)can","64","7)can","8","8)can","8.","80","850","8:","93","95","=","above,","ad","addit","addition!","amaz","anoth","answer","applic","as:","ask","assembl","assembly,","base","basic","befor","below","better","binari","binary!","binary,","binary.","bit","bits.","break","brief","byte","byte.","c++,","c,","call","carri","check","click","code","column","combin","compar","complet","comput","consid","content","convert","core","core.","cover.","crap","creating,","debug","decim","decimal,","decimal.","denot","digit","discuss","dive","down","each","each.","engin","equal","even","everyth","evolv","examin","exampl","expand","familiar","final","fit","follow","following.","following:","framework","futur","give","go","goe","good","grasp","grow.","hack","hell","help","here?","hex","hex.","hexadecimal!","hexadecimal.","highest","hit","https://github.com/mytechnotalent/revers","human","import","includ","inform","insid","instruct","interpret","it’","java,","javascript,","jvm","keep","languag","learn","length","length.","lesson","let'","let’","liter","look","machin","master","matter","me!”","mean","memor","memori","mention","microprocessor","microprocessor.","mind","mind,","need","new","next","nibbl","no,","notat","number","oper","operates.","opposit","order","part","place","pleas","possibl","process","processor","processor.","python,","r,","re","realli","regist","rel","relev","remaind","repres","result","revers","row.","see","seri","seventeen.","simpl","simple.","simpli","singl","so,","sophist","stay","street,","subtract","such","suggest","system","system.","systems?","tabl","table.","take","talk","therefor","thousand","time","tool","topic","truli","tuned!","tutori","two","ultim","understand","us","util","valu","veri","vital","want","wast","week","whether","within","work","yes,","–","“whi"],"pages/part-5-binary-addition.html":["(1)","1","3rd","4","5","8","8th","addit","below","binari","bit","bit.","brief","carri","click","complet","content","cover.","cpu","cpu.","differ","discuss","dive","each","engin","examin","exampl","example:","fashions:","flag","follow","four","gener","give","had:","here","https://github.com/mytechnotalent/revers","import","keep","later","lesson","let","let’","mean","mind","next","nibbl","number:","obviou","occur","on","overflow.","part","pleas","refer","see","simpli","stay","subtraction!","tabl","take","topic","trigger","true.","tuned!","tutori","tutorials.","understand.","veri","week","within"],"pages/part-6-binary-subtraction.html":["(1)","+","0","1","1.","2.","4,","4.","6","7","8","abov","ad","add","addit","ask,","below","binari","bit","bit.","bits.","brief","carri","click","complet","compliment","concept","content","cover.","direct","dive","each","engin","examin","exampl","final","flag","flag.","four","futur","give","https://github.com/mytechnotalent/revers","indic","invert","lengths!","lesson","let","let’","more","move","neg","negative.","next","noth","number","operation:","overflow","part","pleas","point","posit","refer","repres","sign","start","stay","subtract","subtracted.","tabl","topic","tuned!","tutori","two","util","valu","week","word","yield","zero"],"pages/part-7-word-lengths.html":["\"littl","0xaabb.","0xbbaa","128","16","2","32","4","64","7","8","addit","addresses.","architectur","architecture!","befor","below","bit","bits.","both","brief","byte","byte.","call","click","complet","concept","confusing.","content","cover.","defin","digit.","disk","dive","doubl","each","endian,\"","engin","equival","exampl","final","gener","give","goe","good","hex","hope","https://github.com/mytechnotalent/revers","intel","keep","length","lesson","let","lower","make","mean","memori","mind,","next","nibbl","on","part","pleas","processor","processor.","provid","quadword","quit","refer","signific","simpl","stay","store","structur","tabl","talk","topic","tuned!","tutori","up","value.","variou","visual","week","within","word","x64","x86,"],"pages/part-8-general-architecture.html":["\"r\",","\"x64\"","(rip","(these","(thi","128","16","32","64","8","80","add","addit","address","addressable.","ah,","amd","architectur","assembl","automat","ax,","backward","begin","behavior).","below","bh,","bit","bit,","bits,","both","break","brief","bx,","byte","call","ch,","click","compat","complet","content","conventions!","cover.","cx,","dh,","directli","distinction.","dive","dx","each","eax","eight","eip,","engin","entir","esi,","exampl","extend","extens","flag","float","follow","gener","give","here","high","https://github.com/mytechnotalent/revers","ident","includ","increas","inform","instruct","intel64.","languag","legaci","lesson","linkedin.","lower","mmx","mode,","mode.","more","name","new","next","oper","operands.","origin","out","output","overlap","part","platform.","pleas","point","pointer,","portion","previous","processor","provid","purpos","r15.","r8","rax.","regist","register.","registers,","registers.","registers.)","registers:","respectively)","review","rflags,","right","set","sever","similar.","sixteen.","specifi","sse","stay","still","subregist","tabl","term","through","topic","tuned!","tutori","type","us","week","well.","whose","x64","x86","x86'","x86,","x87","zero"],"pages/part-9-calling-conventions.html":["(@)","(in","9","__fastcal","__fastcall.","a,","addit","appli","architecture.","argument","b","b,","below","boolean","breakdown","brief","byte","c","c,","call","case","click","complet","content","convent","cover.","cx,","d","d,","decimal)","dive","dword","dx,","e","each","ecx","edx","engin","exampl","first","five","follow","found","function","function,","give","go","here","https://github.com/mytechnotalent/revers","illustrate:","instructions!","int","left","left.","length,","lesson","list","names.","names;","next","number","paramet","part","pass","performed.","pleas","pop","possible.","prefix","processor","qword,","r8w,","r9w","rcx","rdx.","refer","registers,","registers;","right","sign","simpl","smaller","specifi","stack","stack.","stay","suffix","tabl","topic","translat","tuned!","tutori","two","us","week","word","x","x64","x86","y"],"pages/part-10-boolean-instructions.html":["0","0,","0.","1","1,","1.","10","=","addit","advantag","and,","becom","below","bit","boolean","brief","briefli","click","complet","content","cover.","discuss","dive","down","each","earlier","engin","ex:","ex:———————","exist","first","four","gate","give","https://github.com/mytechnotalent/revers","import","individu","instruct","lesson","level.","logic","metal.","next","not.","number","or,","part","pleas","pointers!","result","revers","same","second","see","stay","tabl","throughout","took","topic","tuned!","tutori","understand","week","xor"],"pages/part-11-pointers.html":["0x10","0x10,","0x10.","0x20","0x20.","0x66","0x66.","10","11","[rax]","[rax],","addit","address","address!","apparent.","array","assum","becom","below","brief","click","code","come","complet","confus","contain","content","cover.","derefer","dive","do:","each","effect","engin","exampl","example:","exist","flat","follow","give","hex","https://github.com/mytechnotalent/revers","insid","know","larg","lesson","let’","load","locat","memori","memory.","model","month","more","mov","move","new","next","noth","on","over","part","pleas","point","pointer","processor.","ptr","put","rax","rax,","rax.","rbx,","rbx.","regist","register.","specif","stay","syntax:","tabl","take","therefor","topic","tuned!","tutori","us","util","valu","week","within","word","x64"],"pages/part-12-load-effective-address.html":["0x20","12","16","2","[rax],","abov","actual","add","addit","address","addressable.","assembl","assum","below","binari","bit","boundari","brief","byte","bytes.","c++,","click","code","complet","content","cover.","data","dive","each","effect","engin","ensur","error.","example:","execut","find","forward","free","give","given","happen.","hood","https://github.com/mytechnotalent/revers","inc","increment","instruct","lea","length","lesson","let’","load","memori","memory.","mov","move","my_var","next","non","on","os","part","place","pleas","pointer","ptr","ram","rax","rax,","rbx","rbx,","rbx.","result","same","see","segment","segment!","singl","someth","space","stay","tabl","thing.","topic","tuned!","tutori","under","unmap","user","valu","variable.","week","word"],"pages/part-13-the-data-segment.html":["1","1)byte","1)real4","13","16","2","2)real8","2)word","3)doubl","32","4","4)quad","5)xmm","6)ymm","8","addit","address","advanc","against","alloc","array","ask","assign","basic","below","binary.","bits.","brief","build","byte","click","code","comment","complet","concept","content","cover.","cpu","critic","data","db","db,","dd","dd,","dive","doubl","down","down.","dq","dq,","dw","dw,","each","engin","entir","final","float","following:","follows:","function","give","global","go","grow","heap","heap.","high","hold","https://github.com/mytechnotalent/revers","known","last","length.","lesson","local","long.","lower","math","memori","more","multidimension","next","notat","number","obvious","oper","part","pleas","point","program.","question","regist","see","segment","separ","seri","shl!","singl","size","sse","stack","start","stay","system.","tabl","think","throughout","topic","tuned!","tutori","understand","up.","us","var","variabl","veri","week","within","word","xmmword","ymmword","ymmword."],"pages/part-14-shl-instruction.html":["00010101","01010101b","10100000","14","2.","8","addit","al","al,","assum","be:","below","binari","bit","brief","click","command","complet","content","cover.","dive","each","engin","give","hold","https://github.com/mytechnotalent/revers","instruct","left.","lesson","let’","move","new","next","part","pleas","regist","see","shift","shl","shr!","stand","stay","tabl","therefor","topic","transpir","tuned!","tutori","two","valu","value.","week"],"pages/part-15-shr-instruction.html":["00000101","00010100","00010100b","15","2.","8","addit","al","al,","assum","below","binari","bit","brief","click","command","complet","content","cover.","dive","each","engin","give","hold","https://github.com/mytechnotalent/revers","instruct","left.","lesson","let’","move","next","part","pleas","regist","right.","rol!","see","shift","shr","stand","stay","tabl","topic","transpir","tuned!","tutori","two","valu","value.","week"],"pages/part-16-rol-instruction.html":["00000001b.","00000010b","1","10b.","16","abov","above.","addit","al","becom","below","below.","binari","bit","bit.","brief","by:","click","command","compil","complet","content","cover.","debugg","demonstr","dive","each","elf64","engin","exampl","f","first","give","goe","here","https://github.com/mytechnotalent/revers","instruct","ld","left","left.","lesson","link","linux","logic","machin","mov","nasm","next","o","part","pleas","remain","represent","rol","ror!","rotat","same","see","simpl","simpli","stand","start","stay","tabl","test","test.asm","test.o","topic","tuned!","tutori","ubuntu","valu","week","well.","x64"],"pages/part-17-ror-instruction.html":["00000001b.","1","10000000b","10000000b.","17","abov","addit","al","basics!","becom","below","below.","binari","bit","bit.","boot","brief","by:","click","command","compil","complet","content","cover.","debugg","demonstr","dive","each","elf64","engin","exampl","f","first","give","goe","here","https://github.com/mytechnotalent/revers","instruct","ld","lesson","link","linux","machin","mov","nasm","next","o","part","pleas","represent","right","right.","ror","rotat","sector","see","simpl","simpli","stand","start","stay","tabl","test","test.asm","test.o","topic","tuned!","tutori","ubuntu","valu","week","x64"],"pages/part-18-boot-sector-basics-part-1.html":["(hex)","0","0x200","16","18","1]","512","[part","addit","basic","below","bio","bios.","bit","boot","bootstrap","brief","byte","choose.","click","compat","complet","comput","content","convert","core","cover.","decimal.","discuss","each","emul","emulator.","engin","exactli","few","first","focu","full","give","go","goe","hd","here","https://github.com/mytechnotalent/revers","immedi","input","instal","io","iso","lesson","load","loader","loader.","media","mode.","modern","more","next","older","oper","os","os.","output","over","part","physic","pleas","processor","processors.","qemu","read","refer","sector","sector.","sophist","switch","system","tabl","topic","tutori","uefi","ultim","us","veri","virtualbox","week","write","x86"],"pages/part-19-boot-sector-basics-part-2.html":["'esc'","'i'","'wq'","(a","16/","17/","19","2]","4","[part","abov","above.","activ","ad","addit","addition","along","alot","applic","apt","assembl","assembly.","assum","back","basic","basics.","below","below.","better","bin","binari","binary.","bio","bit","boot","bootsector.asm.","both","brief","browser.","build","byte","byte).","bytes.","call","click","code","code.","codes.","command","compil","complet","content","copi","cover","cover.","creat","data","dataset","desktop","disk","down","each","eb","eb.","editor","editor.","effort","emb","end","endian","engin","examin","fe","file","file.","find","fire","first","focu","follow","following:","full","futur","get","ghex","give","go","half","hex","http://ref.x86asm.net/coder64.html","https://github.com/mytechnotalent/revers","https://www.linkedin.com/pulse/assembl","identifi","inc","increment","infinit","inform","insert","instal","instruct","integr","intel","itself","itself.","jmp","jump","keep","kevin","label","languag","lectures.","lesson","let'","letter","line","link","linux","liter","littl","look","loop","m","mac.","magic","make","malwar","mind","mode","more","more.","nasm","need","new","next","nibbl","noth","number","one.","opcod","opcodes.","open","oper","order","os","page","part","past","pleas","prior","process","processor","provid","raw","read","real","reason","refer","referenc","rememb","repres","revers","review","run","save","sector","sector.","see","set","sever","simpl","simpli","stage","stand","start","step","such","sudo","suggest","syntax.","tabl","take","termin","terminal.","text","thoma","thousand","through","topic","translat","trigger","tutori","two","type","type:","ubuntu","ultim","understand","up","upon","us","value.","values.","vim","vim.","virtualbox","volumes:","walk","week","well","window","within","works.","world","x64"],"pages/part-20-boot-sector-basics-part-3.html":["1","10.","16.","2","20","3]","3rd","[part","ad","add","addit","aim","along","apt","assembl","aw","azur","base","basic","below","better","binari","boot","brief","byte","call","click","cloud","cloud.","code","code.","compile.","complet","content","correspond","cover.","data","debugg","decim","develop","each","eb","editor.","engin","ensur","examin","familiar","fe","follow","futur","gdb.","ghex","give","gnu","go","happen","hardwar","help","hex","hexadecim","https://github.com/mytechnotalent/revers","inc","inspection.","instal","instructions.","jmp","keep","last","learn","lecture.","lesson","let'","line","linux","littl","loads.","look","machin","major","mani","match","nano.","nasm","nasm.","next","notic","number","opcod","oper","os","part","piec","pleas","power","process","progress","re","read","rememb","review.","saw","sector","see","seem","series.","servic","sever","signific","slow","slowli","sourc","sudo","system","systems.","tabl","thorough","those","today","topic","tradit","tutori","tutorials.","type","ubuntu","unclear","understand","upon","us","util","valu","vast","veri","vim","week","weeks/month","well","x64"],"pages/part-21-boot-sector-basics-part-4.html":["0","1","11101011","21","4]","[part","abov","above.","add","addit","ascii","basic","basics.","below","better","binari","binary.","boot","brief","characters.","click","close","code","code:","compile.","complet","concept.","content","continu","convers","correspond","cover.","down","each","eb","editor.","engin","everyth","examin","give","go","goe","googl","hex","homework:","https://github.com/mytechnotalent/revers","lesson","let'","letter","letter.","level.","next","now","number","numbers,","origin","part","pleas","proof","repres","research","review","sector","see","seen","select","seri","stay","string","tabl","take","those","today","topic","tuned!","tutori","ultim","understand","valu","week"],"pages/part-22-boot-sector-basics-part-5.html":[".bin",".iso","0","0'","0xaa55","200h","22","512","55","5]","7","[part","aa","aa.","above.","accomplish","ad","addit","algorithm","anticipated.","attempt","basic","begin","below","binari","binary.","boot","boot.","brief","build","byte","chose","click","code","code.","complet","content","cover.","cpu","creat","critic","each","easili","editor.","either.","emul","end","endian","engin","examin","file","find","format.","give","goe","hex","https://github.com/mytechnotalent/revers","identifi","it'","it.","launch","lazi","left","lesson","let'","line","liter","littl","look","magic","mani","map","more","new","next","noth","now","number","oper","order.","out","pad","part","pleas","port","processor","qemu","refer","remain","remaind","rememb","revers","sector","sector.","see","set","signatur","simpl","simpli","stay","subtract","success","system","system.","tabl","this.","today","topic","tuned.","tutori","understand","up","us","veri","virtualbox","vmware","week","zeros."],"pages/part-23-boot-sector-basics-part-6.html":["(if","200h","23","6]","[part","abov","addit","address","architectures.","basic","below","binary.","boot","brief","byte","click","complet","content","cover.","create.","detail","differ","discuss","each","emul","engin","exactli","first","focu","following.","give","https://github.com/mytechnotalent/revers","infinit","interest","jump","keep","last","lecture)","lesson","lessons.","look","loop","make","medium","memori","mind","new","next","noth","obtain","on","os","os.","part","place","pleas","previou","process","qemu","review","run","sector","see","sens","set","signatur","simpl","simpli","specif","spoke","stack","successful.","systems.","tabl","topic","tutori","type","up","us","week","within","x86"],"pages/part-24-boot-sector-basics-part-7.html":["(note:","0x7e00.","1)0x0","2)0x400","24","3)0x7c00","4)0x7e00","5)0x9fc00","6)0xa0000","7)0xc0000","7]","8)0x100000","=","[part","addit","alloc","area","base","basic","befor","below","bio","boot","boot.","bootabl","bootload","bootsector.","brief","buffer","call","click","code","complet","connect","content","cover.","creat","critic","data","develop","devic","device.","discuss","disk","doing).","each","engin","exist","exist.","extend","file","firmwar","free","give","here","hold","https://github.com/mytechnotalent/revers","in.","interrupt","laid","lesson","load","machin","map","memori","memory.","need","next","offici","os","out","part","pleas","point.","ram","rememb","resides.","run","sector","set","simpl","simpli","space","stack","state","store","system","tabl","topic","track","tutori","understand","up","variabl","vector","veri","video","yet."],"pages/part-25-boot-sector-basics-part-8.html":["0","0x30","0x39","0x7c00.","25","32","64","640x200","8]","9","9.","[part","absolut","accept","addit","address","allow","anyth","area","ascii","assembly.","base","basic","basics.","befor","below","bit","boot","bridg","brief","call","charact","click","code","code:","compil","complet","comput","concept","consol","console.","console:","content","control","cover.","creat","critic","custom","detail","digit","discuss","do","each","editor.","engin","enter","examin","final","first","function","give","go","greyscal","here","hex","high","https://github.com/mytechnotalent/revers","identifi","input","instal","last","lesson","let","let'","level","liter","mini","mode","mode.","move","next","noth","numer","os","os.","part","piec","pleas","pointer","pointer.","program","put","qemu","realli","review","run","run:","sector","see","seri","set","show","simpli","stack","tabl","take","thing","time","today","together.","topic","tri","tutori","tutorials.","two","type","understand","up,","user","valu","video","week","write","yourself."],"pages/part-26-boot-sector-basics-part-9.html":["0","0xffffffffffffffff.","16","19","2","20","26","32","4","64","9]","[part","access","access.","actual","ad","addit","address","allow","alon","architectur","architectures,","assembl","assembly.","base","basic","befor","below","bit","bits.","block","boot","bridg","brief","briefli","byte","c++","click","code","combin","complet","comput","contain","content","control","cover.","descriptor","dive","each","earli","enabl","engin","enter","execut","explain","extend","extern","fact","familiar","far","final","follow","gdt","give","global","high","https://github.com/mytechnotalent/revers","information.","jump","lesson","level","line","line,","line.","long","memori","mode","mode.","modern","month","need","number","offset","paging.","part","pleas","point","power","process","processor","protect","refer","regist","revers","sector","segment","set","sever","shift","space","start","tabl","take","talk","through","took","topic","touch","tutori","understand","veri","want","week","work","x64"],"pages/part-27-x64-assembly-part-1.html":[".data",".text","10","16","1]","27","60","64","[part","_start","actual","addit","architecture.","assembl","back","basic","basics.","begin","below","bit","block.","block:","break","brief","case","click","code","comfort","compil","complet","content","cover.","creat","data","debug","debugg","decim","declar","each","eax","empty.","engin","entri","exampl","exit","few","form","forward.","gdb.","gdb:","give","global","go","grasp","hard","hex","hold","https://github.com/mytechnotalent/revers","intel","intern","last","leav","lesson","let'","link:","lower","main.","moment","move","next","now","oper","os.","over","part","piec","pleas","point","processor","program","rax","register.","registers.","return","routin","section","see","set","sever","simpl","simpli","spend","start","start:","step","stores.","string","successfully.","syntax","syscall.","tabl","today","topic","tutori","until","us","valu","veri","view","week","workings.","x64"],"pages/part-28-x64-assembly-part-2.html":["0x05","0x10","0x15","21","28","2]","[part","ad","addit","anoth","assembl","below","brief","carefulli","click","code","compil","complet","content","continu","cover.","debug.","decim","disassemble.","each","engin","exampl","example:","expect","forward.","give","go","https://github.com/mytechnotalent/revers","lesson","let'","move","part","pleas","rax","rax.","see","simpl","step","tabl","take","then...","time","topic","tri","tutori","twice","veri","x64"],"pages/part-29-x64-assembly-part-3.html":["0x10","0xb","11","16","29","3]","5","[part","addit","assembl","below","brief","c++","click","code","code:","compil","complet","content","continu","cover.","debug","debugger:","decim","disassemble:","each","eax","engin","examin","exampl","example.","expected.","futur","give","grasp","happen","hex","https://github.com/mytechnotalent/revers","import","instruction.","lesson","let'","load","look","next","part","pleas","rax.","result","run","see","simpl","sourc","start","step","subtract","tabl","today","topic","tri","tutori","tutorials.","twice","valu","veri","x64"],"pages/part-30-x64-assembly-part-4.html":["\"hello",".data","30","4]","[part","add","addit","assembl","assembly.","below","below:","brief","call","charact","click","code","compil","complet","content","cover.","creat","debug","each","echo","end","engin","gdb.","give","https://github.com/mytechnotalent/revers","interrupt","lesson","next","os'","out","output","part","perform","pleas","program","return","run","section","see","simpl","simple,","simpli","spit","standard","statement.","string","tabl","terminal.","today","topic","tutori","util","vector","week","world!\"","world\"","write","x64"],"pages/part-31-x64-assembly-part-5.html":["\"hello","&","'e'","'h'","(0",".bss",".data",".text","0x48","0x65.","1","13","2","31","328","4","5]","64","8","=","[part","_start","a:","aaron","abov","actual","addit","address","again","alloc","argument","ascii","assembl","associ","base","basic","befor","below","below.","binari","bit","both","brief","byte","call","carefulli","case","charact","click","code","code.","code:","comment","comments,","compil","complet","confus","consist","content","correspond","cover.","creat","critic","data","data.","debug","debugger.","declar","definit","depend","describ","determin","differ","digit","digits.","discuss","each","editor","engin","entri","error","error).","exampl","exercis","file.","final","find","firmli","firmwar","first","function","gdb.","give","global","googl","here.","hex","hold","https://github.com/mytechnotalent/revers","id","illustrate.","illustrate:","import","input","inputs.","interrupt","keep","kernel","kernel.","key","label","last","lectur","lecture'","lectures.","length","lesson","let'","linker","linux","list","load","locat","long.","longer","look","map","memori","memory.","mind","moment","more","move","next","nibbl","noth","number","on!","oper","os","otherwis","out","output","part","pleas","point","practic","prior","program","rax","rdi","rdx.","realli","regist","registers.","registers:","replac","repres","request","respect","review","rsi","run:","same","second","section","section.","see","seek","servic","set","show","simpl","slice","someth","specif","standard","string","successfulli","successfully.","such","sys_exit","sys_exit.","sys_writ","syscal","syscall.","system","system.","tabl","table:","take","takeaway","tell","temporari","text","there.","third","three","throw","time","topic","touch","tradit","tutori","two","understand","upon","us","value.","values.","variabl","vector","veri","vs","want","week","week'","works.","world\"","write","x64"],"pages/part-32-x64-assembly-part-6.html":["\"hello","0x6000d8.","32","6]","[part","addit","address","assembl","below","bit","brief","charact","click","closer.","code.","compile...","complet","content","cover.","debug...","each","engin","evalu","examin","give","https://github.com/mytechnotalent/revers","insid","lesson","let'","memori","move","next","part","pleas","register.","return","review","rsi","see","tabl","topic","tutori","week","world\"","x64"],"pages/part-33-x64-assembly-part-7.html":["0x6000d8","33","7]",":)...","[part","addit","address.","aforement","again","alter","and/or","assembl","attack","be","befor","below","binari","bit","brief","byte","career","char","click","code.","command","compile...","complet","content","continu","cover.","debug","debugg","defend","demonstr","done","each","engin","environment.","exampl","final","fun","function","give","gui","hack","help","here","hopefulli","https://github.com/mytechnotalent/revers","infrastructur","instructions.","it'","length","lesson","let'","level.","line","look","memori","memory.","more","motiv","move","need","new","now","operation.","part","pleas","power","produc","profession","provid","purpos","re'","real","redefin","revers","review","rsi.","run","see","seen","set","show","simpl","simpli","sourc","string","string.","successfulli","such.","tabl","through","throughout","time.","tool","topic","toward","truli","tutori","understand","us","veri","verifi","world","x64"],"pages/part-34-x64-c++-1-code-part-1.html":["\"hello","1","1]","2","2.","34","[part","addit","along.","applianc","approach","assembly.","below","break","brief","c++","click","code","come","compil","complet","content","cover.","creat","debug","debugg","down","download","each","echo","end","engin","examin","exampl","example:","follow","forward","function","give","go","hand","here","https://github.com/mytechnotalent/revers","introduc","kali","language.","learn","lesson","let'","librari","line","link:","linux","look","main","major","malwar","month","new","next","output","over","part","pleas","radar","re","re.","real","run","see","simpl","simpli","start","stream","successfulli","tabl","terminal.","terminal:","text","through","today","topic","true","tutori","us","vast","virtualbox","walk","week","world\"","written","x64"],"pages/part-35-x64-c++-2-debug-part-2.html":["'aaa'","'hello","'pdf'","'r2","'s","./1'","0x10","0x2005","16","2","2.","2]","35","[part","addit","addition,","address","analyz","anoth","assembl","back","base","basic","befor","begin","below","below.","binari","binary.","break","brief","byte","c++","call","choice.","clearli","click","code:","command","compile:","complet","content","cout","cover.","critic","debug","debugg","decid","decim","disassembl","display","down.","each","encourag","engin","entri","examin","featur","first,","forward.","free","gdb","give","go","hack","hard","here","here.","hex","highli","https://github.com/mytechnotalent/revers","imag","instal","introduc","iot","kali","keep","lesson","let'","librari","linux","liter","location:","lot","main","make","memori","mode","modifi","more","move","much","next","none","ok,","onto","open","output","part","pleas","point.","pointer","prior","prologu","push","qword","radar","rbp","reason","refer","regist","reserv","review","robust","room","routin","rsp","run","run:","safe","see","seek","sens","seri","series.","server","set.","simpli","stack","stack.","stay","still","stream","string","string.","struggl","sym.main'","system","tabl","termin","terminal.","topic","tune","tutori","type","understand","up","us","valu","verifi","version","vim","virtualbox","vm","w","week","week!","well.","windows.","world.","world\\n'","write","x64","year"],"pages/part-36-x64-c++-3-hacking-part-3.html":["'aaa'","'hello","'pdf'","'r2","'s","./1'","0x10","0x2005","0x2005!","16","2","3","36","3]","@","[part","abov","addit","address","against","analyz","assembl","back","base","basic","befor","begin","below","binari","binary!","binary.","boom!","break","brief","byte","c","c++","call","clearli","click","code:","command","compar","compile:","complet","content","continu","cout","cover.","critic","decim","disassembl","display","down.","each","elementari","engin","engineering.","entri","examin","first,","forward.","give","go","hack","hack!","here.","hex","https://github.com/mytechnotalent/revers","insid","journey","keep","lesson","let'","level","librari","like:","line","location:","lot","main","make","memori","mode","modifi","move","next","none","now","ok,","onto","open","output","part","pleas","point.","pointer","prologu","push","quit","qword","radar","rbp","refer","regist","rememb","reserv","revers","review","room","routin","rsp","run:","safe","see","seek","sens","seri","simpli","someth","stack","stack.","step","stream","string","string.","such.,","sym.main'","tabl","terminal.","time","topic","tutori","type","understand","up","us","valu","veri","verifi","w","week","world\\n'","write","x64"],"pages/part-37-x64-c-amp;-genesis-of-life.html":["\"hello","\"i","&","37","addit","agil","allow","basic","becom","begin","below","between","binari","brief","busi","c","c#","c++","c.","church","click","come","compil","complet","congrat","content","control","cours","cover.","cyber","design","details.\"","develop","differ","digit","each","einstein","engin","environ","environment.","environments.","existence.","father","first","focu","genesi","give","go","god'","hack","https://github.com/mytechnotalent/revers","java","know","languag","language.","languages.","lesson","life","logic","master","masteri","modern","month","necessari","need","next","nonetheless","now","on","over","part","partial","pleas","portabl","prior","program","program.","python","rapid","religion","rememb","rest","revers","root","secular","server","sever","sit","spawn","systems!","tabl","teach","term","think","thoughts,","today'","topic","total","tutori","us","varieti","want","web","word","work","world\"","wrote,","x64"],"pages/part-38-x64-networking-basics.html":["(radio","1)physic","2)data","3)network","30","38","4)transport","5)session","6)present","7","7)applic","add","addit","agre","app","applic","apps.","architectur","arp,","associated:","away.","back","basic","below","between","billion","brief","briefli","brows","browser","c","cabl","call","checkpoint","chunk","click","common","complet","concept","connect","content","control.","correction,","cours","cover.","creat","cycle.","data","deal","deliv","describ","detect","devic","dhcp,","dialogues.","differ","dns,","down","dsl,","each","electr","email,","encoding,","encryption.","end","engin","error","establish","etc.","etc...","ethernet","ethernet,","fi","find","flow","focu","frame","framework","free","frequencies).","ftp,","give","go","goe","good","high","hit","host","http,","https,","https://github.com/mytechnotalent/revers","icmp,","import","infrared,","insane,","interconnect","interfac","internet","involv","ipx,","isdn,","language.","layer","layers.","learn?","lesson","level","link","messag","model","model.","nat,","netbios,","network","networking.","node","nonetheless,","note","now?","ok","on?","open","osi","over","packet","part","physic","pizza","pleas","pop3,","present","program","protocol","pseudo","purpose?","raw","read","reliabl","rememb","resum","rf","routing.","sausag","send.","seri","serial","server","shall","smb,","smtp,","socks,","split","ssl,","standard","start","structur","stuck.","suggest","system","tabl","tcp,","telnet,","term","theori","thread","through","throw","tls,","today.","topic","touch","transmit","tutori","two","udp,","understand","up","upon","us","usb,","veri","vlan,","voltag","want","way","web","websit","well,","wi","work","world?","x64","youtub"],"pages/part-39-why-c.html":["0100010100100100101010","010101000101001011","0x22","0x222323123,","0x45","0x90","39","abov","abstract","actual","addit","and/or","assembl","away","below","binari","brief","c","c?","click","code","commun","complet","comput","construct","content","cover.","creat","data.","digit","each","easili","engin","etc...","existence.","first","give","grandfath","hardware.","hex","https://github.com/mytechnotalent/revers","instruct","languag","language,","lesson","level","machin","mani","modern","more","more...","mov","next","part","pleas","program","program!","rax,","real","seri","server","small","so...","tabl","topic","translat","tutori","understand?","x64"],"pages/part-40-hacking-hello-world!.html":["'hello","(sinc","0.","0x2004","1)we","2)we","3)we","4)we","40","aaa","addit","address","address.","again","along.","alot","alter","analyz","analyze:","anyth","arlington,","ask","assembl","assembly!","back","base","basic","befor","below","binari","binary.","brief","c","c++","call","char","chose","clean","click","code","command","comment","compil","complet","confirm","confus","content","continu","continue!","cover.","creat","critic","current","debug","debugg","definit","destroy","detail","digest","directli","disk).","domain.","each","earlier","easi","eax","echo","effect","engin","enough.","examin","exampl","exit","far","fire","follow","following.","function","give","hack","happen","hell!","hello","help.","here","here.","hous","house!","https://github.com/mytechnotalent/revers","includ","int","integ","it'","it.","know","lea","lesson","let'","librari","live","load","look","main","map","masteri","mean","memori","mess","now","ok","ok,","onto","optim","origin","out","over","part","pleas","please!","please.","pointer","pop","pretti","previou","printf","program,","push","put","quad","question","qword","radare:","raw","rbp","rbp.","rdi","rdi,","re","regist","register.","return","review","review.","run:","s","same","see","see:","seek","seri","sexy!","simpl","simple,","singl","stack.","standard","stdio","step","str.hello_world","string","stump","success!","successfulli","successfully.","sym.imp.put","sym.main.","tabl","technic","terminal.","thing","time","topic","tutori","type","um","understand","up","us","va","valu","vim","w","wait!","want","well","went","word","world!","world!'","write"],"pages/part-41-hacking-variables!.html":["'a'","'a'.","'b'.","0x0000113d","0x1],","0x61","0x61.","0x62","3","41","[local1_h]","[local1_h],","[rbp","a,","above.","actual","addit","address","alloc","ascii","b","base","basic","below","below.","binari","binary:","brief","byte","c","c.","char","charact","clearli","click","code","comment","comments!","compil","complet","content","cover.","creat","data","debugg","declar","defin","disassembl","done","doubl","double.","each","engin","examin","examples:","exercis","exit","explor","fact","few","forward","give","go","hack","happen?","homework","hood","hopefulli","https://github.com/mytechnotalent/revers","import","instruct","int","integ","know","knowledg","lesson","let'","load","local_10h","local_1h","local_8h","look","lowercas","main:","make","map","me!","memori","mov","nice","now","ok","onto","order","out","part","pleas","pointer","portion.","pseudo","push","put","quit","radar","radare:","rbp","re","real","realiti","realli","result","revers","run","run:","section","see","sens","seri","sever","show","shown","simpl","simple,","simpli","someth","space","stack","stay","successfulli","tabl","therefore,","think","time!","top","top.","topic","tutori","type","under","up","us","valu","value.","variabl","variables!","variables.","veri","want","within","you."],"pages/part-42-hacking-branches!.html":["\"a","(we","0x00001144","0x00001148","0x0000114a","0x00001158","0x1158.","0x4.","1","1!\".","42","actual","addit","aqua","around","arrows.","assembly:","be","below","binari","branch","branches!","brief","click","cmp","code","color","compar","comparison","compile:","complet","confus","content","cover.","detail","each","engin","equal","equal.","exit","first","give","hack","https://github.com/mytechnotalent/revers","init","int","je","jne","jump","know","last","lesson","lesson.","let'","load","local_4h","logic","logic:","look","make","mean","note","now","output.","over","part","plainli","pleas","print","pseudo","radar","rbp","rdi.","respons","revisit","run:","second","see","sens","simpli","standard","statement","stay","successfully:","tabl","take","taken.","topic","tuned!","tutori","variabl","week","went"],"pages/part-43-hacking-pointers!.html":["(thi","3","43","6.","777.","add","addit","address","address.","address:","anoth","arm","array:","basic","below","binary:","brief","clearli","click","compil","compile:","complet","content","cover.","critic","debug:","defer","disassemble:","do","each","end","enemi","engin","equal","examin","exampl","example.","example:","examples).","experi","final","following:","give","go","good","hack","hack!","hack.","hand","hope","https://github.com/mytechnotalent/revers","hundr","infrastructur","knowledg","lesson","let'","liter","live","look","lottery_numb","made","malici","map","memori","more","more:","new","noth","over","part","pleas","point","pointer","pointers!","pointers.","pointers?","protect","radar","re","rememb","road.","run","same","see","series.","start","success","tabl","through","topic","true","tutori","understand","unlik","unmap","valu","value:","variables.","video","way:","work!","works.","x64","x86,","year"],"pages/arm-64-course.html":["64","architectur","arm","bit","cours","dive","let'","rightaway!"],"pages/part-2-development-setup.html":["\"hello","&","(64","(img.xz)","(v1.2),","2","3","4","4]","64","64gb","[load","\\_arm64","addit","amaz","arm","balenaetch","below","bit","bit)","both","brief","build","built","byte","c++","card","cd","click","clone","code.","comfort","complet","content","cover.","develop","devic","document","download","each","editor","environ","environment.","final","first","flash","following:","free","gfr204sd","git","give","go","https://github.com/mytechnotalent/hacking\\_c","https://github.com/radareorg/radare2","https://github.com/radareorg/radare2.git","https://www.adafruit.com/product/4292","https://www.balena.io/etch","https://www.offens","https://www.simplified.guide/ubuntu/instal","https://www.sparkfun.com/products/16498","https://www.walmart.com/ip/iogear","https://youtu.be/jquf9bdm4iu","imag","in.","instal","job","kali","latest","lesson","linux","micro","microsd","minutes.","mmc","nano","necessari","need","needs.","next","null","obtain","on","optional:","part","pi","pleas","program","radare2","raspberri","raspberrypi","reader","reader/writ","rpi","sd","security.com/kali","set","setup","softwar","standard","step","suffici","sys/install.sh","tabl","text","today","topic","tutori","up","us","version","video","vim","want","watch","whatev","with.","world!\".","write","writer/15522266"],"pages/part-3-hello-world.html":["\"hello","#includ","./0x01_asm64_helloworld","0x01_asm64_helloworld","0x01_asm64_helloworld.cpp","3","\\_arm64","addit","advanc","begin","beginn","below","binari","brief","buffer.","build","c++","click","compil","complet","content","cours","cover.","creat","debug","deliber","dev","each","end","file","flush","follow","friendli","g++","give","go","hello","https://github.com/mytechnotalent/hacking\\_c","insert","int","intend","it.","know","lesson","let'","line","link.","liter","main()","make","manipul","more","next","noth","number","o","oper","output","part","pleas","possible.","program","radare2.","realli","result.","run.","see","send","short","simpl","simple.","start","std::cout","stdout","stream","string","tabl","take","today","topic","type","us","veri","want","world!","world\"","{"],"pages/part-4-debugging-hello-world.html":["\"hello","'e'","'h'.","(59575)","(aslr)","(ios,","./0x01_asm_64_helloworld","0","00.","0x55629ca9e4","0x55629cab48","0x55629cab48.","0xb48.","16","2001.","4","48","64","65","8","@0x55629cab48","[0x55629ca9e4]>","[0x7fb146cb8c]>","\\_arm64","aaa","abov","addit","address","advantag","again","against","along","along.","alsr.","analysi","analysis.","analyze.","android,","arm","ascii","aslr","assembl","at.","at:","attack","attacks.","auto","back","basic","begin","below","better","between","binari","binary.","bit","break","breakpoint","brief","buffer","build","byte","byte.","capit","case","char","click","code","code.","column","complet","conclud","consol","content","continu","convent","cours","cover.","current","data","db","dc","debug","defin","dev","differ","digit","discuss","disk","disk.","display","do","document.","each","end","entir","entri","environ","examin","execut","exist","exit","extrapol","fact","featur","feature.","feed","few","find","fire","first","follow","following.","form","forth.","function","give","go","h.","hack","half","hand","handle,","hello","help","hex","hex.","hit","hope","http://www.asciitable.com","https://github.com/mytechnotalent/hacking\\_c","hypothesis.","imag","implement","import","initi","instanc","instruct","junk","keep","key","larg","later.","layout","lesson","lesson.","let'","letter","level.","linux)","logic","long","look","lsb","machin","macos,","main","main.","major","malici","map","mapped.","memori","mine?","mode","much","need","next","nibbl","notic","now","obvious","offset","onlin","ood","open","oper","output","overflow","overflow,","part","payload.","perfectli","pleas","point","primarili","print","process","process.","program","properly.","protect","protection.","ps","px","q","radare2","radare2'","radare2.","ran","random","raw","readabl","refer","rememb","rerun","resid","rest","result","result.","revers","right","run","s","same","second,","secur","see","seek","simpli","singl","space","start","status=0x0","stdout.","step","string","system","systems,","tabl","table.","take","techniqu","thing","things.","throughout","time","to.","today","togeth","topic","translat","true","understand","unmap","unmapped.","up","us","util","v","valid","valu","value.","veri","verifi","version","view","view.","visit","want","wide","window","windows,","world!","world!\"","world!\".","world\"","y","yourself"],"pages/part-5-hacking-hello-world.html":["\"hello","./0x01_asm_64_helloworld","0xb48","5","@0xb48","[0x000009e4]>","\\_arm64","aaa","addit","address","again!","analyze.","anticip","attack","auto","back","below","better","binari","binary.","brief","click","complet","content","cover.","creat","deal","disassembly.","discuss","disk","each","easi","easili","engineer.","find","fire","give","go","good","groundwork","hack","hack.","hello","help","https://github.com/mytechnotalent/hacking\\_c","i/o.","insid","laid","last","learn","lesson","lesson.","let'","main","main.","memori","mode.","next","now","part","pleas","ps","q","quit","radare2","radare2.","realli","revers","run","s","see","seek","simpl","spent","string.","tabl","termin","time","topic","understand","up","v","veri","verifi","view","view.","w","work","workflow","world","world!","world\"","write"],"pages/part-6-basic-io.html":["#includ","&&","'\\0';","'abc'","'hey","(!valid)","(i","./0x02_asm64_basicio","0.","0;","0x02_asm64_basicio","0x02_asm64_basicio.cpp","1","100","2","6","=",">",">=",">>","\\_arm64","above.","addit","advantag","ag","again","age)","age.","allow","appropri","assign","associ","basic","befor","below","binari","bool","brief","buffer.","build","c++","call","chained.","char","check","cin","cin,","cin.","click","compil","complet","connect","content","cout.","cover.","creat","criteria.","data","debug","defin","depend","describ","dev","each","echo","emphas","enter","enter,","everyth","exampl","example:","explain","extract","fail","false;","far","final","first","flush","full","function","g++","getline()","give","given","globe.","go","goe","greater","happen","here.","hit","https://github.com/mytechnotalent/hacking\\_c","i/o","ignored.","import","input","input.","instead","int","integ","integer?","iostream,","is.get(null))","issue.","itself","jude'","keep","keyboard","leav","lectur","less","lesson","let'","librari","line","link.","littl","long","look","main()","manipul","mean","meet","minim","never","never!","newlin","next","noth","null","o","object","object.","out","part","pick","pleas","point","press","problem","program","prompt","properly.","provid","put","radare2.","raw","read","realli","refer","remain","respons","return","right","run.","see","short","short,","simpl","simpli","sourc","space","sstream","standard","start","state","std::cin","std::cout","std::w","stdin.","stdout","straight","stream","stream,","stream.","string","string.","stringstream","tab","tabl","take","termin","textbook","today","topic","tri","tricky.","type","understand","unreliable.","up","us","user","val1","val1;","val2","val2;","valid","validation.","veri","want","well","white","whitespac","whitespace,","wind","{","||"],"pages/part-7-debugging-basic-io.html":["\"","\"dude","\"enter","\"you","(2215)","./0x02_asm_64_basicio","0x5566be00c4","0x5566be00cc","0x5566be017c","0x5566be01d0","0x5566be0214","0x5566be0218","0x5566be0244","33","7","[0x5566be0194]>","[ok]","[ol]","\\_arm64","_0x5566be0238","_where","aaa","addit","advantag","age:","analysi","around.","arrow","at:","auto","back","basic","begin","below","binari","binary.","bne","breakpoint","brief","call","captur","click","code","complet","condit","content","continu","correct","coupl","cover.","cycl","db","dc","debug","disk","do","each","enter","entri","examin","exit","expand","failur","feature.","find","fire","following.","following:","function","function.","give","go","graph","graph.","hack","hit","https://github.com/mytechnotalent/hacking\\_c","i/o","identifi","initi","input","insid","instanc","istream","key","last","lecture.","legit!","legit!\".","lesson","let'","liter","logic","look","loop","machin","main","main.","map","mode","move","next","note","notic","now","ol","old,","ood","open","out","output","p","part","pleas","point","ppppp","process","process.","program","proper","q","qq","radare2","radare2'","radare2.","raw","real!\"","result","return.","rout","run","s","see","seek","seem","seri","set","start","status=0x0","stdin","step","stream","string","success","such","tabl","tag","take","thing","today","topic","type","up","us","v","valid","validation.","valu","veri","visual","vv","want","year","zoom"],"pages/part-8-hacking-basic-io.html":["(b.eq","./0x02_asm_64_basicio","0","0x000010c4","0x1214","0x1214)","100","4","8","800a0054","=","[0x000010a4]>","[0x000010c4]>","\\_arm64","aaa","accept","accomplish","addit","alon","analyze.","anything.","arriv","assembl","assign","auto","b.eq","b.ne","back","basic","befor","begin","below","between","binari","block.","branch","brief","byte(s)","case","chang","char","click","code","combin","complet","condit","content","correct","cover.","data","demonstr","desir","disabl","disassembly.","discuss","discussed.","dure","each","engin","equal.","even","exampl","expect","fail","fals","fire","first","flow.","follow","function.","give","graph","green","hack","hack.","happen","here","https://github.com/mytechnotalent/hacking\\_c","i/o","ignor","input","input.","instruct","integ","kali@kali:~/documents/0x02_asm_64_basicio$","know","last","leav","lecture.","legit!","lesson","lesson.","let'","line","liter","look","main","main.","matter","mean","mode.","need","new","next","normal","now","obtain","old,","on","part","perman","pleas","point.","primit","program","progress","prompt.","proper","properli","q","qq","quit.","radare2","regist","revers","run","s","see","seek","seem","sent","simpl","simpli","statement","tabl","tact.","termin","though","today","topic","true","true,","type.","under","unstabl","up","v","valid","valu","veri","view","view.","visual","w","wa","want","write","written","wx","year"],"pages/part-9-character-primitive-datatype.html":["#includ","'c';","./0x03_asm64_char_primitive_datatyp","0x03_asm64_char_primitive_datatyp","0x03_asm64_char_primitive_datatype.cpp","9","=","\\_arm64","_and","_c.","addit","assign","basic","below","brief","c","c++","call","char","charact","click","compil","complet","content","cover.","creat","datatyp","datayp","debug","each","echo","example.","extrem","first","following.","g++","give","go","https://github.com/mytechnotalent/hacking\\_c","int","lesson","let'","link.","look","main()","more.","my_char","next","noth","o","part","pleas","primit","primitive.","print","quotes.","run.","see","simpl","simple.","simpli","singl","std::cout","stdout","stdout.","store","successfulli","surround","tabl","talk","termin","today","topic","us","variabl","veri","week","{"],"pages/part-10-debugging-character-primitive-datatype.html":["'c'","(10845)","./0x03_asm64_char_primitive_datatyp","0x00000001","0x00000063","0x01.","0x5576bff9ec","0x63","0x63.","10","[0x5576bff9e4]>","[0x5576bff9ec]>","[0x7f9727503c]>","\\_arm64","aaa","addit","address","advantag","again","analysi","anoth","ascii","aslr.","at:","auto","begin","below","binari","binary.","break","breakpoint","brief","c","char","charact","choice.","click","code","complet","contain","content","contents.","continued.","cover.","datatyp","datatype.","db","dc","debug","differ","disk","do","down.","dr","ds","due","each","echo","entri","examin","exit","expected.","fact","feature.","fire","following.","give","go","hack","hit","https://github.com/mytechnotalent/hacking\\_c","initi","insid","instanc","lesson","let'","logic","look","machin","main","map","mode","move","next","now","onc","ood","open","part","pleas","point","primit","process","process.","program","radare2","radare2'","radare2.","raw","regist","register.","rememb","run","s","saw","see","seek","set","simpl","status=0x0","stdout","step","successfulli","tabl","take","thing","today","topic","up","v","valu","veri","verifi","w0","want"],"pages/part-11-hacking-character-primitive-datatype.html":["(movz","./0x03_asm64_char_primitive_datatyp","0x000009ec","0x66","0x66)","11","4","=","@","[0x000009e4]>","\\_arm64","aaa","addit","analyze.","assembl","auto","back","below","binari","binary!","boolean","brief","build","byte(s)","c00c8052","char","charact","choosing.","click","complet","content","cover.","datatyp","datatype.","disassembly.","each","f","fire","give","hack","https://github.com/mytechnotalent/hacking\\_c","kali@kali:~/documents/0x03_asm64_char_primitive_datatype$","last","lesson","lesson.","let'","main","main.","mode.","movz","new","next","part","perman","pleas","primit","q","quit","radare2","real","run","s","see","seek","seri","set!","skill","specifi","success","successfulli","tabl","take","termin","terminal.","today","togeth","topic","trivial","up","v","veri","view","view.","w","w0,","wa","work","write","written","wx"],"pages/part-12-boolean-primitive-datatype.html":["#includ","./0x04_asm64_boolean_primitive_datatyp","0","0x04_asm64_boolean_primitive_datatyp","0x04_asm64_boolean_primitive_datatype.cpp","1","12","=","\\_arm64","_1","_and","_true","_valu","addit","anoth","anyth","assign","basic","below","bool","boolean","brief","c++","click","compil","complet","content","cover.","creat","datatyp","debug","each","echo","example.","extens","fals","flag","following.","g++","gener","give","go","https://github.com/mytechnotalent/hacking\\_c","int","it.","kind","lesson","let'","link.","look","main()","my_bool","next","o","part","pleas","primit","print","program","repres","run.","see","simpl","simple.","simpli","std::cout","stdout.","store","successfulli","tabl","talk","termin","today","topic","true.","true;","understand","us","usage.","veri","week","{"],"pages/part-13-debugging-boolean-primitive-datatype.html":["(96445)","./0x04_asm64_boolean_primitive_datatyp","0.","0x00000001","0x1","0x1_or","0x55718999bc","1","13","[0x55718999b4]>","[0x55718999bc]>","[0x7fac4f903c]>","\\_arm64","_0x1","_or","_true","aaa","addit","address","advantag","again","analysi","aslr.","at:","auto","befor","begin","below","binari","binary.","bool","boolean","breakpoint","brief","broke","click","code","complet","content","contents.","cover.","created.","datatyp","datatype.","db","dc","debug","differ","disk","do","dr","ds","due","each","echo","entri","examin","exit","expected.","fact","feature.","fire","following.","give","go","hack","hit","https://github.com/mytechnotalent/hacking\\_c","initi","insid","instanc","lesson","let'","logic","machin","main","make","map","match","mean","mode","move","movz","next","now","ood","open","part","place","pleas","point","primit","process","process.","program","put","radare2","radare2'","radare2.","raw","regist","rememb","right","run","s","saw","see","seek","set","simpl","simpli","sourc","status=0x0","stdout","step","step.","successfulli","tabl","take","thing","today","topic","true.","up","v","valu","veri","verifi","w0","w0,","want"],"pages/part-14-hacking-boolean-primitive-datatype.html":["(movz","./0x04_asm64_boolean_primitive_datatyp","0","00008052","0x0","0x0)","0x0.","0x00000009bc","1","14","4","=","@","[0x000009b4]>","\\_arm64","_0.","_or","aaa","addit","analyze.","assembl","auto","back","below","binari","binary!","boolean","brief","byte(s)","click","complet","content","cover.","datatyp","datatype.","disassembly.","each","fals","fire","give","hack","https://github.com/mytechnotalent/hacking\\_c","integ","kali@kali:~/documents/0x04_asm64_boolean_primitive_datatype$","last","lesson","lesson.","let'","main","main.","mode.","movz","new","next","now","origin","part","perman","pleas","primit","q","quit","radare2","run","s","see","seek","specifi","successfulli","tabl","termin","terminal.","today","topic","true","up","v","view","view.","w","w0,","wa","work","write","written","wx"],"pages/part-15-float-primitive-datatype.html":["#includ","./0x05_float_primitive_datatyp","0x05_float_primitive_datatyp","0x05_float_primitive_datatype.cpp","10.1","10.1;","15","=","\\_arm64","addit","assign","below","brief","c++","click","compil","complet","content","cover.","creat","datatyp","debug","each","echo","example.","float","following.","g++","give","go","https://github.com/mytechnotalent/hacking\\_c","int","it.","lesson","let'","link.","main()","my_float","next","o","part","pleas","point","primit","print","run.","see","simpl","simple.","simpli","std::cout","stdout.","store","successfulli","tabl","talk","termin","today","topic","valu","values.","veri","week","{"],"pages/part-16-debugging-float-primitive-datatype.html":["(237691)","./0x05_asm64_float_primitive_datatyp","0x4121,","0x4121999a","0x557931c9c8","0x999a","10.1","16","4121","999a","[0x557931c9b4]>","[0x557931c9c8]>","[0x7fb948407c]>","\\_arm64","aaa","addit","address","advantag","analysi","arm64","aslr","at:","auto","befor","begin","below","below,","binari","binary.","break","breakpoint","brief","byte","chang","click","code","complet","content","continu","cover.","datatyp","datatype.","db","dc","deal","debug","defin","differ","disk","do","dr","ds","each","entri","examin","example.","exit","feature.","fire","float","fmov","following.","give","go","hack","happens!","harder","here","higher","hit","https://github.com/mytechnotalent/hacking\\_c","initi","instanc","instruct","instruction.","left,","lesson","lesson.","let","let'","locat","locations.","logic","look","lower","lsl","machin","magic","main","map","mode","move","movk","movz","next","now","number","occur","ok","ood","open","order","otherwis","part","pleas","point","primit","process","process.","program","put","radare2","radare2'","radare2.","raw","regist","register.","rememb","right","run","s","s0","s0,","see","seek","shift","show","significantli","simpl","status=0x0","strang","tabl","take","therefor","thing","today","topic","understand","up","us","v","valu","value!","value.","veri","w0","w0,","want"],"pages/part-17-hacking-float-primitive-datatype.html":["(238245)","(238246)","(238247)","(238248)","(238250)","(238252)","(238253)","(238257)","(238258)","(238259)",".","./0x05_asm64_float_primitive_datatyp","./0x05_float_primitive_datatyp","0x3333","0x4121,","0x4121999a","0x4122999a","0x4123,","0x41233333","0x41235555","0x4123599a","0x4123999a","0x4125999a","0x412f999f","0x412ff99e","0x412fff9e","0x412ffffe","0x555e6c29c8","0x556215e9c8","0x55716ab9c8","0x557b1b39c8","0x558216c9c8","0x55826479c8","0x55868a79c8","0x55880169c8","0x559130d9c8","0x55931439c8","0x999a","1","10","10.1","10.1625","10.2","10.2083","10.2094","10.225","10.35","10.975","10.9984","10.9999","11","16","17","=",">0x4122999a",">0x41233333",">0x41235555",">0x4123599a",">0x4123999a",">0x4125999a",">0x412f999f",">0x412ff99e",">0x412fff9e",">0x412ffffe","@0x000009bc","@0x000009c0","[0x000009b4]>","[0x555e6c29c4]>","[0x555e6c29c8]>","[0x556215e9c4]>","[0x556215e9c8]>","[0x55716ab9c4]>","[0x55716ab9c8]>","[0x557b1b39c4]>","[0x557b1b39c8]>","[0x558216c9c4]>","[0x558216c9c8]>","[0x55826479c4]>","[0x55826479c8]>","[0x55868a79c4]>","[0x55868a79c8]>","[0x55880169c4]>","[0x55880169c8]>","[0x559130d9c4]>","[0x559130d9c8]>","[0x55931439c4]>","[0x55931439c8]>","\\_arm64","aaa","above.","activ","actual","addit","address","analyze.","aslr","assembl","at:","auto","back","below","better","binary!","bite","breakpoint","brief","build","byte","case","cd","click","clone","close","code.","complet","content","cover.","critic","current","datatyp","dc","debug","differ","disassembly.","discuss","doubles.","dr","each","earlier","examin","exampl","exit","expon","fire","first","float","follow","git","give","go","hack","here.","hit","hold","https://github.com/mytechnotalent/hacking\\_c","https://github.com/radareorg/radare2","instruct","instructions.","kali@kali:~/documents/0x05_float_primitive_datatype$","keep","last","lesson","lesson.","lessons.","let'","look","lsl","main","main.","mantissa","mind","mode.","move","movk","movz","need","next","now","number","order.","out","part","pattern","pleas","point","primit","prior","process","produc","pull","put","q","radare2","rare","register!","releases.","rememb","repo,","result","results.","revers","run","s","s0","see","seek","seen","separ","session","sourc","specif","start","status=0x0","sys/user.sh","tabl","take","termin","therefor","ti","time","today","togeth","together.","topic","tri","two","ultim","understand","up","updat","v","valu","values.","veri","view","view.","w","w0","w0,","wa","want","week","work","write"],"pages/part-18-double-primitive-datatype.html":["#includ","./0x06_double_primitive_datatyp","0x05_double_primitive_datatype.cpp","0x06_double_primitive_datatyp","10.1","10.1;","18","=","\\_arm64","addit","assign","below","brief","c++","click","compil","complet","content","cover.","creat","datatyp","debug","doubl","each","echo","example.","float","following.","g++","give","go","https://github.com/mytechnotalent/hacking\\_c","int","it.","lesson","let'","link.","main()","my_doubl","next","o","part","pleas","point","primit","print","run.","see","simpl","simple.","simpli","std::cout","stdout.","store","successfulli","tabl","talk","termin","today","topic","valu","values.","veri","week","{"]},"length":169},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"docs":{},"b":{"docs":{},".":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}}}},"docs":{}},"1":{"0":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364}},"b":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684}}}},"docs":{}},"docs":{}},"1":{"0":{"1":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288}}},"docs":{}},"docs":{}},"docs":{}},"8":{"0":{"5":{"2":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.022556390977443608}}},"1":{"0":{"1":{"0":{"0":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03389830508474576}},"b":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288}}}},"1":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},".":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}},"docs":{}},"1":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}},":":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}},".":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}}},"1":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464}}},"docs":{}},"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.028169014084507043}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"1":{"0":{"0":{"0":{"1":{"0":{"1":{"0":{"0":{"1":{"0":{"0":{"1":{"0":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"1":{"0":{"1":{"0":{"0":{"0":{"1":{"0":{"1":{"0":{"0":{"1":{"0":{"1":{"1":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}},"b":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015}}},"docs":{}},"1":{"0":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391}}},"1":{"0":{"0":{"0":{"0":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"docs":{}},"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.04020979020979021},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.04316546762589928},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.03},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.010706638115631691},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.1951219512195122},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.01834862385321101},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},")":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.020905923344947737}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.01284796573875803},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.024390243902439025},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}},"1":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},"4":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}},"8":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}},"9":{"docs":{},"b":{"docs":{},"c":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.019417475728155338}}}}},"docs":{},"c":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}}},"6":{"3":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}},"docs":{}},"docs":{}},"9":{"docs":{},"e":{"docs":{},"c":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787}}}}},"docs":{}},"1":{"0":{"0":{"0":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"docs":{}},"docs":{},"c":{"4":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"docs":{}}},"1":{"3":{"docs":{},"d":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285}}}},"4":{"4":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},"8":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},"docs":{},"a":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"5":{"8":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.02}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}},"2":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"4":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"5":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"0":{"4":{"8":{"0":{"9":{"2":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}},"docs":{}},"docs":{},"b":{"1":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}},"docs":{}},"d":{"docs":{},"d":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}}}},"4":{"3":{"docs":{},"b":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},")":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}},".":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}},"1":{"0":{"7":{"3":{"0":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025}},".":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125}}}},"docs":{}},"5":{"0":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588}}},"docs":{}},"docs":{}},"8":{"4":{"8":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}},"docs":{}},"docs":{}},"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.03731343283582089},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},")":{"docs":{},".":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}}}},".":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}},",":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}}},"1":{"5":{"8":{"docs":{},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"docs":{}},"docs":{}},"2":{"1":{"4":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},")":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}},"docs":{}},"docs":{}},"5":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}}},"6":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}},"9":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516}}},"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121}},"]":{"docs":{},",":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525}}}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}}},"2":{"0":{"0":{"4":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948}}},"5":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905}},"!":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}},"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}},"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.022388059701492536},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288}},".":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}}},"2":{"2":{"3":{"2":{"3":{"1":{"2":{"3":{"docs":{},",":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.024390243902439025}}},"docs":{}},"3":{"0":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"3":{"3":{"3":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"9":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"docs":{},"a":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}},"4":{"1":{"2":{"1":{"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.027227722772277228}}}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"2":{"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{}},"3":{"3":{"3":{"3":{"3":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"5":{"5":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"5":{"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"9":{"9":{"9":{"docs":{},"f":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{},"f":{"9":{"9":{"docs":{},"e":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{},"f":{"9":{"docs":{},"e":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{},"f":{"docs":{},"e":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"docs":{}},"3":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}}},"5":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}},"8":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"docs":{},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"5":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722}}}},"3":{"9":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}},"docs":{}},"5":{"5":{"docs":{},"e":{"6":{"docs":{},"c":{"2":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"6":{"2":{"1":{"5":{"docs":{},"e":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}}},"docs":{}},"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}}},"docs":{}}},"docs":{},"b":{"4":{"8":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"docs":{}},"docs":{}}}}},"docs":{}},"6":{"docs":{},"b":{"docs":{},"e":{"0":{"0":{"docs":{},"c":{"4":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.017937219730941704}}},"docs":{},"c":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}},"1":{"7":{"docs":{},"c":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}},"docs":{},"d":{"0":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"docs":{}}},"2":{"1":{"4":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"8":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"docs":{}},"4":{"4":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"7":{"1":{"6":{"docs":{},"a":{"docs":{},"b":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}}}},"8":{"9":{"9":{"9":{"docs":{},"b":{"docs":{},"c":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.024242424242424242}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"docs":{},"b":{"docs":{},"f":{"docs":{},"f":{"9":{"docs":{},"e":{"docs":{},"c":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.023809523809523808}}}}},"docs":{}}}}},"9":{"3":{"1":{"docs":{},"c":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"b":{"1":{"docs":{},"b":{"3":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"8":{"2":{"1":{"6":{"docs":{},"c":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"4":{"7":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"8":{"docs":{},"a":{"7":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"8":{"0":{"1":{"6":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"1":{"3":{"0":{"docs":{},"d":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"3":{"1":{"4":{"3":{"9":{"docs":{},"c":{"8":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}}}},"6":{"0":{"0":{"0":{"docs":{},"d":{"8":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}},".":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085}}}},"docs":{}}},"docs":{}},"docs":{}},"1":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"2":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},"3":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904}},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}},"4":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742}}},"5":{"docs":{},".":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},"6":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}},".":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}},")":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}}},"8":{"0":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"8":{"3":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{},"e":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334}}}},"7":{"3":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"3":{"docs":{},"a":{"0":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}},"docs":{}}},"docs":{}}}}},"8":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}}},"docs":{},"e":{"0":{"0":{"docs":{},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"2":{"3":{"0":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}},"docs":{}},"docs":{}},"3":{"9":{"docs":{},"c":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}},"docs":{},"a":{"0":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}},"docs":{}}},"docs":{}}}}},"c":{"0":{"0":{"docs":{},".":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}}},"docs":{}},"docs":{}}},"8":{"0":{"0":{"0":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046}}}},"1":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"2":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"3":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"docs":{},".":{"docs":{"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"4":{"9":{"0":{"9":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722}}},"docs":{},"e":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}}},"docs":{},"a":{"2":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}},".":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"docs":{}},"9":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}},"9":{"9":{"docs":{},"a":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"f":{"7":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"3":{"docs":{},"d":{"docs":{},"c":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}},"docs":{}}}}},"docs":{},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916}},"f":{"docs":{},"f":{"docs":{},"d":{"0":{"3":{"0":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"docs":{}},"4":{"0":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279}},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},"docs":{}},"5":{"0":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"docs":{}},"docs":{}},"docs":{}},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}},".":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}}},"e":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"a":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},"a":{"5":{"5":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}},"docs":{}},"docs":{},"b":{"docs":{},"b":{"docs":{},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}}}},"e":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},"f":{"docs":{},"f":{"docs":{},"f":{"3":{"9":{"docs":{},"c":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}},"docs":{}},"docs":{}}}},"a":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"b":{"4":{"8":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"docs":{}},"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}},"b":{"docs":{},"a":{"docs":{},"a":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}}}},"]":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.019230769230769232}}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015}}},"v":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},";":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},"'":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"b":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}},".":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.011278195488721804},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022222222222222223},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.021645021645021644},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.029850746268656716},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}},"1":{"0":{"0":{"0":{"0":{"0":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}},"2":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},"8":{"3":{"5":{"5":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.024475524475524476},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.02702702702702703},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.016666666666666666},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.509259259259259},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5034843205574915},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6726190476190474},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},")":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"1":{"6":{"2":{"5":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"docs":{"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.02631578947368421},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.025974025974025976}},";":{"docs":{"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},"2":{"0":{"8":{"3":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"9":{"4":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"2":{"5":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.007425742574257425}}},"3":{"5":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"9":{"7":{"5":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"9":{"8":{"4":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"9":{"9":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0025445292620865}}},"b":{"docs":{},".":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684}}}}},"1":{"0":{"0":{"0":{"1":{"0":{"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"1":{"0":{"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}}},"1":{"0":{"1":{"0":{"1":{"1":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"1":{"0":{"0":{"0":{"0":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"0":{"1":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}},"docs":{}},"9":{"docs":{},"!":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943}}}},"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6695402298850572},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.0028818443804033},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":3.3407960199004973},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":1.6755162241887904},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.5033333333333334}}}},"2":{"0":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}}},".":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943}}}},"8":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.0113636363636362},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.0084745762711864},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":2.0103092783505154}},":":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.003731343283582}}},"]":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827}}}},"3":{"3":{"7":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.016666666666666666}},".":{"0":{"9":{"9":{"9":{"8":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}},";":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}},"7":{"7":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827}},";":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.5076335877862594},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.505524861878453},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":1.6727272727272726}},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.5065789473684212}}}},"4":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":3.3398692810457513},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.5026041666666665},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.515873015873016},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":1.6763754045307442}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":3.335341365461847}}}},"5":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.508403361344538},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.003717472118959},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.516949152542373},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":2.013157894736842}},":":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":3.334729981378026}}},".":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}}},"6":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.019230769230769232},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.02544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.509433962264151},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005649717514124},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.03669724770642202},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.029411764705882353},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.028169014084507043},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5105263157894737},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":1.6806853582554515},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},".":{"0":{"0":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}},":":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":3.3374485596707815}}},"^":{"0":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}},"1":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}},"docs":{}},";":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}},"/":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},"7":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.002217294900222},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":3.3399558498896242},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":3.3397849462365587},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.511764705882353},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":1.669141914191419}},".":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.025157232704402517},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.02717391304347826},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.014084507042253521}}},"/":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},"8":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.003584229390681},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.0037593984962405},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0135135135135136},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4367015098722413},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":2.012987012987013}}},"9":{"2":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}},"8":{"1":{"docs":{},"!":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025}}},".":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025}}}},"docs":{}},"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.503584229390681},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.003846153846154},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0121951219512195},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.431807674526121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.02097902097902098},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2552356020942408},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2538610038610039},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":2.5},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.010752688172043},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.050359712230215826},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.022900763358778626},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.012987012987012988},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.4332443257676901},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.025477707006369428},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.014989293361884369},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.1602787456445993},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.042105263157894736},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.047058823529411764},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.267391304347826},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02877697841726619},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.030927835051546393},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},":":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":3.339506172839506}}},")":{"0":{"docs":{},"x":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}},"h":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"4":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}},"docs":{}}}}},"w":{"docs":{},"e":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},".":{"2":{"docs":{},"g":{"docs":{},"h":{"docs":{},"z":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.024390243902439025}}},",":{"0":{"2":{"4":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.020905923344947737}}},"s":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}},"]":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.024725274725274724},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4367015098722413},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.673160173160173},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.258695652173913}}},"!":{"docs":{},"\"":{"docs":{},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}}},"2":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},"h":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}},"1":{"7":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},".":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025}}},";":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}},"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}},"?":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}},"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.0028169014084507},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.5074074074074075},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.0055555555555555},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4341580207501994},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.031055900621118012}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}},"1":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.5029673590504453},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0043290043290045},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6743589743589742},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.438186813186813},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"2":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2539267015706805},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.0049751243781095},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4351073762838467}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"3":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2538610038610039},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.511111111111111},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.01},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4385714285714284}}},"4":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}},"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.0095238095238095},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6782945736434107},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4356136820925551}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"5":{"5":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},"6":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.12012012012012},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0067567567567566},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6787148594377508},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4346320346320345}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}},"6":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.0076923076923077},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4347826086956519}}},"7":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6739130434782608},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.673160173160173}}},"8":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0138888888888888},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.019867549668874173},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.019230769230769232},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.012987012987012988},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.014925373134328358},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6791666666666665},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6833333333333331}},":":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"9":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.019867549668874173},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.019230769230769232},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.012987012987012988},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.014925373134328358},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.008130081300813},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6798245614035086}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.03146853146853147},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.12012012012012},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.5057692307692307},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":2.5},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.4309078771695591},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":3.3392504930966465},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.025423728813559324},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.263953488372093},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.5097560975609756},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}},":":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":3.3399122807017543}}},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}},",":{"0":{"0":{"0":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}},"docs":{}},"docs":{}},"1":{"4":{"7":{"docs":{},",":{"4":{"8":{"3":{"docs":{},",":{"6":{"4":{"7":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}},"a":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245}}},"^":{"3":{"2":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"docs":{}},"8":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}},"docs":{}},")":{"0":{"docs":{},"x":{"4":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}}}},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"o":{"docs":{},"p":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"8":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}},"docs":{}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}},"e":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}}},"]":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.431807674526121},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6833333333333331},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2546511627906978}}}},"3":{"0":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6809523809523808},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}},"1":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0076923076923077},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.672161172161172},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6695156695156694}},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.011278195488721804},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905}}}},"2":{"8":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.01048951048951049},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.02},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010178117048346057},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.013333333333333334},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":2.611111111111111},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":2.611111111111111},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023076923076923078},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0104166666666665},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6879432624113473}}},"3":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.6753623188405795},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.673860911270983},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852}}},"4":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2560240963855422},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675287356321839},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.258695652173913}}},"5":{"2":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010989010989011},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2546511627906978}}},"6":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2564102564102564},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2549751243781095}}},"7":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4313186813186811},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.672222222222222},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4349408553230207}}},"8":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.676190476190476},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.004}}},"9":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4413919413919412},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":3.3455284552845526}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0138888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.5071942446043165},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.5063694267515926},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2549751243781095},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":2.51}},":":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.503861003861004}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},")":{"0":{"docs":{},"x":{"7":{"docs":{},"c":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}}}},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"h":{"docs":{},"e":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}},"w":{"docs":{},"e":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"r":{"docs":{},"d":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}},"x":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}},"]":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4341580207501994},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6798245614035086},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2549751243781095}}}},"4":{"0":{"9":{"6":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":3.345238095238095},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.434006211180124},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0039525691699605}}},"1":{"2":{"1":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"docs":{}},"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.675840978593272},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.5047619047619047}}},"2":{"9":{"4":{"9":{"6":{"7":{"2":{"9":{"5":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.012237762237762238},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.435924369747899},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5071942446043165}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}},"3":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4356136820925551},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.507575757575758}}},"4":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6787148594377508}}},"5":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.439097744360902}}},"6":{"docs":{"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4375804375804373}},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}},"7":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.6839080459770113}}},"8":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4387755102040813},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995}}},"9":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.012237762237762238},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0176678445229682},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0076923076923077},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.019230769230769232},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.5093457943925235},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03296703296703297},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.04225352112676056},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.044444444444444446},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5085653104925054},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":2.0066815144766146},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},":":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0034246575342465}}},",":{"2":{"9":{"4":{"docs":{},",":{"9":{"6":{"7":{"docs":{},",":{"2":{"9":{"5":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"6":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}},")":{"0":{"docs":{},"x":{"7":{"docs":{},"e":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"g":{"docs":{},"b":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.013333333333333334}}}},".":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}},"x":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"]":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.438186813186813},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6809523809523808},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}},"5":{"0":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},"1":{"2":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602}}},"docs":{}},"3":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}},".":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}},"5":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602}}},"6":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2560240963855422},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2692307692307692},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5074626865671643},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.5105263157894737},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":2.0074074074074075}},":":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.006666666666667}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"0":{"docs":{},".":{"2":{"4":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}},"docs":{}},"docs":{}}},"docs":{}},")":{"0":{"docs":{},"x":{"9":{"docs":{},"f":{"docs":{},"c":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"x":{"docs":{},"m":{"docs":{},"m":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"]":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4351073762838467},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6695156695156694}}}},"6":{"0":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}},"1":{"docs":{},",":{"4":{"4":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}},"docs":{}},"docs":{}},"9":{"0":{"1":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},"docs":{}},"docs":{}},"docs":{}}},"4":{"0":{"docs":{},"x":{"2":{"0":{"0":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.04504504504504504},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.024844720496894408},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":3.476190476190476},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},".":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}},"g":{"docs":{},"b":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}},"5":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"6":{"6":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025}},".":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124}}}},"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}},"!":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943}}}},"7":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4313186813186811},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4413919413919412},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":3.3366890380313197},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.509433962264151},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5031847133757963}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0017482517482517},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}},")":{"0":{"docs":{},"x":{"docs":{},"a":{"0":{"0":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"]":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4385714285714284},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6879432624113473}}},".":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"7":{"7":{"7":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.02702702702702703},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.031007751937984496},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025}},";":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693}}},".":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5064102564102564},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5086206896551726},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004484304932735}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},":":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.503610108303249}}},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}},")":{"0":{"docs":{},"x":{"docs":{},"c":{"0":{"0":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}},"]":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4356136820925551},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.673860911270983}}}},"8":{"0":{"0":{"0":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"docs":{},"a":{"0":{"0":{"5":{"4":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"4":{"8":{"3":{"docs":{},"d":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}}},"docs":{}},"docs":{}},"8":{"0":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},"6":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"5":{"0":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4462392730943965},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.02544529262086514},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":3.338768115942029},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.01284796573875803},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.5315315315315314},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.016574585635359115},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.0045871559633026}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"0":{"0":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},"docs":{}},"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},")":{"0":{"docs":{},"x":{"1":{"0":{"0":{"0":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"t":{"docs":{},"h":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}}},"]":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4346320346320345}}}},"9":{"3":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}}},"5":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"9":{"9":{"docs":{},"a":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}},"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.5049751243781095},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.5074626865671643},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.010752688172043}},":":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.005}}},".":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"]":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4347826086956519}}}},"docs":{},"@":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"b":{"docs":{},"c":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"c":{"0":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"docs":{},"b":{"4":{"8":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}},"b":{"4":{"8":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.022222222222222223}}},"docs":{}},"docs":{}}}},"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.011494252873563218},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.011527377521613832},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},"m":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}}}}}}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.037037037037037035},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.02654867256637168}}}}},"docs":{}},"b":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.02912621359223301},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"docs":{}}},"docs":{}},"1":{"0":{"docs":{},"a":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"docs":{}},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"5":{"docs":{},"e":{"6":{"docs":{},"c":{"2":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"6":{"2":{"1":{"5":{"docs":{},"e":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}}},"docs":{}},"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.015590200445434299}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"6":{"docs":{},"b":{"docs":{},"e":{"0":{"1":{"9":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"7":{"1":{"6":{"docs":{},"a":{"docs":{},"b":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}}}},"8":{"9":{"9":{"9":{"docs":{},"b":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121}}}}},"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.024242424242424242}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"docs":{},"b":{"docs":{},"f":{"docs":{},"f":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904}}}}},"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.02976190476190476}}}}}}},"docs":{}}}}},"9":{"3":{"1":{"docs":{},"c":{"9":{"docs":{},"b":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047}}}}},"docs":{}},"c":{"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.018691588785046728}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},"b":{"1":{"docs":{},"b":{"3":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"8":{"2":{"1":{"6":{"docs":{},"c":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"4":{"7":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"8":{"docs":{},"a":{"7":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"8":{"0":{"1":{"6":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"1":{"3":{"0":{"docs":{},"d":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"3":{"1":{"4":{"3":{"9":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}}},"8":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"docs":{},"f":{"9":{"7":{"2":{"7":{"5":{"0":{"3":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"b":{"1":{"4":{"6":{"docs":{},"c":{"docs":{},"b":{"8":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"9":{"4":{"8":{"4":{"0":{"7":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"a":{"docs":{},"c":{"4":{"docs":{},"f":{"9":{"0":{"3":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.0072992700729927005}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.016483516483516484}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4313186813186811},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4413919413919412}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.025089605734767026},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2513089005235603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2538610038610039},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.12012012012012},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0138888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0076923076923077},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}}}},"t":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4367015098722413},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.431807674526121},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4341580207501994},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.438186813186813},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4351073762838467},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4385714285714284},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4356136820925551},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4346320346320345},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4347826086956519},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.673160173160173},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6833333333333331},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6798245614035086},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6809523809523808},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6695156695156694},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6879432624113473},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.673860911270983},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.258695652173913},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2546511627906978},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2549751243781095}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.013736263736263736}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"1":{"docs":{},"_":{"docs":{},"h":{"docs":{},"]":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},",":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}},"docs":{}}}},"a":{"docs":{},"d":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}}}}}}}},"n":{"docs":{},"e":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}}},"k":{"docs":{},"]":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}},"l":{"docs":{},"]":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2560240963855422},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2564102564102564}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}}}}},"r":{"1":{"0":{"docs":{},"]":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"1":{"docs":{},",":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827}}}},"docs":{}},"4":{"docs":{},"]":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358}},",":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}}}},"b":{"docs":{},"p":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525}}}}}},"]":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"a":{"2":{"4":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}},"docs":{}},"5":{"3":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"docs":{}},"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":3.352941176470588},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.5504201680672267},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.5283018867924527},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":3.3730684326710816},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.0150375939849625},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.0153846153846153},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.05185185185185185},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.04329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.029850746268656716},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.015444015444015444},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.5215827338129495},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.024096385542168676},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.531578947368421},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}},"!":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},".":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.008379888268156424},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009162303664921465},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2801204819277108},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2728310502283104},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2564102564102564},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.024875621890547265},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.014367816091954023},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01440922190201729},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.01694915254237288},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.0338983050847457},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.018633540372670808},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}}}}},"!":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}},":":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}}},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.01675977653631285}}}}}}}},",":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563}},"o":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563}}}},"s":{"docs":{},".":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}}},"c":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}}}},"i":{"docs":{},"s":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}}}}},"c":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.522222222222222},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.012987012987013},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.009950248756219}},".":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022222222222222223},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},"o":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/x86-course.html":{"ref":"pages/x86-course.html","tf":0.2},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.015},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.022727272727273},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/x64-course.html":{"ref":"pages/x64-course.html","tf":0.2},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.509009009009009},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":0.14285714285714285}},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}},",":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}},"!":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}}}}}}},"v":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"a":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}}},"m":{"6":{"4":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":2.611111111111111},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.03225806451612903},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.675287356321839},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.02702702702702703},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":2.611111111111111},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.02570093457943925},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":3.476190476190476},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.024390243902439025},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}},"e":{"docs":{},":":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}},"a":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.02112676056338028},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121}},".":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.022727272727272728}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.02564102564102564},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077}},".":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}},"s":{"docs":{},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}},":":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"n":{"docs":{},"g":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}},"o":{"docs":{},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.014336917562724014},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"s":{"docs":{},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}}},"i":{"docs":{},"v":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.008379888268156424},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.03731343283582089},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.017094017094017096}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422}}}}}}}}}}},"s":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.030821917808219},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.53584229390681},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.026706231454005934},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010471204188481676},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.023076923076923078},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.016355140186915886},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.018633540372670808},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.673160173160173},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6833333333333331},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6798245614035086},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6809523809523808},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.675213675213675},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6879432624113473},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6810551558752995},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"y":{"docs":{},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},":":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.014084507042253521},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.028}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03389830508474576},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}},"k":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},",":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}},"!":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2539267015706805},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2538610038610039},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.12012012012012},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0138888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0076923076923077},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2560240963855422},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2564102564102564},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4313186813186811},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4413919413919412}}},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.016666666666666666},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.023076923076923078},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}}},"l":{"docs":{},"r":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"m":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.014245014245014245},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"i":{"docs":{},"v":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"o":{"docs":{},"n":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.023166023166023165},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}},"p":{"docs":{},"t":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}}}}}}},"r":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}}}}}}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.02631578947368421},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"s":{"docs":{},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}},"z":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"e":{"docs":{},":":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"u":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},",":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.014084507042253521},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}}},"y":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}},",":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},",":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}}},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}},"b":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}},"c":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}}},"o":{"docs":{},"v":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.011086474501108648},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011267605633802818},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.01483679525222552},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.024096385542168676},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"u":{"docs":{},"t":{"docs":{},":":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943}}}}},"g":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.01592356687898089}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.03361344537815126},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},"s":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.013888888888888888},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}},":":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}},"!":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}}},"e":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},")":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},":":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852}}}},"i":{"docs":{},"l":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}},"o":{"docs":{},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}},"r":{"docs":{},"e":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.023529411764705882}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.02880658436213992},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},".":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"g":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"t":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}}}},"s":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}},"a":{"docs":{},"z":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},"o":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682}}}}}},"d":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.015444015444015444},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"s":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"h":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.01775147928994083}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}}}},"&":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.017804154302670624},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242}}}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},":":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}}}},"p":{"docs":{},"p":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012}},"l":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},"c":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.01675977653631285},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.007633587786259542},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"w":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"a":{"docs":{},"y":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}}}}},"i":{"docs":{},",":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}},"m":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}},"a":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}}}}},"a":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},":":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}}},"b":{"8":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.013888888888888888},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}},"d":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}}}}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"e":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"s":{"docs":{},"i":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}},"c":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.01775147928994083},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4610917537746804},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.438280166435506},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4341580207501994},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.438186813186813},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4351073762838467},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4485714285714284},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4356136820925551},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4346320346320345},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4409937888198756},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.016},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5127388535031847},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.008968609865471},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.0045871559633026},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}},"!":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}}}}},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.024691358024691357},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.007633587786259542},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.013333333333333334},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.018604651162790697},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}},"d":{"docs":{},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"m":{"docs":{},"!":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}}},"b":{"docs":{},"y":{"docs":{},"!":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}}}}}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.02054794520547945},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.016483516483516484},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02877697841726619}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"n":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}}}},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1471471471471473},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0277777777777777},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0153846153846153},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.011869436201780416},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03389830508474576},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.025477707006369428},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},".":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.006968641114982578},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}},")":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}}},":":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}},"q":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.014598540145985401},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.0136986301369863},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.024734982332155476},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.02},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.04834605597964377},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.01},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.018072289156626505},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.014336917562724014},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.036036036036036036},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.02877697841726619},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.028037383177570093},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.029850746268656716},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.03804347826086957},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.014367816091954023},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.039735099337748346},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.03759398496240601},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.03076923076923077},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.030303030303030304},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.03482587064676617},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01440922190201729},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023076923076923078},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.010706638115631691},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.042105263157894736},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.02830188679245283},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.04310344827586207},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.07657657657657657},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03389830508474576},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.031578947368421054},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.049689440993788817},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":0.14285714285714285},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.034482758620689655},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}},")":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},"e":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"n":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.046666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.01048951048951049},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.017804154302670624},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0136986301369863},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02564102564102564},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.025},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.5215827338129495},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.5373831775700935},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.019230769230769232},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.025477707006369428},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.027837259100642397},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.531578947368421},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.5377358490566038},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.014925373134328358},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}},"y":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.018604651162790697},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.024875621890547265},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"!":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},":":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}}},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.035211267605633804}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.02666666666666667},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.022222222222222223},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.02702702702702703},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.017857142857142856},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}},".":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513}}}}}}}},".":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"l":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"n":{"docs":{},"g":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"d":{"docs":{},"g":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},"?":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"w":{"docs":{},"s":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"e":{"docs":{},"r":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.04316546762589928},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.013761467889908258}},"e":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5071942446043165}}}}}}}}}},"u":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.01951219512195122},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.019305019305019305},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},".":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}},"i":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}}},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}},"y":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"x":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}},"d":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}}}}}},"o":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6695402298850572},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.0028818443804033},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4936120789779324},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.4350439204808134},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4453312051077412},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4478021978021975},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.46125116713352},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4585714285714284},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4426559356136819},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4588744588744587},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4409937888198756}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521}}}}}}},"l":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.04},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.689922480620155},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6907630522088353},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5069686411149825},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":2.020618556701031},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":1.6848484848484846},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":1.6860841423948218}}}}}},"m":{"docs":{},"!":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}},"n":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.038869257950530034},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.016901408450704224},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.019230769230769232},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.034482758620689655},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.04419889502762431},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.026143790849673203},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}}},"s":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.432104997476022}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},")":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}}}}},":":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.01990049751243781}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}},".":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},":":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}}}},"u":{"docs":{},"e":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},")":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0111731843575419}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}}},"’":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}},"e":{"docs":{},"q":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}},"n":{"docs":{},"e":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.013761467889908258}}}}},"c":{"docs":{},"m":{"2":{"8":{"3":{"7":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"n":{"docs":{},"e":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}},"c":{"0":{"0":{"docs":{},"c":{"8":{"0":{"5":{"2":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"2":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.0205761316872428},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4667879890809825},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.04878048780487805},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.014925373134328358},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0111731843575419},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.013089005235602094},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.015625},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.529850746268657},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712}}}}}}},",":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.05755395683453238},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.018796992481203006},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.023076923076923078},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.021645021645021644},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.01990049751243781},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.07368421052631578},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}},"y":{"docs":{},")":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"e":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}},"?":{"docs":{},"\"":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}}},"d":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.024390243902439025}}}},"p":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},"s":{"docs":{},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"u":{"docs":{},"s":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}},"c":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"b":{"docs":{},"l":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"o":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044}},"d":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.0309859154929577},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.02373887240356083},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009162303664921465},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.02702702702702703},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.023255813953488372},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.029850746268656716},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.017241379310344827},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.026143790849673203},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01729106628242075},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.018229166666666668},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.03225806451612903},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.024096385542168676},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.016304347826086956},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.026143790849673203},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.017094017094017096},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2847826086956522},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.024390243902439025},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.01904761904761905},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.023255813953488372},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},":":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}},"s":{"docs":{},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}}},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.016666666666666666},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}}},"i":{"docs":{},"c":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}}}}}},"u":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.019305019305019305},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01444043321299639},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009345794392523364},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},"s":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},"'":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},"y":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},".":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.520771513353116},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0182648401826484},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.020833333333333332},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},":":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152}}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391}}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}},".":{"docs":{},".":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.014336917562724014},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"s":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},":":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},",":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"!":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"u":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}},"n":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.014598540145985401}}}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}},"r":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":3.345238095238095}}},"d":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"t":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.5223880597014925},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}}}},"r":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.01284796573875803},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}},"s":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.013333333333333334},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}},"s":{"docs":{},",":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315}}}}}},"o":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.014925373134328358},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.5592105263157894},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.02208835341365462},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.022727272727272728},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.01775147928994083},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.016778523489932886},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.013020833333333334},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"2":{"0":{"1":{"2":{"docs":{},"/":{"0":{"2":{"docs":{},"/":{"docs":{},"b":{"docs":{},"c":{"docs":{},"m":{"2":{"8":{"3":{"5":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}}},"x":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.022598870056497175},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.04878048780487805},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},"d":{"docs":{},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}}}}},"g":{"docs":{},"u":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}}}}},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}}},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.01818181818181818}}},":":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397}}}},"d":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"e":{"docs":{},"r":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}},"t":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.03076923076923077},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.036036036036036036},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.03875968992248062},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":3.365591397849462},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0135135135135136},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0121951219512195},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}},"l":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},".":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613}}},"s":{"docs":{},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.014598540145985401},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"pages/x86-course.html":{"ref":"pages/x86-course.html","tf":5},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":2.5},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":2.5},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/x64-course.html":{"ref":"pages/x64-course.html","tf":5},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":3.333333333333333},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},"e":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5128205128205128},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}},"!":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},".":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},")":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},".":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"p":{"docs":{},"l":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}},".":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011267605633802818},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}}}}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"p":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}},"e":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"i":{"docs":{},"s":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}},"g":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}},"r":{"0":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}},"1":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}},"2":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}},"3":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}},"4":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}},"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},"p":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"?":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},"s":{"docs":{},"h":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.026706231454005934},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010416666666666666},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.014084507042253521},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.036585365853658534},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}},",":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},",":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}}}},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}},"y":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0118343195266273},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714}},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"c":{"docs":{},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},"s":{"docs":{},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}},"r":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.03225806451612903},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.0444444444444443},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.7128205128205127},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.032258064516129},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6785714285714284},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":1.6755162241887904}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007}}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}}},"s":{"docs":{},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232}}}}}}}}},"g":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219}},"e":{"docs":{},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"e":{"docs":{},".":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}}}},"k":{"docs":{},"e":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},"o":{"docs":{},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},"e":{"docs":{},".":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}}}}}}},"s":{"docs":{},"e":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},"n":{"docs":{},"k":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"+":{"docs":{},"+":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.015625},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2934782608695652},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2593023255813953},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2649253731343284},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}},"?":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}},".":{"docs":{},"#":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}}}}}},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"e":{"docs":{},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},"l":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"c":{"docs":{},"k":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.07095343680709534},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}},"s":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}},"r":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}},".":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085}}}}}},"u":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}},"n":{"docs":{},"e":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.01951219512195122},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"l":{"docs":{},"i":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.02702702702702703},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.023255813953488372},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.02666666666666667},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},".":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}},"n":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}}}},"p":{"docs":{},"u":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.04},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.016901408450704224},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}},"i":{"docs":{},"d":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}},"s":{"docs":{},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":3.360507246376811},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.026923076923076925},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.017316017316017316},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.01990049751243781}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}},"!":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}}},"p":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}},"u":{"docs":{},"p":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02631578947368421},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.035842293906810034}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"b":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.01}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},"f":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},",":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}},"s":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"n":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714}},",":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.019230769230769232}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}},"a":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}},"b":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.01098901098901099}}},"c":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"e":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"g":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}},"a":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}},"b":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}},"c":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"g":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"z":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}},"z":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.016304347826086956},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304}},".":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}}},"#":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},".":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.01910828025477707},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},"?":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":3.3455284552845526}}}},"d":{"0":{"4":{"0":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},"docs":{}},"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827}},",":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}},".":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},"e":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}},"d":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083}}}},"i":{"docs":{},"m":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.019230769230769232},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.02702702702702703},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.016666666666666666},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.023076923076923078},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.04504504504504504},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.03875968992248062},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.019230769230769232},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.025210084033613446},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.018796992481203006},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022222222222222223},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.025974025974025976},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.029850746268656716},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.02857142857142857},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.033783783783783786},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.016483516483516484},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.01284796573875803},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}},")":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},"?":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}}}}}},"d":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.7389558232931726},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4496240601503758},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4465894465894464},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.7356321839080457},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4693877551020407},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.04310344827586207},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"i":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}},"r":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}},"r":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"e":{"docs":{},"!":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},"o":{"docs":{},"y":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}}},"b":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}},"e":{"docs":{},"p":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"e":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018072289156626505},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},"s":{"docs":{},".":{"docs":{},"\"":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}}}}},"v":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.01910828025477707},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.5097560975609756}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009345794392523364},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},"e":{"docs":{},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2615830115830116},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1388888888888888},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.508403361344538},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.026490066225165563},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.011278195488722},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022222222222222223},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.012987012987013},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.0095238095238095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.0148698884758365},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0135135135135136},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6743589743589742},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6782945736434107},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6739130434782608},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.6753623188405795},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.68075117370892},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4411500449236296},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.435924369747899},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4496240601503758},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4387755102040813},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2546511627906978},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":2.0066815144766146},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.013452914798206},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6845238095238093},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":1.6848484848484846},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":1.6806853582554515},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},":":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338}},"g":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112}}}}}}},"!":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}},":":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},".":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}},".":{"docs":{},".":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.011278195488721804},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}},"n":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}},"o":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}}}},"v":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.009900990099009901}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"pages/x86-course.html":{"ref":"pages/x86-course.html","tf":0.2},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/x64-course.html":{"ref":"pages/x64-course.html","tf":0.2},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":0.14285714285714285}}},"i":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"s":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}}}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}}},"a":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.02631578947368421},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}}}}}},"d":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},".":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}}},":":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"y":{"docs":{},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},".":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}}},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},":":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}}},"b":{"docs":{},"l":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"k":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},")":{"docs":{},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886}},"l":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.016666666666666666},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.01818181818181818},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"s":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}},".":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"o":{"docs":{},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"l":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"o":{"docs":{},"g":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}}}}},"o":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"w":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.010706638115631691},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.006968641114982578},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.015521064301552107},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.01951219512195122}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},":":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505}}},".":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}},")":{"docs":{},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}}},"?":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}}},"’":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}}}},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4497728419989901},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0520833333333335},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.7014492753623187},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.6925287356321839},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":2.051948051948052}},"e":{"docs":{},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525}}},"s":{"docs":{},".":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},":":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}},"y":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},"t":{"docs":{},"a":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.015267175572519083},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02666666666666667},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01971830985915493},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009162303664921465},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1471471471471473},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0277777777777777},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.023076923076923},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.024096385542168676},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.03409090909090909},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.522099447513812},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.02112676056338028},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2513089005235603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2538610038610039},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257}}},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375}},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},":":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.010752688172043},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6726190476190474},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":1.6755162241887904},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":2.020618556701031},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":1.6727272727272726},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":1.6763754045307442},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":2.026315789473684},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":1.6713395638629283},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":1.669141914191419},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":2.0259740259740258}},"e":{"docs":{},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}}}},"y":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}},"m":{"docs":{},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"c":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}}},"r":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}},"w":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"s":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},"l":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}},",":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"a":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}}}}}},"m":{"docs":{},"p":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"e":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}},"f":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},"d":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}},",":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}},"w":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}},",":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}},"b":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},",":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}},"q":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}},",":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"c":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.017857142857142856},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.01818181818181818},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.04950495049504951}}}},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358}},"b":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.007633587786259542},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},".":{"docs":{},"]":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},".":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.029197080291970802},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.014018691588785047},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01486988847583643},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.03488372093023256},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.025477707006369428},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.021897810218978103},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}},"?":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}}},"s":{"docs":{},"!":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}},",":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}},".":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.011086474501108648},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},",":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"d":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}},"?":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},",":{"docs":{},"\"":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}}}},"l":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}},".":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}},"e":{"docs":{},"!":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085}}}}}},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}}}},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905}},"o":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208}}}},"s":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.01},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"e":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.018018018018018018},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}},"s":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}},"r":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}}},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.02666666666666667},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.028037383177570093},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.023255813953488372},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.028169014084507043},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.022222222222222223},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.028846153846153848},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},"s":{"docs":{},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022222222222222223},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.024096385542168676},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"e":{"1":{"0":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505}}}}}}},"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}}}},"2":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613}}}}}}},"3":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112}}}}}}},"4":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}}}}}}},"5":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693}}}}}}},"6":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}}}}}}},"7":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}}}}}},"8":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099}}}}}}},"9":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}}}}}}},"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},":":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},".":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}},"s":{"docs":{},":":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},")":{"docs":{},".":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"l":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.025},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.020771513353115726},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009162303664921465},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.02564102564102564},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.022598870056497175},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.024096385542168676},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.008908685968819599}},"e":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},"d":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},",":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905}}}},"s":{"docs":{},".":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"s":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},":":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.03832752613240418}},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.013937282229965157}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}},"o":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.017921146953405},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.007633587786259542},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.02702702702702703},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.027777777777777776},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.016949152542373},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}}}}},"s":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}},"c":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}}},"p":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.007633587786259542},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},".":{"docs":{},"]":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}}}},"b":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}},"u":{"docs":{},"l":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.03}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"t":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.432104997476022},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.028},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"a":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916}},"c":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014134275618374558},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010178117048346057},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.01},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011267605633802818},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.02702702702702703},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.016666666666666666},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.013422818791946308},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0196078431372549},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.022222222222222223},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.023076923076923078},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.017094017094017096},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}},"l":{"docs":{},"i":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"s":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},"e":{"docs":{},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}}},"l":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815}}},"y":{"docs":{},".":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124}}}}},"l":{"docs":{},"f":{"3":{"2":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"docs":{}},"6":{"4":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}},"docs":{}},"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}},"_":{"docs":{},"i":{"3":{"8":{"6":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"docs":{}},"docs":{}},"docs":{}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.03550295857988166},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"o":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"d":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}},",":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},".":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.016483516483516484},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02877697841726619},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514}}}}},"p":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.033582089552238806},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}}}}},"c":{"docs":{},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.02702702702702703},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.03333333333333333},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},".":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514}}}},"h":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}},")":{"docs":{},".":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}}},"y":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"f":{"1":{"docs":{},"c":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}},"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}},"a":{"docs":{},"r":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},",":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}},"l":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},"e":{"docs":{},";":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},".":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}},"a":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},"s":{"docs":{},":":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}}}}}}},"t":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}}}},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}},"t":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"u":{"docs":{},"r":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"a":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"!":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},".":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},"c":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"c":{"docs":{},"u":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.0136986301369863},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"s":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}}},"k":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}}}}},"u":{"docs":{},"r":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}},"t":{"docs":{},"h":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},"a":{"docs":{},"t":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}}}}},"i":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"l":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.011869436201780416},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.026041666666666668},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"!":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007}}},"s":{"docs":{},",":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.024691358024691357},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"d":{"docs":{},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.011494252873563218},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.011527377521613832},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.04878048780487805},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02158273381294964},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}},"e":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"m":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6695402298850572},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.0028818443804033},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},"e":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}},"l":{"docs":{},"i":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},"x":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}}},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242}}}}},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.015384615384615385},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.017130620985010708}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}}}}},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.029329608938547486},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011267605633802818},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.020833333333333332},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"s":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}}}},"!":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010178117048346057},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}}}},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},"!":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"l":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"(":{"docs":{},")":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712}}}}},"s":{"docs":{},"h":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.012569832402234637},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}}}}}}}},"e":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"a":{"docs":{},"r":{"docs":{},"!":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}}},"u":{"docs":{},"r":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}}}}},"e":{"docs":{},"l":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514}}},"d":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.03},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083}}}}},"w":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"l":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},",":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"s":{"docs":{},".":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.0569105691056913},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.7009132420091322},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6886446886446884},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.041666666666666664},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":2.0657894736842106},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":1.6853582554517132},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":1.6765676567656764},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.025974025974025976}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}},"g":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.03289473684210526},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":3.4277108433734935},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.06593406593406594},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.02158273381294964},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.03804347826086957},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.0728476821192053},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.07518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.07307692307692308},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.02962962962962963},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.06060606060606061},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.04975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.031578947368421054},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},"s":{"docs":{},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},".":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}},")":{"docs":{},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"s":{"docs":{},"h":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.011494252873563218},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.011527377521613832}},"f":{"docs":{},"f":{"docs":{},"d":{"0":{"4":{"0":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}},"docs":{}},"docs":{}},"docs":{}}}}},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},"p":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"t":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.01951219512195122},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"n":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"r":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.014336917562724014},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.026143790849673203},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.014018691588785047},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.022388059701492536},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"a":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":3.339506172839506},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.030534351145038167},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},"o":{"docs":{},"d":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}},"g":{"docs":{},"l":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}},"!":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"d":{"docs":{},"'":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}},"b":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"s":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}}}},"p":{"docs":{},"h":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"i":{"docs":{},"c":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}},".":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852}}}}},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},"s":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}},"e":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}},"p":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}},"y":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}}}}}},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.006983240223463687},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.022099447513812154}},".":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}},"a":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}},"e":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.023668639053254437},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.570063694267516},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"m":{"docs":{},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},"v":{"docs":{},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.015267175572519},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.509009009009009},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}}}},"s":{"docs":{},"i":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4349408553230207}}}}},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}}}}},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.017241379310344827},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01729106628242075},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}}}}}},"u":{"docs":{},"y":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"d":{"docs":{},"b":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},":":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}},"t":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},"p":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105}},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.0436241610738255}}},"u":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}},"e":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"a":{"docs":{},"d":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"b":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"c":{"docs":{},"c":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}},"n":{"docs":{},"u":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.011869436201780416},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419}}}},"+":{"docs":{},"+":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}},"f":{"docs":{},"r":{"2":{"0":{"4":{"docs":{},"s":{"docs":{},"d":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}},"docs":{}},"docs":{}},"docs":{}}}},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}},":":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"!":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}},"?":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"l":{"docs":{},"p":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"o":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.5052083333333335},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.007434944237918},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005649717514124},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0039525691699605},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"d":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"x":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.015444015444015444},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.016666666666666666},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.013888888888888888},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.027777777777777776},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.010706638115631691},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.038461538461538464},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0262237762237763},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},")":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},"!":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}}}}}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.013461538461538462},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.01284796573875803},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"a":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}},"e":{"docs":{},"r":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}},"p":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":3.3744855967078187},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678}}}},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}},"!":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722}}}},"g":{"docs":{},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"e":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"s":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"l":{"docs":{},"i":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}}},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},":":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}},"e":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}}}},"l":{"docs":{},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.015267175572519083},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.02564102564102564},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"u":{"docs":{},"s":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"o":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},"”":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.018656716417910446},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2693548387096774},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1433691756272402},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0333333333333334},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0310077519379846},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0136986301369863},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2692307692307692},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4413919413919412},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.5377358490566038},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.019230769230769},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.009950248756219},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0135135135135136},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.022598870056497},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0365853658536586},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.7066666666666666},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6787148594377508},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.7041666666666666},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.683150183150183},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.6839080459770113},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6833333333333331},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4448757763975153},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4496981891348086},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4555984555984554},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.02158273381294964},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2748756218905473},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.015810276679842},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.533333333333333},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5215827338129495},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.515151515151515},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":2.0444444444444443},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.0137614678899083},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":1.6932153392330382},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":1.6957928802588995},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":1.674092409240924}},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"d":{"docs":{},")":{"docs":{},".":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}},"!":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}}}},"!":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},":":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}}},".":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"e":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"!":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},".":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}},"?":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}},"i":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.0028169014084507},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}},"e":{"docs":{},",":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"i":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}},"g":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}}},"d":{"docs":{},":":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}}},"v":{"docs":{},"e":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}},"l":{"docs":{},"f":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}}}},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\\":{"docs":{},"_":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"2":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"4":{"2":{"9":{"2":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"u":{"docs":{},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"1":{"6":{"4":{"9":{"8":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"i":{"docs":{},"p":{"docs":{},"/":{"docs":{},"i":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"/":{"docs":{},"j":{"docs":{},"q":{"docs":{},"u":{"docs":{},"f":{"9":{"docs":{},"b":{"docs":{},"d":{"docs":{},"m":{"4":{"docs":{},"i":{"docs":{},"u":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"u":{"docs":{},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"x":{"8":{"6":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"6":{"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}},"d":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.046089385474860335},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03296703296703297},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.02857142857142857},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.016304347826086956},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.027522935779816515},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.022058823529411766},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02112676056338028},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.03614457831325301},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.031578947368421054},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.02702702702702703},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.05172413793103448},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.04081632653061224},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.05223880597014925},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"r":{"docs":{},"o":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0034246575342465}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}},"t":{"docs":{"./":{"ref":"./","tf":10},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}}}}},"e":{"docs":{},"l":{"6":{"4":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"docs":{}},"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.017123287671232876},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0136986301369863},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}},"n":{"docs":{},"d":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"r":{"docs":{},"n":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}},"e":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.01606425702811245},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.02112676056338028},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.046153846153846},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.7028985507246375},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6916666666666664},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}},"?":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}},",":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012048192771084338},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}},"o":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.030120481927710843},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}},"n":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}},"o":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.025210084033613446},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}},"r":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014134275618374558},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.035},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.013333333333333334},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0186567164179103},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.014336917562724014},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.0309859154929577},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.007853403141361256},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.019230769230769232},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02564102564102564},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.599236641221374},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5069686411149825},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.5317460317460316},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.5338983050847457},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5105263157894737},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.511764705882353},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.007425742574257425}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"’":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"s":{"docs":{},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}},"]":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4313186813186811},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4413919413919412}}},",":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}},"!":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.033259423503326},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}},"n":{"docs":{},"c":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.015384615384615385},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.01694915254237288},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0375},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.017130620985010708},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.05223880597014925},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.017921146953405017},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"c":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"o":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.7333333333333332},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4788858939802334},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4720496894409936},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.7400611620795106},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.487394957983193},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4778672032193156},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.025477707006369428},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.022935779816513763}},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}},"!":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"t":{"docs":{},"?":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}},"'":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}},"!":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},":":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"d":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}},"i":{"docs":{},"f":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}},"a":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"a":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"?":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}},"l":{"docs":{},"i":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2539267015706805},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2615830115830116},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.024390243902439025},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"…":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}},"i":{"docs":{},"n":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}},"p":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"x":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}},"?":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}}}}},"s":{"docs":{},"u":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}},"e":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"o":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}},"d":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}}},"/":{"docs":{},"o":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5095541401273884},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004484304932735},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.0045871559633026}},".":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}},"a":{"3":{"2":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},"docs":{}},"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"o":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}},"p":{"docs":{},"l":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010416666666666666}},",":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885}}}},"m":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}},"k":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}},"e":{"docs":{},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},"e":{"docs":{},"y":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}}}},"e":{"docs":{},"p":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.022535211267605635},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010471204188481676},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.020114942528735632},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.020172910662824207}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}}},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}},",":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.04390243902439024}},"@":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},":":{"docs":{},"~":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"0":{"docs":{},"x":{"0":{"2":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"$":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"$":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"4":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"$":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"5":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"$":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"e":{"docs":{},"a":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.525089605734767},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},"?":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"k":{"docs":{},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}},"v":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.008741258741258742},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.014084507042253521},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.041666666666666664},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.05333333333333334},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.027777777777777776},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.011278195488721804},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}},"'":{"docs":{"pages/x86-course.html":{"ref":"pages/x86-course.html","tf":0.2},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02112676056338028},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.031578947368421054},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.036036036036036036},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.030612244897959183},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.034482758620689655},"pages/x64-course.html":{"ref":"pages/x64-course.html","tf":0.2},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.025974025974025976},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.03333333333333333},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.039473684210526314},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.0425531914893617},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.02608695652173913},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.018604651162790697},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.03482587064676617},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02877697841726619},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.03787878787878788},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":0.14285714285714285},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.03},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.022271714922048998},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.05925925925925926},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.04128440366972477},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.03225806451612903},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.023809523809523808},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.035398230088495575},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.01818181818181818},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.038834951456310676},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.02631578947368421},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.009900990099009901},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.025974025974025976}}},"’":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.025},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.019230769230769232},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02564102564102564},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.03361344537815126},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.02830188679245283},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.01990049751243781},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.02973977695167286},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.04519774011299435},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.04054054054054054},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.07317073170731707},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.03076923076923077},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.04},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.046511627906976744},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.03614457831325301},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.05},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.03424657534246575},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.038461538461538464},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.06086956521739131},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.07758620689655173},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.028169014084507043},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.03333333333333333},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.03260869565217391},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03389830508474576}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}}}}}},"s":{"docs":{},"s":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"o":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01444043321299639},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.027777777777777776},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.024193548387096774},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.02702702702702703},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.03333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018072289156626505},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0273972602739726},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.019230769230769232},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.02666666666666667},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02564102564102564},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.03225806451612903},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.022727272727272728},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.014925373134328358},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.03333333333333333},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.02857142857142857},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.02027027027027027},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.02702702702702703},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.02666666666666667},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.03488372093023256},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.024096385542168676},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.014084507042253521},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.01775147928994083},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.006968641114982578},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03389830508474576},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.023529411764705882},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0223463687150838},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.02112676056338028},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.03333333333333333},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.0425531914893617},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.025477707006369428},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.024390243902439025},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.04},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.008908685968819599},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.037037037037037035},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.013761467889908258},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.017857142857142856},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.04424778761061947},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.01818181818181818},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.02912621359223301},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.02631578947368421},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.007425742574257425},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.025974025974025976}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"s":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012048192771084338},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.017921146953405017},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},",":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5074626865671643},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5086206896551726},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}},")":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}},"i":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},"s":{"docs":{},"!":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}},",":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}}},"f":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.031578947368421054},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684}}},",":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},",":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943}}},"s":{"docs":{},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},")":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}},"'":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}}},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009}}}}},"i":{"docs":{},"t":{"docs":{},"!":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"\"":{"docs":{},".":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.021897810218978103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014134275618374558},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.009776536312849162},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.01483679525222552},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.0196078431372549},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.013363028953229399},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"u":{"docs":{},"p":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.022099447513812154}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"_":{"1":{"0":{"docs":{},"h":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"docs":{},"h":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"4":{"docs":{},"h":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"8":{"docs":{},"h":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"docs":{}}},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.016666666666666666},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}},"e":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},":":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}}}}},"k":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}},"n":{"docs":{},"g":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.03314917127071823},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"e":{"docs":{},"r":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}},"e":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}}}}}},"a":{"docs":{},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.014367816091954023},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01440922190201729},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.023076923076923078},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.0338983050847457},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.011494252873563218},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.011527377521613832}}}},"r":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.024390243902439025}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}},"s":{"docs":{},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.022727272727272728},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.5191082802547773},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.006968641114982578},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}},":":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.023972602739726026},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.035842293906810034},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.050955414012738856},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},"e":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}},"?":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}},",":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}}}},"b":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},"e":{"docs":{},"l":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.014245014245014245}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"s":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}},"d":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},"r":{"docs":{},"g":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.02702702702702703},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.036}},"s":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}},"z":{"docs":{},"i":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}},"i":{"docs":{},"d":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"e":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"f":{"docs":{},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.010752688172043},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.4309078771695591},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4349408553230207}}},"o":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.023972602739726026},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.0133037694013303},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010471204188481676},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.013953488372093023},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.024390243902439025}},"!":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}},")":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"k":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.529850746268657},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"e":{"docs":{},"r":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},":":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}},")":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},":":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}},".":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.011780104712041885},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.02666666666666667},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.015625},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.021505376344086023}}},":":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},":":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},"v":{"docs":{},"e":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}},"r":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}}},"r":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.014925373134328358}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}},"o":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"2":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"docs":{}}}}},"u":{"docs":{},"x":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}}},"s":{"docs":{},"b":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"l":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.007425742574257425}}}}},"m":{"3":{"2":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},"docs":{}},"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010416666666666666},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"+":{"1":{"2":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}}},"6":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}},"7":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},"docs":{}},"2":{"0":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}},"4":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}}},"8":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}},".":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}}},"docs":{}},"3":{"6":{"docs":{},".":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}}},"docs":{}},"6":{"8":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}},"docs":{}},"7":{"2":{"docs":{},".":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306}}}},"docs":{}},"docs":{}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.012569832402234637},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}}}}}},")":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},":":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.018518518518518517},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}},"c":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.036585365853658534},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.008908685968819599},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"s":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"!":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}}}}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.019305019305019305},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.06790123456790123},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.534749034749035},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.025089605734767026},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}},"e":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}}}},"n":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},"d":{"docs":{},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678}}}},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}}},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"?":{"docs":{},"”":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}},"c":{"docs":{},"h":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714}},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}},"i":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948}}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"p":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.017817371937639197},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}},"d":{"docs":{},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}},"d":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}},"i":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"u":{"docs":{},"m":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}}},"u":{"docs":{},"t":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}},"e":{"docs":{},"?":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.014598540145985401}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.021505376344086023},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.024844720496894408},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"r":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}},"l":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"s":{"docs":{},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"r":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.014336917562724014},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.011682242990654205},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.02}},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}},".":{"docs":{},".":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}},":":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},"v":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.022388059701492536},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285}},"e":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.015444015444015444},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.05405405405405406},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.027777777777777776},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.023076923076923078},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.036036036036036036},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.023255813953488372},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.02054794520547945},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.016483516483516484},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.03333333333333333},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.02336448598130841},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"o":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888}},"o":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693}}},"y":{"docs":{},".":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693}},"o":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}},"k":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}},"u":{"docs":{},"m":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}}}},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}},"e":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.011869436201780416},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.010752688172043},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.4309078771695591},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.015810276679841896},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}},":":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}},"s":{"docs":{},":":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"y":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.006983240223463687},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094}}},",":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"]":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0076923076923077},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961}}},")":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.5144404332129966},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.028268551236749116},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.035},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.03666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.018156424581005588},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.04938271604938271},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01971830985915493},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0277777777777777},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0166666666666666},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.030120481927710843},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.02564102564102564},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.03409090909090909},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01486988847583643},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.022598870056497175},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.02702702702702703},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.03731343283582089},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.027624309392265192},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.035211267605633804},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.022727272727272728},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},".":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}},"s":{"docs":{},"s":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"a":{"docs":{},"g":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"e":{"docs":{},",":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}}},"!":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"”":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"e":{"docs":{},"t":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}},"p":{"docs":{},"l":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}}}}},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}}}}}},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}}}},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.025423728813559324}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.02857142857142857},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.025157232704402517},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.021739130434782608},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.045871559633027525},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.03676470588235294},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.035211267605633804},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.05172413793103448},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}},"s":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112}}},";":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}}}}}}},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.02857142857142857},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.016304347826086956},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.045871559633027525},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.03676470588235294},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.035211267605633804},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338}}}}}}}}}}}}},"m":{"docs":{},"x":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"c":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"i":{"docs":{},"v":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}}},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"m":{"docs":{},"e":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514}},"s":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}},".":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},";":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}},"s":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}},"n":{"docs":{},"o":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}},"e":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010416666666666666},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.02654867256637168},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},"b":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},"l":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.024691358024691357},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.021505376344086023},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}}},"s":{"docs":{},".":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.037037037037037035},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.024}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"s":{"docs":{},",":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"b":{"docs":{},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}},"x":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.018656716417910446},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.028824833702882482},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.019230769230769232},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.01990049751243781},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.016666666666666666},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.024390243902439025},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"!":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.011278195488721804},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886}},"a":{"docs":{},"t":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.0113636363636362},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}}},"a":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}},"i":{"docs":{},"c":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.03361344537815126},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.008908685968819599},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"o":{"docs":{},"n":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},",":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}},"e":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}}}}}}},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.027777777777777776},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.038461538461538464},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.022598870056497175},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.02608695652173913},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.034482758620689655},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01990049751243781},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},"?":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"p":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905}}}}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.08},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0262237762237763},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.5173076923076922},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.52355460385439},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.0975609756097561},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}},"s":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}},",":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}}},",":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121}}}}},"l":{"docs":{},"l":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}},"t":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},".":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}},"o":{"0":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.023529411764705882},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"b":{"docs":{},"j":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535}},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}},"s":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01444043321299639},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.017921146953405017},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018072289156626505},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"c":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"t":{"docs":{},"o":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.006983240223463687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},".":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}},"e":{"docs":{},"]":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},"?":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"”":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"!":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},"l":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"l":{"docs":{},"y":{"docs":{},"d":{"docs":{},"b":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}},",":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047}},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}},",":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289}}}},"p":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}},"a":{"docs":{},"l":{"docs":{},":":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}}}},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"e":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.020080321285140562},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.021978021978022},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.68075117370892},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6777777777777776},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.676190476190476},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4411500449236296},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4394409937888197},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.675840978593272},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.435924369747899},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4356136820925551},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.7148594377510038},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.439097744360902},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4375804375804373},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.6839080459770113},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4489795918367345},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},")":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304}}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}},":":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}}}},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.014084507042253521},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304}},"s":{"docs":{},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.014084507042253521},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.01910828025477707},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.013736263736263736},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.022556390977443608},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"s":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},".":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}},",":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}}}}}},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}},"c":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}},"'":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285}}},"i":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008}}}},"w":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},"f":{"docs":{},"f":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}}}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},"k":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},",":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"u":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.025},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.01910828025477707},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852}},"!":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},".":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},")":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588}}}}}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684}}},")":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"s":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}},"p":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}}}}}},"d":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}},"o":{"docs":{},"d":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"p":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"d":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.014598540145985401}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.03816793893129771}},".":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"s":{"docs":{},")":{"docs":{},"!":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}}}},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}},"e":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}}},"u":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}},"?":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886}}}},"t":{"docs":{"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.712538226299694},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4653361344537814},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4567404426559354},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.718390804597701},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4693877551020407},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917}}}},"p":{"3":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.006983240223463687},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.013888888888888888},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.006993006993006993},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.012903225806451613},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010178117048346057},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.014925373134328358},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.028037383177570093},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.032520325203252036},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.041666666666666664},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.02830188679245283},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.018691588785046728},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0111940298507465},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0223463687150838},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.016901408450704224},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.5185185185185186},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":3.348258706467661},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.03787878787878788}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"!":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}},"s":{"docs":{},"!":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.507575757575758}}},".":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},"?":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},".":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}},"r":{"docs":{},"t":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}}}},"r":{"docs":{},"o":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"c":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.022900763358778626},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}},"o":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.01606425702811245},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.04580152671755725},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.01775147928994083},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}},",":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6695402298850572},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.0028818443804033},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"o":{"docs":{},"f":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.033582089552238806},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0111731843575419},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.0205761316872428},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.5178041543026706},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2761780104712042},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1381381381381381},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0277777777777777},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0153846153846153},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2620481927710843},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4340659340659339},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.016778523489932886},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5384615384615383},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.022727272727272728},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01935483870967742},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.03821656050955414},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.036585365853658534},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}}},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}},"m":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},":":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},".":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.028}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"t":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},"l":{"docs":{},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"y":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"u":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}}}},"e":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.7142857142857142},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4600179694519315},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.450310559006211},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.7269076305220883},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4496240601503758},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4375804375804373}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}},"r":{"docs":{},"v":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}},"s":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.011086474501108648},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.02054794520547945},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.02197802197802198},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}}}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"s":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}}},"t":{"docs":{},"i":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.02702702702702703},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}}},"f":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948}}}}},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169}}}}}},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.010752688172043},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6785714285714284},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":1.6843657817109143},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":2.0103092783505154},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":1.6787878787878787},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":1.6860841423948218},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":2.013157894736842},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":1.6760124610591898},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":1.669141914191419},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":2.012987012987013}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":3.339506172839506},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":3.3399122807017543},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.503861003861004},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0034246575342465},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.006666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0034965034965033},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.503610108303249},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4356385663806157},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0025445292620865},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.506666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.003731343283582},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.5065789473684212},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":3.335341365461847},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":3.334729981378026},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":3.3374485596707815},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.002217294900222},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.003584229390681},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.503584229390681},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.008450704225352},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.5029673590504453},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2578534031413613},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.2538610038610039},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2564516129032257},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.12012012012012},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0138888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0076923076923077},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2560240963855422},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2564102564102564},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4340659340659339},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4419047619047618},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.454212454212454},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":3.345238095238095},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.010752688172043},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.501923076923077},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.5071942446043165},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.5093457943925235},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5074626865671643},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":3.3366890380313197},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5064102564102564},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":3.338768115942029},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.509950248756219},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.5046296296296298},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6724137931034482},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.0113636363636362},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.5076335877862594},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":3.3398692810457513},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.508403361344538},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.509433962264151},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":3.3399558498896242},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.0037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.003846153846154},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.5074074074074075},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0043290043290045},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.0049751243781095},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.511111111111111},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.0095238095238095},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0067567567567566},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":2.8641522029372495},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.005763688760807},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.5026041666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.003717472118959},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005649717514124},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":3.3397849462365587},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0135135135135136},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0121951219512195},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.0055555555555555},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6743589743589742},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6782945736434107},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6787148594377508},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.0076923076923077},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6739130434782608},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6791666666666665},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.008130081300813},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.672161172161172},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0104166666666665},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.6753623188405795},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675287356321839},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010989010989011},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.672222222222222},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.676190476190476},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.434006211180124},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.675840978593272},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.435924369747899},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4356136820925551},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6787148594377508},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.439097744360902},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4375804375804373},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.6839080459770113},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4387755102040813},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":3.3392504930966465},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.5063694267515926},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5021413276231264},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.5105263157894737},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.509433962264151},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5086206896551726},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.5045045045045047},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.5074626865671643},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5034843205574915},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":3.3407960199004973},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.0084745762711864},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.5110497237569063},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.515873015873016},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.516949152542373},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5105263157894737},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.511764705882353},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4367015098722413},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.431807674526121},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4341580207501994},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.438186813186813},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4351073762838467},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4385714285714284},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4356136820925551},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4346320346320345},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4347826086956519},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.673160173160173},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6833333333333331},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6798245614035086},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6809523809523808},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6695156695156694},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6879432624113473},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.673860911270983},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.258695652173913},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2546511627906978},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2549751243781095},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4349408553230207},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":3.3455284552845526},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.007905138339921},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.5047619047619047},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5071942446043165},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.507575757575758},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.504878048780488},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":2.51},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":2.002227171492205},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":2.0074074074074075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5031847133757963},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004484304932735},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.0045871559633026},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.010752688172043},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6726190476190474},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":1.6755162241887904},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":2.0103092783505154},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":1.6727272727272726},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":1.6763754045307442},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":2.013157894736842},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":1.6713395638629283},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":1.669141914191419},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":2.012987012987013}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},"l":{"docs":{},"i":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}}}}},"a":{"docs":{},"m":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282}},"e":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.022388059701492536}}}}}},"s":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}},"s":{"docs":{},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.03731343283582089}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},",":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}}}},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186}}},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}},"g":{"docs":{},"e":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}},"e":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"e":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}}},"d":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.0196078431372549}}}},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}},"d":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}}}},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},".":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}}}}},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}}},"e":{"docs":{},"k":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"e":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.015267175572519},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.05704697986577181},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},"!":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}},"?":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"e":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385}}},"s":{"docs":{},"u":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808}}}}},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}}},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"l":{"docs":{},"s":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}},"l":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"s":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0111731843575419},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}}},"s":{"docs":{},"h":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"i":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"e":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}},"k":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.018050541516245487}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195}}},"s":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.515267175572519}},"e":{"docs":{},".":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}}}}}}}},"e":{"docs":{},"c":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}},"z":{"docs":{},"z":{"docs":{},"a":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.01910828025477707}},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}}}},"c":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.038461538461538464},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},"t":{"docs":{},"r":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}},"s":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815}},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}}}},"x":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}},"q":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.013761467889908258},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.019417475728155338},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}},"e":{"docs":{},"t":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}}}},"a":{"docs":{},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.017241379310344827}}}}}}}},"o":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},",":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}}},"e":{"docs":{},"m":{"docs":{},"u":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.01818181818181818}}}}},"q":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}},"r":{"0":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.021739130434782608},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514}},")":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}},"1":{"0":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"1":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}},",":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}},"2":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731}}},"3":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154}}},"4":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}},",":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}},"5":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}},",":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.016304347826086956},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.02830188679245283},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.024390243902439025},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}},"!":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}}},"2":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.02027027027027027},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}},",":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}},"3":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.012987012987012988},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.014925373134328358},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.04},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.024096385542168676},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014705882352941176},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02112676056338028},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}},"(":{"1":{"0":{"0":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}}}},"4":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.013422818791946308},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154}}},"(":{"1":{"0":{"0":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}},"5":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}},".":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}},"!":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}},"6":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},"7":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.013888888888888888}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259}}}},"8":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}},"w":{"docs":{},",":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}},"9":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},"w":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.010869565217391304},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},"a":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01444043321299639},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}},"m":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},"y":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}},"i":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"!":{"docs":{},"\"":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349}}}}},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.014084507042253521},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.017241379310344827},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01729106628242075},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.032520325203252036},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},"/":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"t":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.024390243902439025},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.018633540372670808},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232}},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}},"r":{"docs":{},"v":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827}}},")":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012048192771084338},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.021739130434782608},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.041811846689895474},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"?":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}},".":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"s":{"docs":{},".":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"t":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"o":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.043795620437956206},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.018691588785046728},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01858736059479554},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.023255813953488372},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}}}}},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}},"i":{"docs":{},"t":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}},"e":{"docs":{},"w":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}},"u":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}}}}}},"g":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0279898218829517},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.5566666666666666},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0223880597014925},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.5723684210526314},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.01606425702811245},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.008379888268156424},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.036036036036036036},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0153846153846153},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0077519379844961},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":3.380313199105145},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.019230769230769232},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.5199004975124377},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.022727272727272728},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01858736059479554},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.024390243902439025},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0273972602739726},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.027472527472527472},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.02702702702702703},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364}},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.015267175572519083},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.016666666666666666},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},"s":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.018018018018018018},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},")":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"]":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.12012012012012},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.125},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1191756272401434},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0138888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0135135135135136},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0083333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2560240963855422},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.254566210045662},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2564102564102564}}},"!":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}},":":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},";":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},")":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.0436241610738255},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}},"!":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"d":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"a":{"docs":{},"p":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}},",":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.025477707006369428},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023076923076923078},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"s":{"docs":{},",":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"a":{"docs":{},"c":{"docs":{"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}},"o":{"docs":{},",":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"l":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}},"a":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.021505376344086023}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}}}}},"y":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}},"e":{"docs":{},"v":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.024875621890547265},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"s":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}}}}},"'":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}},".":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.023529411764705882},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"!":{"docs":{"pages/x86-course.html":{"ref":"pages/x86-course.html","tf":0.2},"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111},"pages/x64-course.html":{"ref":"pages/x64-course.html","tf":0.2},"pages/arm-64-course.html":{"ref":"pages/arm-64-course.html","tf":0.14285714285714285}}}}}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}}}}},"s":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009345794392523364}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714}},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722}}}}}},"m":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}},"a":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}},".":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}},"w":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"u":{"docs":{},"t":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},"i":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},".":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}}},"g":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}}}},"l":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.542105263157895}},"e":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}},"!":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288}}}},"m":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}}}},"r":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.5352941176470587}},"!":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.042105263157894736},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.03529411764705882}}}}}},"u":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.014925373134328358},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.014336917562724014},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}},"e":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124}}}}}}},":":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},".":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},"l":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}},"a":{"docs":{},"n":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"g":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},",":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}}}}}}}},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"m":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}},",":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}},".":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714}}}}},"s":{"docs":{},"p":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"i":{"docs":{},"s":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}}},"c":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},"r":{"docs":{},"e":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"x":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.029850746268656716},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.03333333333333333},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}}},",":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.013953488372093023},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},"e":{"2":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.008908685968819599},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.019417475728155338},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.012376237623762377}},".":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"'":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}},"docs":{},":":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}}},"f":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}},":":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"s":{"docs":{},"b":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}},"s":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}},"c":{"docs":{},".":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},"s":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}},"i":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085}},".":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094}}}},"p":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}},"c":{"docs":{},"x":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},"d":{"docs":{},"x":{"docs":{},".":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},"i":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},",":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094}}}}},"b":{"docs":{},"x":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}},",":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}},".":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288}}}},"p":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"p":{"docs":{},"i":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}}}}},"s":{"0":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0273972602739726},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.02197802197802198}}},"?":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}},",":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}},"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.014598540145985401}}}}},"c":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827}},"s":{"docs":{},".":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}}}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}}}},"a":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505}}},":":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},"!":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.007853403141361256},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},")":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667}}},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628}}},"s":{"docs":{},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},".":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4610917537746804},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.431807674526121},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4397446129289704},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4478021978021975},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.441643323996265},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4485714285714284},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4426559356136819},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4467532467532465},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4347826086956519}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.018018018018018018},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.027777777777777776},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.04878048780487805},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},",":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.021897810218978103},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012048192771084338},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.025089605734767026},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015503875968992248},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.039735099337748346},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.04887218045112782},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.05384615384615385},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.025974025974025976},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.01990049751243781},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.024242424242424242},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329}}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.012987012987012988},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}},"u":{"docs":{},"p":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.504878048780488}}}},"!":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}}},"n":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},"i":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}}}}},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"t":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.02102803738317757},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},"c":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}},"l":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.013303769401330377},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}},".":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}}}}},"f":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}}}}}},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014134275618374558},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.026119402985074626},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.009776536312849162},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.014084507042253521},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.011869436201780416},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.03088803088803089},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.03870967741935484},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.041666666666666664},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.03225806451612903},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.04054054054054054},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.03333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.036036036036036036},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.03875968992248062},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018072289156626505},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0136986301369863},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.03205128205128205},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.01098901098901099},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.04},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.038461538461538464},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.01990049751243781},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.027777777777777776},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0196078431372549},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.04201680672268908},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.02830188679245283},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.02631578947368421},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.023076923076923078},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.017316017316017316},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.02857142857142857},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.02702702702702703},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01858736059479554},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.02824858757062147},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01935483870967742},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.02702702702702703},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.036585365853658534},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.022222222222222223},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.038461538461538464},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.06666666666666667},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.021739130434782608},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0375},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0547945205479452},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.06043956043956044},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03296703296703297},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.04929577464788732},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.05},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.03773584905660377},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.043478260869565216},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01834862385321101},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.029411764705882353},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.028169014084507043},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.042105263157894736},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.04504504504504504},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.023529411764705882},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.04807692307692308},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.0196078431372549},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.01818181818181818},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.025974025974025976},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.06666666666666667},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.03597122302158273},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.013953488372093023},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.029850746268656716},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.015810276679841896},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.04285714285714286},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.05755395683453238},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.05303030303030303},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.026726057906458798},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.022222222222222223},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.026905829596412557},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.023809523809523808},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},":":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}},"n":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"m":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},"k":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}},"s":{"docs":{},".":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}},"t":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.022900763358778626},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.566666666666667},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.516574585635359},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}},")":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667}}},"s":{"docs":{},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},"!":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}}}}}}}}},"x":{"docs":{},"y":{"docs":{},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.027777777777777776},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.01910828025477707},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.03},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.02631578947368421},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.025974025974025976}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},".":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.013020833333333334},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.0196078431372549},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.01834862385321101},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.02631578947368421},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.025974025974025976}},"f":{"docs":{},"i":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}}},"y":{"docs":{},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}},"g":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008032128514056224},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.013736263736263736},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.024691358024691357},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}},"e":{"docs":{},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}},"s":{"docs":{},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}}}},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195}}}}}}},"z":{"docs":{},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},"s":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}},"o":{"docs":{},"f":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.043956043956044},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6948356807511735},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6833333333333331}},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},"x":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}},"t":{"docs":{},"h":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.021505376344086023}}}}},".":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}},"t":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}}},"p":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}},"h":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.019736842105263157},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.01951219512195122}},"e":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}},"i":{"docs":{},"d":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}}},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}},"s":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.020771513353115726},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0136986301369863},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"e":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},"s":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}}}},"a":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},"o":{"docs":{},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}},".":{"docs":{},".":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"r":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"l":{"docs":{},"y":{"docs":{},"!":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}},",":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.015444015444015444},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}},"r":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.5508474576271185}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"!":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}}},"l":{"docs":{},"l":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"l":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.5476190476190474}},"!":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.018518518518518517}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}},"n":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}},"t":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}},"a":{"docs":{},"l":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}}}}}},"a":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"c":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"w":{"docs":{},"n":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"t":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}},"o":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.024691358024691357},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.022172949002217297},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.03225806451612903},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.027777777777777776},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01486988847583643},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},":":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"e":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011583011583011582},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285}}}}}}},"d":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"u":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},"s":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},"=":{"0":{"docs":{},"x":{"0":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754}}},"docs":{}}},"docs":{}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.025806451612903226},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}}}}}}},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},"r":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.02},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}},".":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},":":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010178117048346057},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":3.4003724394785846},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011267605633802818},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.014925373134328358},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.564814814814815},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.016574585635359115},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.02112676056338028},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.01818181818181818},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0111731843575419},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}},"g":{"docs":{},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},".":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}},"d":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169}}}},"c":{"docs":{},"k":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"m":{"docs":{},"p":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"o":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},"r":{"docs":{},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.013333333333333334},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.01282051282051282},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.013422818791946308},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.03409090909090909},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.02586206896551724},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"d":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684}}}},"s":{"docs":{},".":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}},"e":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}},"c":{"docs":{},"k":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010178117048346057},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.01694915254237288},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.02877697841726619},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.015810276679841896},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.022222222222222223},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},",":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712}},"u":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}}}},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"n":{"docs":{},"g":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"a":{"docs":{},"m":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.01592356687898089},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},",":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542}}}}},"d":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}}}}}}}}}}},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},";":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655}}}}}}},"w":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},";":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}},".":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}},"i":{"docs":{},"o":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},"n":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.01775147928994083},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}},",":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}},"y":{"docs":{},".":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}},":":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}}},".":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}}}}},"!":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}}},"k":{"docs":{},"s":{"docs":{},"!":{"docs":{},"”":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}}},"b":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.533333333333333},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.019047619047619},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0067567567567566}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.01272264631043257}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.52803738317757},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.01904761904761905},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.5283018867924527},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},"!":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}}}},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.019230769230769232},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.03482587064676617}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009}}}}}}}},".":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}},"o":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.022222222222222223}}}},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},":":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}},"m":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}},"d":{"docs":{},"o":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"r":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"c":{"docs":{},"i":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},"r":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}}}},"m":{"docs":{},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669}},"d":{"docs":{},".":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013}}}}}},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}},"w":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.033333333333333},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0104895104895104},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.503846153846154},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.011682242990654205},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5085653104925054},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.04065040650406504},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.014245014245014245},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"?":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},".":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548}},"l":{"docs":{},".":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.0136986301369863},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.017804154302670624},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.007853403141361256},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.015444015444015444},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}},":":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}},"s":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}},"e":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}}}}}},"r":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}}}}}}}},"b":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"t":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195}}}}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}}}}},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}}}},"s":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},"h":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"e":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}},"l":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}},"o":{"docs":{},"w":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},"e":{"docs":{},"r":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}},"l":{"docs":{},"i":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}}},"d":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415}}},"b":{"docs":{},"c":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},"s":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.011538461538461539},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.02027027027027027},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.010706638115631691},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.011396011396011397},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02158273381294964},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.012738853503184714},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"s":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"s":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}}},"b":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.02112676056338028},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}}}},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}}},"t":{"docs":{},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"d":{"docs":{},"a":{"docs":{},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}},"l":{"docs":{},"k":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},"g":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0364963503649635},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.018656716417910446},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012345679012345678},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.038461538461538464},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.03571428571428571},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.007009345794392523},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.023668639053254437},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.006968641114982578},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.018633540372670808},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.02631578947368421},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.013953488372093023},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}},"s":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}},"’":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}}}}}}}},"r":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.005747126436781609},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.005763688760806916},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}},"n":{"docs":{},"e":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}},"d":{"docs":{},"!":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":3.346491228070175},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}}}}},"c":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}},".":{"docs":{},"c":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941}}}}},"o":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.021052631578947368},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.023529411764705882}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},"l":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"i":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}},":":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}},"!":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}},"s":{"docs":{},".":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.025089605734767},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}},"l":{"docs":{},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01486988847583643},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}},"w":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}},"s":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052}}}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"d":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011267605633802818},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.023076923076923078},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.023554603854389723},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.014925373134328358},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"e":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}}}}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"!":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}}}},"m":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}}}}}},"n":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"i":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483}}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464}}},":":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212}}},"?":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}},"n":{"docs":{},"g":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"!":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124}}},"s":{"docs":{},"?":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}},"”":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},".":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}},"k":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"r":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}},"m":{"docs":{},"a":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}}}},"u":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}},"m":{"docs":{},"b":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}}}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}}},"t":{"docs":{},"?":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}},".":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757}}},"’":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.019736842105263157},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.02158273381294964}},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"k":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"'":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},",":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"?":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"’":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"p":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},"i":{"docs":{},"c":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},"w":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"!":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}}}}}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.5144404332129966},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":3.3451676528599603}},"s":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}}}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},"k":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008450704225352112},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}},"i":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}}},"p":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112}}}},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"c":{"docs":{},"k":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722}},"y":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}},"e":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}},".":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},";":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}}}},"n":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682}}}},"e":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333}}}}},"w":{"docs":{},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.01060070671378092},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"'":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105}},",":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.503861003861004},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.017738359201773836},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.023166023166023165},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.025806451612903226},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.02666666666666667},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}},":":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.027777777777777776},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012048192771084338},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"i":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"m":{"docs":{},"e":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.009776536312849162},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.008620689655172414},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.008645533141210375},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.023255813953488372},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}},"!":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},"s":{"docs":{},":":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}},".":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"v":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"c":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"l":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"u":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"p":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015384615384615385},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.012944983818770227},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.013071895424836602},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0066815144766146995},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.016304347826086956},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.007425742574257425}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}}},"t":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}},"o":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}}}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.019736842105263157},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01444043321299639},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.03307888040712468},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.03333333333333333},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.018072289156626505},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.0205761316872428},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.014084507042253521},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.017804154302670624},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.011780104712041885},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.015444015444015444},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0091324200913242},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011152416356877323},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.03314917127071823},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01948051948051948},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.014388489208633094},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.013953488372093023},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.03},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.01592356687898089},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.019305019305019305},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005235602094240838},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357}},"s":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}},"d":{"docs":{},".":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013157894736842105},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}},"e":{"docs":{},".":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}}}},"b":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.016260162601626018},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.012345679012345678},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.007722007722007722},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010273972602739725},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01444043321299639},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.006983240223463687},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016129032258064516},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.03225806451612903},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.016778523489932886},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.019230769230769232},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.011494252873563218},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.013071895424836602},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.011527377521613832},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.029585798816568046},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.010706638115631691},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.009708737864077669},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.014245014245014245},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.02158273381294964},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.009950248756218905},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.011135857461024499},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.007425742574257425}},".":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}}}},"?":{"docs":{"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.012195121951219513}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}},"k":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00823045267489712},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}},"i":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"q":{"docs":{},"u":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}}},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.045454545454545456},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083}},"s":{"docs":{},")":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011194029850746268},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.01680672268907563}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.012903225806451613},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}}},"d":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"m":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}},"v":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.013303769401330377},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.003926701570680628},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}}}}}},"a":{"docs":{},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}}}}},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.011583011583011582},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004189944134078212},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010471204188481676},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.024193548387096774},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005208333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.01910828025477707},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.024390243902439025},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.01675977653631285},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.016666666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.02},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.03225806451612903},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.030927835051546393},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.012121212121212121},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.039473684210526314},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.03896103896103896}},"f":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}},"i":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.008908685968819599},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}},"y":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009162303664921465},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}}},"a":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422}},"r":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.015444015444015444},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},"y":{"docs":{},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0111731843575419},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.0205761316872428},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.011111111111111},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6743589743589742},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6782945736434107},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6907630522088353},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.0153846153846153},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6739130434782608},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6791666666666665},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.032520325203252},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6776556776556775},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0520833333333335},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.6753623188405795},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675287356321839},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.02197802197802198},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.02857142857142857},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.025157232704402517},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.021739130434782608},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.027522935779816515},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.022058823529411766},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02112676056338028},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.030612244897959183},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.016574585635359115},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014285714285714285},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.024390243902439025},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},"!":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.5047619047619047}}}},"”":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644}}}}}},"n":{"docs":{},"c":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208}}}}}},"y":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}}},"l":{"1":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},";":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"2":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},";":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"docs":{},"u":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007067137809187279},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.016666666666666666},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.019736842105263157},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006024096385542169},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.00558659217877095},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.014084507042253521},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.02702702702702703},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.01935483870967742},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.04504504504504504},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.03225806451612903},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.04054054054054054},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.041666666666666664},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.046153846153846156},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.07207207207207207},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.07751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.030120481927710843},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0319634703196347},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.038461538461538464},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.013736263736263736},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.04},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0057692307692307696},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.018691588785046728},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.037037037037037035},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.02830188679245283},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.019230769230769232},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.014814814814814815},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.012987012987012988},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.01694915254237288},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01935483870967742},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.04054054054054054},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.06097560975609756},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011111111111111112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.03076923076923077},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.06666666666666667},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.03},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.075},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.04794520547945205},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.04945054945054945},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.02608695652173913},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.02586206896551724},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.056338028169014086},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.06666666666666667},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.01904761904761905},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.050314465408805034},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.05434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.03669724770642202},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.058823529411764705},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.06338028169014084},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.03614457831325301},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.030612244897959183},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.01910828025477707},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.006423982869379015},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.018867924528301886},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.06716417910447761},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01694915254237288},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.031746031746031744},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0111731843575419},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019230769230769232},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.013157894736842105},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.014925373134328358},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.023715415019762844},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.011904761904761904},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.014018691588785047},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},"e":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},",":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}}},":":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},"!":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.017937219730941704},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.03669724770642202}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}}}}}}},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012}},"r":{"docs":{},"u":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.01606425702811245},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.008869179600886918}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349}}}}}}}}}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"p":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}},"m":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.007168458781362},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.024390243902439025}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},"c":{"docs":{},"e":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009}}}},"e":{"docs":{},"w":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.014084507042253521},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012121212121212121},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.014634146341463415}}}}}},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.032490974729241874},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},"l":{"docs":{},"a":{"docs":{},"!":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}}}},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.0113636363636362},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}},"u":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01098901098901099},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414}}}},"a":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}},"s":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"v":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852}}}},"w":{"0":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.02976190476190476},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.030303030303030304},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.028037383177570093},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.027227722772277228}},",":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.019417475728155338},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.009900990099009901}}}},"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"a":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},"i":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},":":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}}},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.002793296089385475},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.009345794392523364},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},".":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"!":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943}}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577}}},"s":{"docs":{},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}},"!":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513}}},":":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"v":{"docs":{},"e":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}},"e":{"docs":{},"r":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}},"l":{"docs":{},"k":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.013157894736842105},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009259259259259259},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.007905138339920948},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}},".":{"docs":{},".":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"e":{"docs":{},"k":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.008902077151335312},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006544502617801047},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009009009009009009},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0196078431372549},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009433962264150943},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.007692307692307693},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.014925373134328358},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011111111111111112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004672897196261682},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.02702702702702703},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.012195121951219513},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.0125},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.003484320557491289},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.00847457627118644},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.015873015873015872},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.01694915254237288},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.0223463687150838},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.009615384615384616},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.04},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.012987012987012988},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.008547008547008548},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076}}},"’":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556}}},"'":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}}}}}}},"!":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"b":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.008}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"s":{"docs":{},"o":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}}}}},"e":{"docs":{},"v":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}},"!":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012048192771084338}}}}},"e":{"docs":{},"w":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010040160642570281},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}}}},"s":{"docs":{},"e":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}},"y":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"e":{"docs":{},",":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}}}}},"i":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.006666666666666667},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007633587786259542},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.021052631578947368},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}},"r":{"docs":{},"e":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.011834319526627219}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.006172839506172839}}}}}}},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609}}}}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}},"d":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"o":{"docs":{},"w":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.0136986301369863},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007220216606498195},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0066518847006651885},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}},"s":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}},".":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}}}}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011111111111111112}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.00684931506849315},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.011086474501108648},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007168458781362007},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.014925373134328358},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006711409395973154},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015267175572519083},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009523809523809525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013513513513513514},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.018691588785046728},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.016260162601626018},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.012422360248447204},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"s":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.011627906976744186},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494}}}}}}},"!":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}}}}}}},"l":{"docs":{},"d":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.010830324909747292},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.5052083333333335},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.003717472118959},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005649717514124},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.022222222222222223}},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0037174721189591076},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674}}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0039525691699605},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408}},"`":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}},"”":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.02824858757062147}}},"\"":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},".":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}}}},"'":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422}}}},"”":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125}}},"\"":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":2.51},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":2.0044543429844097},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":2.0074074074074075}}},"\\":{"docs":{},"n":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}},"?":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861}}},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.028268551236749116},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.01},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5522388059701493},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5258620689655173},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.022388059701492536},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.025423728813559324},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.022099447513812154},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}},"s":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976}}},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":2.864209994952044}}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}},"]":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},":":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179}}}},"r":{"docs":{},"i":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"o":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"!":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}}}},"a":{"docs":{},"h":{"docs":{},"!":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006578947368421052},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003355704697986577},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.008695652173913044},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036}}}}}},"e":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.009302325581395349},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.014925373134328358},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.019417475728155338},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0049504950495049506}},",":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}},"r":{"docs":{},"/":{"1":{"5":{"5":{"2":{"2":{"2":{"6":{"6":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.00641025641025641}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}}}}},"a":{"docs":{},"p":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.014925373134328358}}}}}}}},"x":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}},"x":{"6":{"4":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/x64-course.html":{"ref":"pages/x64-course.html","tf":5.2},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.023668639053254437},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.007462686567164179},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.010526315789473684},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.011764705882352941},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.686147186147186},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6833333333333331},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6798245614035086},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.695238095238095},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.675213675213675},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6879432624113473},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.673860911270983},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2760869565217392},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2546511627906978},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2549751243781095},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4349408553230207},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.004},"pages/part-39-why-c.html":{"ref":"pages/part-39-why-c.html","tf":0.024390243902439025},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.015151515151515152}}},"docs":{}},"8":{"6":{"docs":{"pages/x86-course.html":{"ref":"pages/x86-course.html","tf":5.2},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0205479452054793},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.013513513513513514},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.02}},",":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}},"/":{"docs":{},"x":{"6":{"4":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"docs":{}},"docs":{}}},"'":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"7":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009}}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013333333333333334},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.027972027972027972},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358}},"/":{"1":{"docs":{},"c":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}},"docs":{},"x":{"docs":{},"b":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008241758241758242},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.012738853503184714},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.017421602787456445}},",":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}},"m":{"docs":{},"m":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.011049723756906077}}}}}}}}},"y":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.014925373134328358},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799}},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.021897810218978103}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007407407407407408},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}},".":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006060606060606061}}}}}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.00411522633744856}}},"t":{"docs":{},"u":{"docs":{},"b":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"e":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.007692307692307693},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}}},"a":{"docs":{},"r":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.008968609865470852},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}},"y":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}}}},"m":{"docs":{},"m":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}},".":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.0055248618784530384}}}}}}}}}},"|":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}},"|":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535}}}},"—":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"♡":{"docs":{"./":{"ref":"./","tf":0.0072992700729927005}}},"j":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.003861003861003861},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006756756756756757},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.005917159763313609},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003424657534246575}}},"!":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}}}}}}},"b":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0035842293906810036},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}},"i":{"docs":{},"n":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02564102564102564},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.009950248756218905},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006211180124223602},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.014388489208633094}}}},"n":{"docs":{},"k":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"d":{"docs":{},"e":{"docs":{},"'":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.017921146953405017},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009345794392523364},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.01910828025477707}},",":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}}}}}}},"e":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"m":{"docs":{},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.006472491909385114},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.00558659217877095}}}},"e":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}}}},"v":{"docs":{},"m":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"n":{"docs":{},"e":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.02158273381294964}}}}},"(":{"0":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}},"1":{"0":{"8":{"4":{"5":{"docs":{},")":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}},")":{"1":{"1":{"0":{"0":{"0":{"1":{"0":{"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.014388489208633094},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.010526315789473684},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}}}},"2":{"2":{"1":{"5":{"docs":{},")":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}},"docs":{}},"docs":{}},"3":{"7":{"6":{"9":{"1":{"docs":{},")":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682}}}},"docs":{}},"docs":{}},"docs":{}},"8":{"2":{"4":{"5":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"6":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"7":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"8":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"5":{"0":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"2":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"3":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"7":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"8":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"9":{"docs":{},")":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965}},"^":{"3":{"1":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"2":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"docs":{}},"docs":{}}},"3":{"2":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}},"docs":{}},"4":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0034965034965034965},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005}}},"5":{"9":{"5":{"7":{"5":{"docs":{},")":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667}}},"6":{"4":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}},"docs":{}},"8":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044}}},"9":{"6":{"4":{"4":{"5":{"docs":{},")":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395}}}}}}}}}}},")":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.008130081300813009}}}},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}}}}},"i":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035335689045936395},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005089058524173028},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}},"f":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.01}}},"m":{"docs":{},"g":{"docs":{},".":{"docs":{},"x":{"docs":{},"z":{"docs":{},")":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}}}}},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002544529262086514}}},"f":{"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}}}},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},")":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}}},"s":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0013966480446927375}}}}}}},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}}},"n":{"docs":{},"c":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.003952569169960474}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588}}}}}}}}}},"x":{"8":{"6":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0033333333333333335}}},"docs":{}},"docs":{}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006578947368421052}},"e":{"docs":{},":":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.007042253521126761}}}}}},"z":{"docs":{},"c":{"docs":{},"v":{"docs":{},")":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.007518796992481203},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.011538461538461539},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/arm-32-course-1.html":{"ref":"pages/arm-32-course-1.html","tf":0.1111111111111111},"pages/arm-32-course-2.html":{"ref":"pages/arm-32-course-2.html","tf":0.1111111111111111}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.013513513513513514}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}},"i":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.007575757575757576}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.0436241610738255}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.004975124378109453}}}}}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004629629629629629}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005649717514124294}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}}}}},"a":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011363636363636364}}}}}},"d":{"docs":{},"d":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}},"s":{"docs":{},"l":{"docs":{},"r":{"docs":{},")":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}}}}},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"r":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}},")":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}}}}}}},")":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},"−":{"2":{"docs":{},"^":{"3":{"1":{"docs":{},")":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}},"docs":{}},"docs":{}}},"docs":{}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"e":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.004}}}}}}},"@":{"docs":{},")":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}},"v":{"1":{"docs":{},".":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805}}}}},"docs":{}}},"docs":{}},"!":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"z":{"docs":{"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}}}}},"+":{"5":{"docs":{},"v":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0038461538461538464},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.004282655246252677}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.027972027972027972},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.015384615384615385},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.050359712230215826},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.017130620985010708},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943}},"+":{"docs":{},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}}}}}}}}}}}},"=":{"0":{"docs":{},"]":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006666666666666667},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.04895104895104895},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.0028169014084507044},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.09065934065934066},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.03653846153846154},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.050359712230215826},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.02717391304347826},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.018867924528301886},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.026490066225165563},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.015037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.017316017316017316},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.01990049751243781},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03296703296703297},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.02857142857142857},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.016304347826086956},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.027522935779816515},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.022058823529411766},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02112676056338028},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.024096385542168676},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.021052631578947368},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.018018018018018018},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.034482758620689655},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.02040816326530612},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.022988505747126436},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.014989293361884369},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.04878048780487805},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.056338028169014086},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.014245014245014245},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.024752475247524754},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}},">":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005244755244755245},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0037313432835820895}}}},"'":{"docs":{},"h":{"docs":{},"'":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.0017482517482517483},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},".":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.011857707509881422}}}}},"y":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"'":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}},"'":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997}}}},"i":{"docs":{},"'":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}},"w":{"docs":{},"q":{"docs":{},"'":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.003236245954692557}}}}},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}},"'":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.004761904761904762}}}},"b":{"docs":{},"c":{"docs":{},"'":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}}}},"r":{"2":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}},"docs":{}},"s":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}},"b":{"docs":{},"'":{"docs":{},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.009523809523809525}}}}},"\\":{"0":{"docs":{},"'":{"docs":{},";":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}},"docs":{}},"c":{"docs":{},"'":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952}},";":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}}}},"*":{"0":{"docs":{},"x":{"8":{"0":{"4":{"9":{"0":{"9":{"docs":{},"e":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}},".":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.013986013986013986}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"+":{"1":{"2":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}},"docs":{}},"2":{"4":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}},"8":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761}}},"docs":{}},"docs":{}}}}}}},"^":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.03146853146853147}}},"z":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.006622516556291391},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0037593984962406013},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.0038461538461538464},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.004329004329004329},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.004975124378109453}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036101083032490976},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.004016064257028112},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.010869565217391304},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.013245033112582781},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.011278195488721804},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.015384615384615385},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.008658008658008658},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.009950248756218905},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.009433962264150943},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.009009009009009009}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005434782608695652}}},",":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547}}},"s":{"docs":{},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}}}},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005494505494505495}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.002008032128514056}}}}},"‘":{"7":{"docs":{},"’":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}},"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.007462686567164179}}}}}}},":":{"docs":{},"w":{"docs":{},"q":{"docs":{},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.010752688172043012}}}}}},"i":{"docs":{},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}}},"n":{"docs":{},"’":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.015384615384615385}},";":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.007692307692307693},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.02666666666666667}}}}},"y":{"docs":{},"’":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.02666666666666667}},".":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.013333333333333334}}}}}},".":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}},"d":{"docs":{},"m":{"docs":{},"g":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007751937984496124},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014285714285714285},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.004434589800443459},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}}}}},"/":{"0":{"docs":{},"x":{"0":{"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01}}}}}}}}}}}}}},"docs":{}},"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.004454342984409799},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.014814814814814815}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"2":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}}}}}}}}},"docs":{}},"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.009174311926605505}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.017699115044247787}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"4":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.019417475728155338}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"5":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"6":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"1":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.004651162790697674},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.004975124378109453}}}},"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"1":{"0":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505}}},"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665}}},"2":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}},"3":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}},"4":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01}}},"5":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693}}},"6":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009}}},"7":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}},"8":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099}}},"9":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652}}},"docs":{}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}}}},"i":{"docs":{},"n":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.006535947712418301}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.005698005698005698}}}}}}},">":{"0":{"docs":{},"x":{"4":{"1":{"2":{"2":{"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{}},"3":{"3":{"3":{"3":{"3":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"5":{"5":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}},"docs":{}},"docs":{}},"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{}},"5":{"9":{"9":{"9":{"docs":{},"a":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"9":{"9":{"9":{"docs":{},"f":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{}},"docs":{},"f":{"9":{"9":{"docs":{},"e":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{}},"docs":{},"f":{"9":{"docs":{},"e":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}},"docs":{},"f":{"docs":{},"e":{"docs":{"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}},"_":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022172949002217295}}},"=":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}},">":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535}}}},"–":{"3":{"2":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.013888888888888888},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.007692307692307693},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006024096385542169},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}},"docs":{}},"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.002217294900222},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.009615384615384616},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007194244604316547},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.009345794392523364},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007462686567164179},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.010067114093959731},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.01282051282051282},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.02717391304347826},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.017241379310344827},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.022900763358778626},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.0037593984962405},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.003846153846154},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.5074074074074075},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0043290043290045},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.0049751243781095},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.522222222222222},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.019047619047619},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0135135135135136},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.4332443257676901},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01729106628242075},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0135135135135136},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0121951219512195},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.0055555555555555},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6743589743589742},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.01},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6782945736434107},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6787148594377508},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.0076923076923077},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6739130434782608},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6791666666666665},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.008130081300813},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.672161172161172},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0104166666666665},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.6753623188405795},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675287356321839},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010989010989011},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.672222222222222},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.676190476190476},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.434006211180124},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.675840978593272},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.435924369747899},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4356136820925551},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6787148594377508},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.439097744360902},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4375804375804373},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.6839080459770113},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4387755102040813},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4400656814449917},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.008565310492505354}}},"$":{"0":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}},"x":{"8":{"0":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.002617801047120419}}}},"docs":{}},"docs":{}}},"1":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}},"3":{"5":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}},"docs":{}},"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"e":{"docs":{},"a":{"docs":{},"x":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064}}}},"d":{"docs":{},"x":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258}}}},"c":{"docs":{},"x":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333}}}},"b":{"docs":{},"x":{"docs":{},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}}},"i":{"docs":{},"p":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}}}}},"r":{"1":{"1":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.016666666666666666}}},"docs":{}},"docs":{}}},":":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.005934718100890208}},"q":{"docs":{},"!":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},"w":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}},"q":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0035842293906810036}}}},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.007194244604316547}}}}}}},"%":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}},"x":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}},",":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}},"s":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.002967359050445104}}}}},"a":{"docs":{},"x":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0027472527472527475}}}}}},"#":{"8":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495}}},"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017391304347826087},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017241379310344827}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.009554140127388535},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}}}}}}},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}},"s":{"docs":{},"m":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}},"c":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"_":{"3":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.007722007722007722}}}},"_":{"0":{"docs":{},"x":{"1":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}},"5":{"5":{"6":{"6":{"docs":{},"b":{"docs":{},"e":{"0":{"2":{"3":{"8":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}},"1":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927}}},"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013089005235602095},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.013513513513513514},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.006493506493506494},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849}},"+":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},"5":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861}}},"docs":{}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.003861003861003861},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.0064516129032258064},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.00641025641025641},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.01282051282051282}},":":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621}}}},",":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.013888888888888888},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008064516129032258},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.0045662100456621},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.008403361344537815}}}}}}}},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}},"l":{"docs":{},".":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007462686567164179}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464}}}}},"c":{"docs":{},".":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.020618556701030927}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669}}}}},"&":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":1.4349408553230207},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.00975609756097561}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013333333333333334}}}}}}}}},"&":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785}}}},"\\":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"6":{"4":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":0.0022271714922048997},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.0031847133757961785},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.0045871559633027525},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.005952380952380952},"pages/part-11-hacking-character-primitive-datatype.html":{"ref":"pages/part-11-hacking-character-primitive-datatype.html","tf":0.008849557522123894},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-13-debugging-boolean-primitive-datatype.html":{"ref":"pages/part-13-debugging-boolean-primitive-datatype.html","tf":0.006060606060606061},"pages/part-14-hacking-boolean-primitive-datatype.html":{"ref":"pages/part-14-hacking-boolean-primitive-datatype.html","tf":0.009708737864077669},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-16-debugging-float-primitive-datatype.html":{"ref":"pages/part-16-debugging-float-primitive-datatype.html","tf":0.004672897196261682},"pages/part-17-hacking-float-primitive-datatype.html":{"ref":"pages/part-17-hacking-float-primitive-datatype.html","tf":0.0024752475247524753},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}},"docs":{}},"docs":{}}}}}},"“":{"2":{"0":{"1":{"7":{"docs":{},"”":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.0019230769230769232},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0021413276231263384}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841}}}}}},"i":{"docs":{},"’":{"docs":{},"m":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}}},"o":{"docs":{},"k":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"s":{"docs":{},"o":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0028735632183908046},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002336448598130841},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.002881844380403458}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0078125},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007434944237918215},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011299435028248588}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.01694915254237288}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"”":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}}}}}},"n":{"docs":{},"”":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556}}}}},"\"":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013452914798206279}},"s":{"docs":{},"o":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.006535947712418301}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.006369426751592357}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.008620689655172414}}}}}}},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}}},"x":{"6":{"4":{"docs":{},"\"":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.0045045045045045045}}}},"docs":{}},"docs":{}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.02857142857142857},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.002849002849002849},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02127659574468085},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.017391304347826087},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.012738853503184714},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.004878048780487805},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":2.51},"pages/part-4-debugging-hello-world.html":{"ref":"pages/part-4-debugging-hello-world.html","tf":2.0133630289532296},"pages/part-5-hacking-hello-world.html":{"ref":"pages/part-5-hacking-hello-world.html","tf":2.0074074074074075}}}}}}},"i":{"docs":{"pages/part-37-x64-c-amp;-genesis-of-life.html":{"ref":"pages/part-37-x64-c-amp;-genesis-of-life.html","tf":0.006369426751592357}}},"a":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007194244604316547}}},"d":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004484304932735426}}}}}},"{":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026041666666666665},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.0064516129032258064},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.005555555555555556},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.01},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.008130081300813009},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.005494505494505495},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008695652173913044},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008620689655172414},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.01098901098901099},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005555555555555556},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009523809523809525},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005434782608695652},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.009174311926605505},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007352941176470588},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.007042253521126761},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.012048192771084338},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.010526315789473684},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.009009009009009009},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218},"pages/part-3-hello-world.html":{"ref":"pages/part-3-hello-world.html","tf":0.01},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.006369426751592357},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.010752688172043012},"pages/part-12-boolean-primitive-datatype.html":{"ref":"pages/part-12-boolean-primitive-datatype.html","tf":0.010309278350515464},"pages/part-15-float-primitive-datatype.html":{"ref":"pages/part-15-float-primitive-datatype.html","tf":0.013157894736842105},"pages/part-18-double-primitive-datatype.html":{"ref":"pages/part-18-double-primitive-datatype.html","tf":0.012987012987012988}}},"−":{"2":{"docs":{},",":{"1":{"4":{"7":{"docs":{},",":{"4":{"8":{"3":{"docs":{},",":{"6":{"4":{"8":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007692307692307693},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007246376811594203}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015384615384615385},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014492753623188406}}},";":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.01020408163265306},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011494252873563218}}},"}":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.017241379310344827}}}},"length":19943},"corpusTokens":["\"","\"a","\"dude","\"enter","\"hello","\"i","\"littl","\"r\",","\"so","\"the","\"x64\"","\"you","#","#8","#arm","#asm","#cplusplu","#includ","#reverseengin","$","$0,","$0x80.","$1,","$35","$eax","$ebx.","$ecx","$edx","$eip","$r11","%eax","%ebp","%ebx","%ebx,","%esp,","&","&&","&answer.","'\\0';","'a'","'a'.","'aaa'","'abc'","'b'.","'c'","'c';","'e'","'esc'","'h'","'h'.","'hello","'hey","'i'","'pdf'","'r2","'s","'wq'","(","(!valid)","()","(.data","(.text","(0","(1","(1)","(1)11000101","(10845)","(2","(2215)","(237691)","(238245)","(238246)","(238247)","(238248)","(238250)","(238252)","(238253)","(238257)","(238258)","(238259)","(2^31","(2^32","(32","(4","(5","(59575)","(64","(8","(96445)","(@)","(a","(add","(along","(aslr)","(b.eq","(branch","(cpsr","(cpsr)","(eip)","(esp),","(gener","(here)","(hex)","(hexadecimal)","(i","(if","(img.xz)","(in","(ios,","(last","(less","(load","(movz","(not","(note:","(nzcv)","(off","(on","(or","(part","(pid)","(program","(radio","(rip","(set","(sign","(sinc","(ss)","(standard","(technic","(terminal)","(these","(thi","(translat","(unless","(unsign","(unsigned)","(v1.2),","(we","(with","(x86","(−2^31)","*","*0x804909e","*0x804909e.","*main+12","*main+24","*main+28","+","++mynumber;","+5v",".","./","./0x01_asm64_helloworld","./0x01_asm_64_helloworld","./0x02_asm64_basicio","./0x02_asm_64_basicio","./0x03_asm64_char_primitive_datatyp","./0x04_asm64_boolean_primitive_datatyp","./0x05_asm64_float_primitive_datatyp","./0x05_float_primitive_datatyp","./0x06_double_primitive_datatyp","./1'","./example1","./example10","./example2","./example3","./example4","./example5","./example6","./example7","./example8","./example9","./exit","./moving_immediate_data",".bin",".bss",".data",".dmg",".iso",".iso,",".text","/usr/include/asm/unistd_32.h","/x","0","0'","0)","0).","0,","0.","00","00.","0000","00000001b.","00000010","00000010b","00000101","00008052","0001","0001.","00010100","00010100b","00010101","0010","0010.","0010:","0011","01","0100","0100010100100100101010","0101","010101000101001011","01010101","01010101b","0110","0111","01110000","0:","0;","0]","0v","0v.","0x","0x0","0x0)","0x0.","0x00000000","0x00000001","0x00000004","0x00000008","0x00000009bc","0x0000000c","0x00000063","0x000009ec","0x00001000","0x00001000,","0x000010c4","0x0000113d","0x00001144","0x00001148","0x0000114a","0x00001158","0x01.","0x01_asm64_helloworld","0x01_asm64_helloworld.cpp","0x02","0x02_asm64_basicio","0x02_asm64_basicio.cpp","0x03_asm64_char_primitive_datatyp","0x03_asm64_char_primitive_datatype.cpp","0x04_asm64_boolean_primitive_datatyp","0x04_asm64_boolean_primitive_datatype.cpp","0x05","0x05_double_primitive_datatype.cpp","0x05_float_primitive_datatyp","0x05_float_primitive_datatype.cpp","0x06_double_primitive_datatyp","0x08048092","0x080480b1","0x080480dd","0x0804843b","0x1","0x10","0x10).","0x10,","0x10.","0x10730","0x10730.","0x10750","0x10848.","0x1158.","0x1214","0x1214)","0x15","0x16","0x19","0x1],","0x1_or","0x20","0x20.","0x200","0x2004","0x2005","0x2005!","0x22","0x222323123,","0x30","0x3333","0x39","0x3a","0x4.","0x4121,","0x4121999a","0x4122999a","0x4123,","0x41233333","0x41235555","0x4123599a","0x4123999a","0x4125999a","0x412f999f","0x412ff99e","0x412fff9e","0x412ffffe","0x43","0x45","0x48","0x50","0x50.","0x539","0x555e6c29c8","0x556215e9c8","0x55629ca9e4","0x55629cab48","0x55629cab48.","0x5566be00c4","0x5566be00cc","0x5566be017c","0x5566be01d0","0x5566be0214","0x5566be0218","0x5566be0244","0x55716ab9c8","0x55718999bc","0x5576bff9ec","0x557931c9c8","0x557b1b39c8","0x558216c9c8","0x55826479c8","0x55868a79c8","0x55880169c8","0x559130d9c8","0x55931439c8","0x5f","0x6000d8","0x6000d8.","0x61","0x61.","0x62","0x63","0x63.","0x64","0x65.","0x66","0x66)","0x66.","0x680cec83.","0x6e","0x73fff3a0.","0x78","0x7c00.","0x7e00.","0x7efff230","0x7efff39c","0x7efff3a0","0x7efff3a0.","0x80","0x80,","0x80.","0x800.","0x8000","0x8000,","0x8000.","0x8001,","0x8002,","0x8003,","0x8049090","0x804909e","0x80490a2","0x80490a2.","0x90","0x999a","0xa","0xaa55","0xaabb.","0xb","0xb48","0xb48.","0xbbaa","0xe","0xea","0xefff39c.","0xf7fac3dc","0xfe","0xff","0xffffd030","0xffffd040","0xffffd040,","0xffffd050.","0xffffffff","0xffffffff.","0xffffffffffffffff.","1","1!\".","1)","1)0x0","1)byte","1)can","1)condit","1)control","1)data","1)fetch","1)physic","1)program","1)real4","1)the","1)we","1,","1,024","1.","1.2ghz","10","10)","10,","10.","10.1","10.1625","10.1;","10.2","10.2083","10.2094","10.225","10.35","10.975","10.9984","10.9999","100","1000","10000000b","10000000b.","101","1010","10100000","1011","102","108355","10:","10b.","11","110","11000101","1101","11010101","1110","11101011","1111","1111.","11110000","11111101","119!","11:","12","120","120.","120:","128","12:","12]","13","1337","1337.09998","1337.1","1337.1;","1337.77","1337.77;","13:","14","14:","15","15.","15:","16","16.","16.00","16/","16:","16;","16^0","16^1","17","17.","17/","18","19","192","1981!","1981.","1:","1]","1st","2","2)","2)0x400","2)bss","2)can","2)data","2)debug","2)decod","2)execut","2)op","2)real8","2)the","2)we","2)word","2,","2,000","2,147,483,647","2.","20","20,","200","20000010","2001.","200h","201","2017,","2017.","2017;","201?","21","21,","22","22,","22.","23","24","24.","240","245","24:","25","25.","255","255.","256","256.","26","27","28","28:","29","2:","2]","2^32","2^8","2a","2nd","3","3)0x7c00","3)can","3)doubl","3)execut","3)hack","3)network","3)offset","3)regist","3)text","3)the","3)we","3,","3.","30","30,","31","31,","31.","32","328","33","34","35","352","36","37","38","39","3:","3]","3rd","3x","4","4)0x7e00","4)can","4)flag","4)quad","4)transport","4)we","4,","4,294,967,295","4,294,967,296","4.","40","4096","41","4121","42","42.","4294967295","43","44","45","46","46.","47","48","49","4:","4]","4gb","4x","5","5)0x9fc00","5)can","5)session","5)xmm","5,","5.0.24","50","512","53","53.","55","56","56.","56:","5:","5]","6","6)0xa0000","6)can","6)present","6)ymm","6,","6.","60","61,440","61,901","64","64.","640x200","64gb","65","66","66!","666","666.","67","6:","6]","7","7)0xc0000","7)applic","7)can","7,","7.","777","777.","777;","7:","7]","8","8)0x100000","8)can","8,","8.","8.00","80","8000","800a0054","80483de","8080","8086","850","8:","8]","8th","9","9.","93","95","99","999a","9:","9]",":",":)...",":q!",":w",":wq",";","=","=0]","=>",">",">0x4122999a",">0x41233333",">0x41235555",">0x4123599a",">0x4123999a",">0x4125999a",">0x412f999f",">0x412ff99e",">0x412fff9e",">0x412ffffe",">=",">>",">_","@","@0x000009bc","@0x000009c0","@0x55629cab48","@0xb48","@0xinfect","@mytechnotal","[","[0x000009b4]>","[0x000009e4]>","[0x000010a4]>","[0x000010c4]>","[0x555e6c29c4]>","[0x555e6c29c8]>","[0x556215e9c4]>","[0x556215e9c8]>","[0x55629ca9e4]>","[0x5566be0194]>","[0x55716ab9c4]>","[0x55716ab9c8]>","[0x55718999b4]>","[0x55718999bc]>","[0x5576bff9e4]>","[0x5576bff9ec]>","[0x557931c9b4]>","[0x557931c9c8]>","[0x557b1b39c4]>","[0x557b1b39c8]>","[0x558216c9c4]>","[0x558216c9c8]>","[0x55826479c4]>","[0x55826479c8]>","[0x55868a79c4]>","[0x55868a79c8]>","[0x55880169c4]>","[0x55880169c8]>","[0x559130d9c4]>","[0x559130d9c8]>","[0x55931439c4]>","[0x55931439c8]>","[0x7f9727503c]>","[0x7fac4f903c]>","[0x7fb146cb8c]>","[0x7fb948407c]>","[carri","[cmov","[comment]","[copi","[delet","[indirect","[label]","[load","[local1_h]","[local1_h],","[move","[ok]","[ol]","[one","[operands]","[overflow","[pariti","[part","[put","[quit","[r10]","[r11,","[r4]","[rax]","[rax],","[rbp","[save","[sign","[thi","[undo","[zero","\\_arm64","]","^","_0.","_0x1","_0x5566be0238","_1","__fastcal","__fastcall.","_and","_c.","_or","_start","_start+0","_start+5","_start,","_start.","_start.:","_true","_valu","_where","a,","a24","a53,","a:","aa","aa.","aaa","aaron","abc","abil","about:","abov","above!","above,","above.","absenc","absent","absolut","abstract","ac:","academ","accept","access","access.","accomplish","accordingli","account","account.","accumulator,","accur","acquir","act","action","activ","actual","ad","adc","adc.","adc.o","add","add,","add.","add.o","added.","addit","addition","addition!","addition,","addition.","addm","addme(int","address","address!","address,","address.","address:","addressable.","addresses.","adds.","adjust","advanc","advantag","advantage!","advis","af:","affect","aforement","ag","again","again!","again,","again.","again:","against","age)","age.","age:","ages!","agil","ago.","agre","ah","ah,","ahead","ai,","aim","al","al,","algorithm","align","all.","alloc","allow","alon","along","along.","alot","alreadi","alsr.","alter","although","alway","amaz","amazon","amd","amount","analysi","analysis,","analysis.","analyst","analyz","analyze.","analyze:","and,","and/or","android","android,","android.","anoth","answer","answer,","anticip","anticipated.","antiviru","anyon","anyth","anything.","anywher","apart","app","apparent.","appear","appli","applianc","applic","application.","applications.","applications/malwar","appreci","approach","approach:","appropri","appropriately.","approxim","apps.","apt","aqua","archaic","architectur","architecture!","architecture,","architecture.","architectures,","architectures.","archiv","are:","area","area.","argument","arithmet","arlington,","arm","arm,","arm64","around","around.","arp,","arrang","array","array.","array:","arrays.","arriv","arrow","arrows.","artifici","as:","ascii","asid","ask","ask!","ask,","ask.","asked!","aslr","aslr.","asm","assembl","assembler:","assembly!","assembly,","assembly.","assembly:","assign","assigned.","associ","associated:","assum","at&t","at.","at:","attach","attack","attack.","attacks.","attempt","attent","audienc","augment","author","auto","autom","automat","avail","available.","aw","awar","away","away.","ax","ax,","azur","b","b)","b),","b)’","b,","b.","b.eq","b.ne","b8","baby!","back","backdoor","background","backward","balenaetch","bam!","bar","bare","base","base.","based.","basi","basic","basics!","basics.","bcm2837","be","be:","becom","becomes.","befor","before.","begin","begin,","beginn","beginner,","beginning!","begins.","behavior","behavior).","behind","believ","bell","below","below,","below.","below:","beneath","benefici","beq","better","between","bh","bh,","bidding.","big","biggest","billion","bin","binari","binaries.","binary!","binary,","binary.","binary:","bio","biochem","bios.","bit","bit)","bit),","bit).","bit,","bit.","bite","bits,","bits.","bl","bl,","block","block.","block:","blue","bne","bodi","bone","bool","boolean","boom!","boot","boot.","bootabl","bootcode.bin","bootload","boots,","bootsector.","bootsector.asm.","bootstrap","bored!","borrow","both","both.","botnet","bottom","boundari","box","box,","boy","bp","bp,","branch","branches!","break","break.","breakdown","breakpoint","breakpoint.","bridg","brief","briefli","bring","broadcom","broke","broken","broken?","brought","brows","browser","browser.","bu","buffer","buffer.","build","built","bullet","bus.","busi","button","button.","bx","bx,","by:","bypass","byte","byte(s)","byte).","byte,","byte.","bytes,","bytes.","c","c#","c++","c++,","c++.#linux","c++?","c,","c.","c00c8052","c2","c?","cabl","cach","calculation.","calculations.","calculators,","call","call,","call.","calloc(),","cancel","can’t","cap","capabl","capacitor","capit","capston","captur","card","care","care?\"","career","carefulli","carri","carry)","case","case,","cases.","cat","catastroph","categori","caus","cd","cell","cell.","center","ceo","certain","cf","cf,","cf:","ch","ch,","chain","chained.","challeng","champagne!","chang","change.","changes]","char","charact","character.","character]","characterist","characters.","charg","charge.","check","checked,","checkpoint","chemic","childishli","children","chip","chip.","chipset.","choic","choice.","choke","choos","choose.","choosing.","chose","chunk","church","cin","cin,","cin.","circle.","circuit","circumst","cisc","cisc,","cl","class.","clean","clean.","clear","clear.","cleared,","clearer","clearli","cli","click","cloaking/hid","clock","clone","close","closely.","closer","closer.","cloud","cloud.","cmn","cmn.","cmov","cmov_instruct","cmov_instructions.","cmov_instructions.o","cmova","cmovb","cmovc","cmove","cmovg","cmovl","cmovn","cmovna","cmovnb","cmovnc","cmovng","cmovnl","cmovno","cmovnp","cmovnz","cmovo","cmovp","cmovpo","cmovz","cmp","cmp,","co","code","code!","code,","code.","code:","codes.","coding!","coffe","coffee,","cog","colleg","collis","color","column","combin","come","comfort","command","command,","command.","commands.","commands:","comment","comments!","comments,","comments.","commerci","common","commun","compani","company,","compar","comparison","comparison.","compat","compil","compile,","compile.","compile...","compile:","compiler.","complement.","complet","complete.","complex","complic","compliment","compon","components.","comprehens","comprehensive.","compris","compromise.","comput","computer'","computer,","computer.","computers.","con","concentr","concept","concept.","concepts,","concern","conclud","conclus","condit","conduct","config.txt","configur","configured,","confirm","confus","confused,","confusing.","congrat","congratulations!","conjunct","connect","consequ","consid","consider","consist","consol","console.","console:","const","constant","constant.","constantli","constants.","construct","consuming.","consumption.","contain","contains,","content","content/uploads/2012/02/bcm2835","contents.","context","contigu","continu","continue!","continue.","continued.","contrast","contrast,","control","control,","control.","conveni","convent","conventions!","convers","conversion:","convert","copi","coprocessor","core","core.","corner","cornerston","corpor","correct","correction,","correspond","corrupt","cortex","counter","counter!","counter)","counter.","coupl","cours","course.","cout","cout.","cover","cover.","cpp","cpsr","cpsr!","cpsr.","cpu","cpu,","cpu.","cpuid","cr.","cr0","cr0:","cr1:","cr2:","cr3:","cr4:","craft","crap","crap?","crash","creat","create,","create.","created,","created.","creating,","crippl","criteria.","critic","crystal","cs","cs:","cup","curb","current","cursor","cursor]","custom","cut","cx","cx,","cyber","cyber.","cycl","cycle.","cycles.","d","d,","d0","d0,","d0.","d040,","daily.","damn","danger","data","data,","data.","data]","dataset","datasheet","datasheet!","datasheet:","datatyp","datatype.","datayp","date.","day","day.","db","db,","dc","dd","dd,","de","deal","dealt","debug","debug!","debug.","debug...","debug:","debugg","debugger.","debugger:","debuggin","debugging.","decid","decim","decimal)","decimal)?","decimal,","decimal.","decimal:","declar","decod","decompil","deconstruct","decrement","decremented.","deep","deeper","deeper.","default","defend","defer","defin","definit","deleted.","deliber","deliv","demand","demonstr","denied.","denot","depend","derefer","deriv","derived.","describ","descriptor","design","designs,","desir","desire!","desktop","despit","destin","destination)","destroy","destruct","detail","details.\"","detect","determin","dev","develop","develop,","development,","development.","devic","device,","device.","df","dh","dh,","dhcp,","di","di,","diagram","diagram:","dial","dialogues.","differ","differently.","digest","digit","digit.","digits,","digits.","dinosaur","diod","direct","directli","directori","disa","disabl","disas,","disas.","disas:","disassembl","disassemble.","disassemble:","disassembled.","disassembler,","disassembler/debugg","disassembly,","disassembly.","discourag","discuss","discussed.","discussing.","disk","disk).","disk.","dispatch","display","displayed.","distinct","distinction.","dive","divid","divis","dl","dns,","do","do.","do:","do?","document","document.","does.","doing).","doing.","dollar","domain.","domin","don't","done","don’t","door","doubl","double.","doubles.","dove","down","down,","down.","down:","download","downward","downward.","dozen","dq","dq,","dr","dramat","draw","drones,","ds","ds,","ds:","dsl,","due","dump","duplic","durat","dure","dw","dw,","dword","dx","dx,","dynam","e","ea","each","each.","ear","earli","earlier","earth","easi","easier","easili","easily.","eax","eax,","eax.","eax:","eb","eb.","ebook","ebp","ebp.]","ebp:","ebx","ebx,","ebx.","ebx:","echo","echoed,","echo’","ecx","ecx,","ecx.","ecx:","edi","edi,","edi.","edi:","edit","editor","editor.","editor]","edx","edx:","effect","effici","effort","eflag","eight","einstein","eip","eip,","either.","electr","electrod","electron","element","element,","elementari","elf","elf32","elf64","elf_i386","else,","else.","email,","emb","embark","embed","emerg","emit","emphas","employ","empty.","emul","emulator.","enabl","encoding,","encourag","encryption.","end","endian","endian,\"","endian?","endl","endl.","enemi","engag","engin","engineer,","engineer.","engineering,","engineering.","engineering?","engineers!","enorm","enough","enough.","ensur","enter","enter,","enter.","entir","entirety.","entri","entries.","environ","environment,","environment.","environments.","equal","equal,","equal.","equival","equivalent.","eras","error","error).","error.","es","es,","es:","esi","esi,","esi:","esp","esp,","esp.]","esp:","essenc","essenti","establish","etc","etc.","etc...","ethernet","ethernet,","ethic","evalu","even","event","everyon","everyone!","everyth","everywher","evolv","ex:","ex:———————","exact","exactli","examin","examination,","examination.","examinations,","exampl","example,","example.","example1","example1.cpp","example10","example10.cpp","example2","example2.cpp","example3","example3.cpp","example4","example4.cpp","example5","example5.cpp","example6","example6.cpp","example7","example7.cpp","example8","example8.cpp","example9","example9.cpp","example:","examples).","examples:","except","exceptions).","excess","excit","execut","executable.","execute.","executed,","executed.","executes.","executing,","execution.","exercis","exist","exist.","existence.","exists,","exists.","exit","exit.","exit.o","exits,","expand","expandtab","expans","expect","expected.","experi","experienc","explain","explained.","explanatory.","explicitli","explor","expon","express","extend","extens","extern","extra","extract","extrapol","extrem","ey","f","f1cd","f5","face","facet","fact","fail","failur","fall","fals","false.","false;","famili","familiar","far","far,","far.","fashion","fashion.","fashions:","fast.","faster","fastest","father","faucet","fault","fault.","fe","fear!","feather","featur","feature.","feed","feed.","feel","felt","fetch","few","ff","ffffd040","fi","field","fifth","figur","file","file!","file.","file]","files,","files.","final","finally,","find","find_smallest_valu","finish","finished,","finishes.","fire","firm","firmli","firmwar","firmware!","first","first,","first.","fit","five","fix","flag","flag).","flag.","flags,","flags.","flash","flat","flavor","flexibl","float","flow","flow,","flow.","flows.","flush","fmov","focu","focus","folder","folks!","follow","following.","following:","follows.","follows:","for.","forc","foreign","forever!","forever.","form","form.","format","format.","formula","forth","forth.","forward","forward.","found","foundat","four","fourth","fp","fraction","frame","frame.","framework","framework.","free","free!","free()","freed","freed,","freeli","frequencies).","frequent","fresh","friendli","frustrat","fs","fs:","ftp,","full","fulli","fun","fun!","function","function,","function.","functionality.","functions.","fundament","further","further.","futur","g++","ga","gain","game","garbag","gate","gateway","gather","gave","gb","gcc","gdb","gdb,","gdb.","gdb:","gdt","gener","generated.","genesi","gentlemen,","georg","get","get.","getline()","gfr204sd","ghex","girls,","git","gitbook","give","given","glad","global","globally,","globe.","gnu","go","go!","goal","god'","goe","good","googl","govern","gp","gpr","gpu","grab","grabber","graduat","grandfath","graph","graph.","graphic","grasp","great","great.","greater","greatest","green","grep","greyscal","groundwork","group","grow","grow.","gs","gs:","guest","gui","guid","guy","h","h.","hack","hack!","hack.","hack:","hacked!","hacked).","hacker","hacking.","had:","half","hand","handi","handl","handle,","handling.","hang","happen","happen,","happen.","happen?","happening.","happens!","happens,","happens.","happi","hard","hardcor","harder","hardwar","hardware.","have","hd","head","header","heap","heap,","heap.","heart'","heck","heck!","held","hell","hell!","hello","help","help!","help.","here","here!","here,","here.","here:","here?","hex","hex,","hex.","hexadecim","hexadecimal!","hexadecimal),","hexadecimal,","hexadecimal.","hexadecimal:","hidden","hide","high","higher","highest","highli","hijack","hit","hit.","hold","home","homework","homework:","hood","hood.","hood.”","hope","hopefulli","hopper","host","hot","hours,","hous","house!","household,","http,","http://ref.x86asm.net/coder64.html","http://www.asciitable.com","http://www.ubuntu.com/download/desktop","https,","https://github.com/mytechnotalent/hacking\\_c","https://github.com/mytechnotalent/revers","https://github.com/radareorg/radare2","https://github.com/radareorg/radare2.git","https://www.adafruit.com/product/4292","https://www.balena.io/etch","https://www.linkedin.com/pulse/assembl","https://www.offens","https://www.raspberrypi.org.","https://www.raspberrypi.org/wp","https://www.simplified.guide/ubuntu/instal","https://www.sparkfun.com/products/16498","https://www.virtualbox.org/wiki/download","https://www.walmart.com/ip/iogear","https://youtu.be/jquf9bdm4iu","human","hundr","hypothesis.","i/o","i/o.","ia","ia32","icmp,","icon","id","id:","ida","idea","ident","identif","identifi","if:","ignor","ignored.","illustr","illustrate.","illustrate:","imag","image…","imagin","immedi","impact","implement","implemented)","impli","implicitli","import","important?","importantli","in!","in,","in.","inc","includ","incom","increas","increment","indent","index","indic","indirect","indirect_addressing_with_regist","indirect_addressing_with_registers.","indirect_addressing_with_registers.o","individu","infect","infinit","info","inform","information.","infrared,","infrastructur","init","initi","initially.","input","input.","input/output","inputs.","insane,","insert","insid","inspection.","instal","installed.","instanc","instead","instead.","instruct","instruction,","instruction.","instructions!","instructions,","instructions.","instructions]","instruction’","int","int,","integ","integer?","integers.","integr","intel","intel64.","intend","intent","interact","interconnect","interest","interfac","intermedi","intern","internet","interpret","interrupt","interrupt.","intervals.","intro","introduc","introduct","intrusion.","invert","involv","io","iopl:","iostream","iostream,","iot","ip","iphon","ipx,","iret","is,","is.","is.get(null))","is?","isdn,","ishack","iso","issu","issue.","istream","it!","it'","it,","it.","it:","it?","itself","itself.","it’","j","java","java,","javaee.","javascript,","je","jessie,","jmp","jne","job","join","journey","journey!","journey,","jude'","jump","junk","jvm","k","kali","kali@kali:~/documents/0x02_asm_64_basicio$","kali@kali:~/documents/0x03_asm64_char_primitive_datatype$","kali@kali:~/documents/0x04_asm64_boolean_primitive_datatype$","kali@kali:~/documents/0x05_float_primitive_datatype$","keep","kept","kernel","kernel.","kernel.img","kevin","key","key.","keyboard","keyboard.","keylogg","keystrokes,","keyword","kind","kind,","kind.","kingdom","kit","kitchen","knee","know","knowledg","known","l","l,","lab","label","label.","labs.","lack","ladi","laid","lan","languag","language,","language.","language?","languages.","larg","larger","largest","last","later","later.","latest","launch","launcher","layer","layers.","layout","lazi","ld","ldr","ldr,","lea","leak.","learn","learn?","leav","lectur","lecture'","lecture)","lecture,","lecture.","lectures.","left","left,","left.","legaci","legit!","legit!\".","length","length)","length,","length.","lengthi","lengths!","less","less.","lesson","lesson,","lesson.","lessons.","let","let'","letter","letter.","let’","level","level,","level.","librari","libraries.","life","lifo","like.","like:","liking.","limit","line","line,","line.","line:","line]","link","link)","link.","link:","linkedin","linkedin.","linker","linker:","linux","linux!","linux)","linux,","list","liter","littl","live","load","loaded,","loaded.","loader","loader.","loads.","local","local.","local_10h","local_1h","local_4h","local_8h","locat","locate.","location.","location:","locations.","lock","logic","logic:","login","login,","long","long.","longer","look","look.","lookup","loop","loop.","lost","lot","lottery_numb","low","lower","lowercas","lowest","lpddr2","lr","lr_demo","lr_demo.","lr_demo.o","lsb","lsl","luxuri","m","m32","mac","mac,","mac.","machin","machine!","machine.","machines.","macos,","made","magic","main","main()","main(void)","main+12","main+12.","main+16","main+16.","main+17","main+20","main+24","main+28","main+28.","main+36.","main+68","main+72.","main,","main.","main:","major","make","malici","malloc()","malloc(),","malwar","malware,","malware.","manag","mani","manipul","manipulate.","manipulated.","manipulation.","mantissa","manual","manually.","map","mapped.","market","master","masteri","masters,","match","materi","material.","math","mathemat","matter","matter?”","maximum","me!","me!”","mean","mean:","means:","meantime,","measur","measure.","mechan","media","media.","medium","meet","memor","memori","memory)","memory,","memory.","memory]","mental","mention","mess","messag","message,","metal","metal.","method","micro","microcontrol","microprocessor","microprocessor.","microprocessors.","microscop","microsd","microsoft,","mid","middl","migrat","million","mind","mind,","mine?","mini","minim","minimum","minut","minutes.","mkdir","mmc","mmx","mnemon","mobi","mod.","mode","mode,","mode.","model","model.","modern","modes,","modifi","moment","moment.","month","more","more.","more...","more:","motherboard.","motiv","mouthful,","mov","move","move,","movement","moving_data_between_memory_and_regist","moving_data_between_memory_and_registers.","moving_data_between_memory_and_registers.o","moving_data_between_registers_and_memori","moving_data_between_registers_and_memory.","moving_data_between_registers_and_memory.o","moving_immediate_dat","moving_immediate_data","moving_immediate_data.","moving_immediate_data.asm","moving_immediate_data.o","movk","movl","movz","ms","much","multi","multidimension","multilib","multipl","multitud","muscl","my_bool","my_char","my_doubl","my_float","my_funct","my_var","mynewnumb","mynewnumber.","mynumb","mynumber.","mynumber;","mynumbers","n","n.","name","names,","names.","names;","namespac","nano","nano.","nasm","nasm.","nat,","nativ","natur","necessari","necessarili","need","needed,","needed.","needs.","neg","negat","negative.","nest","netbios,","netwid","network","network.","networking.","networks,","neumann","never","never!","new","newbi","newlin","next","next.","nibbl","nibble.","nice","no,","no_return","node","non","none","nonetheless","nonetheless,","nop","normal","noroot","not,","not.","notat","note","noth","notic","notion","now","now.","now?","nt:","null","number","number,","number:","numbers,","numbers.","numer","o","o0","obj","objdump","objdump,","object","object.","obtain","obtained.","obviou","obvious","occupi","occur","occurr","occurs,","occurs.","odd.","of.","of:","off.","offer","offici","offset","ok","ok!","ok,","ok.","ol","old,","older","ollydbg","on","on!","on.","on?","on?”","on]","onc","one.","one]","onlin","onto","ood","op","opcod","opcodes.","open","open.","oper","operand","operands.","operates.","operation.","operation:","operations)","operations.","operator.","opportun","opposit","optim","option","optional:","or,","order","order.","organ","origin","originated.","os","os'","os.","oscil","osi","other.","others.","otherwis","ourselv","out","out).","out.","outcome.","output","output!","output)","output.","over","overflow","overflow,","overflow.","overflows.","overlap","overlap.","overload","overwhelm","overwhelming.","overwrit","own","p","pace","packag","packet","pad","page","paging.","painfulli","painstak","param","paramet","pariti","pars","part","partial","particular","particularli","pass","pass,","passion","password","past","past,","patch","path","patienc","patient","pattern","pay","payload.","pc","pdf","pe","peek","pend","pending.","penetr","peopl","people,","per","percentag","perfectli","perform","perform.","performed.","period","period.","peripherals.pdf","perman","persever","person","perspect","perspective:","pf","pf:","phase","phase.","phenomenon.","phone","phone,","physic","pi","pick","pictur","picture.","pid","piec","pin","pin,","pin.","pins.","pipelin","pipeline.","pizza","place","place.","places)!","plainli","planet","plate","platform","platform,","platform.","pleas","please!","please.","plu","point","point,","point.","pointer","pointer!","pointer,","pointer.","pointers!","pointers.","pointers?","pop","pop.","pop3,","popular","port","portabl","portion","portion.","posit","possess.","possibl","possible.","possible?","post","potenti","power","power,","ppppp","practic","pre","preced","precis","precision.","prefix","preprocessor","presenc","present","present.","preserv","press","pretend","pretti","prevent","previou","previous","primarili","primit","primitive.","print","printabl","printf","prior","privaci","privileg","pro","proactiv","probabl","problem","proce","procedur","procedures.","process","process.","processor","processor,","processor.","processors.","produc","profession","profile.","program","program!","program,","program.","program:","programm","programs.","progress","progress.","project","prologu","prompt","prompt.","proof","proper","properli","properly.","properti","protect","protection.","protocol","provid","ps","pseudo","ptr","public","publish","pull","puls","purchas","pure","purpos","purpose!","purpose.","purpose?","purposes,","purposes.","pursu","push","put","puzzl","px","python","python,","q","qemu","qq","quad","quadword","queri","quest.","question","question.","questions,","questions.","quiet","quit","quit.","quot","quotes.","qword","qword,","r","r,","r.","r0","r0)","r0.","r1","r1!","r1,","r1.","r10","r10,","r11","r11,","r11.","r12","r13","r14","r14,","r14.","r15","r15,","r15.","r2","r2,","r2.","r3","r3(100","r3.","r4","r4(100","r4,","r4.","r5","r5!","r5.","r6","r7","r7.","r8","r8w,","r9","r9,","r9w","r:","race","radar","radare2","radare2'","radare2.","radare:","rais","ram","ram,","ram.","ran","ran,","random","rang","ransomwar","rapid","rare","raspberri","raspberrypi","raspbian","raw","rax","rax,","rax.","rbp","rbp.","rbx","rbx,","rbx.","rcx","rdi","rdi,","rdi.","rdx.","re","re'","re.","reach","react,","read","read,","readabl","readable.","reader","reader/writ","real","real!\"","realiti","reality.","realli","realloc()","realm","reason","reboot.","recap","recap,","recap.","receiv","recent,","record.","redefin","reduc","reexamin","refer","referenc","references.","reflect","refresh","refresher,","reg","regard","region","region.","regist","register!","register)","register).","register,","register.","registers!","registers,","registers.","registers.)","registers:","registers;","registers]","registry.","regret","regularli","rel","relat","relationship","relay","releases.","relev","reli","reliabl","religion","remain","remaind","rememb","remember,","remot","remov","repeat","repeated.","replac","replic","repo,","repres","represent","representation.","representations,","request","requir","required,","rerun","research","research,","reserv","reset","resid","resides.","resist","resources.","respect","respectively)","respectively.","respond","respons","rest","restart","restor","restrict","result","result.","result?","results.","resum","retailers.","retriev","return","return.","returning.","returns,","reveal","revers","reversed.","reversing,","review","review.","revis","revisit","revolut","revolution\".","revolv","rf","rf:","rflags,","right","right.","rightaway!","risc","risc.","road","road.","robust","rol","rol!","role","rom","room","root","rootkit","ror","ror!","rotat","roughli","rout","routin","routine.","routines.","routing.","row","row.","rpi","rsb","rsbs,","rsc.","rscs,","rsi","rsi.","rsp","rule","run","run.","run:","running.","runtim","runtime.","s","s0","s0,","s0.","s0?","safe","safer.","said,","same","sandbox","sausag","save","saved.","saw","saying:","sbc,","sbcs,","scan","scarewar","scari","scenario","scenarios.","scenes.","schedul","scienc","scientif","scope.","screen","screen!","screen.","screen:","sd","second","second,","secretli","section","section)","section.","section:","sections:","sector","sector,","sector.","secular","secur","security.","security.com/kali","see","see.","see:","seeing.","seek","seem","seen","segment","segment!","segment).","segment,","segment.","segments.","select","select.","self","sell","semicolon","semiconductor","semiconductor.","send","send.","sens","sensit","sensitive.","sent","sentenc","separ","sequence.","sequences.","sequenti","seri","serial","series,","series.","server","server.","servi","servic","session","set","set!","set,","set.","setup","seventeen.","sever","sexy!","sf","sf:","shall","share","shell.","shift","shiftwidth","shl","shl!","short","short,","shortly!","show","showcas","shown","shr","shr!","shrink","si","si,","si.","side","sign","signal","signatur","signature,","signatures,","signatures.","signific","significantli","silicon","similar","similar.","simpl","simple,","simple.","simplest","simpli","simplifi","simply,","singl","sit","situat","six","sixteen.","sixth","size","size.","sizeof","sizeof(mynumber);","sizes,","sizes.","skill","skip","slice","slide","slider","slider,","slightli","slow","slower","slowli","small","smaller","smallest","smart","smartindent,","smb,","smoke","smtp,","snail","snapshot","sneak","snippet","so,","so.","so...","soap","soc","societi","socket","socks,","softwar","software,","software.","sole","solid","solut","someday","someon","someth","something.","sometim","somewher","soon","sophist","sort","sourc","source.","sources.","sp","sp.","sp_demo","sp_demo.","sp_demo.o","space","space,","space.","spam","spawn","speak","special","specif","specifi","speed","speed.","spend","spent","spin","spit","split","spoke","spring","squar","ss","ss:","sse","ssh","ssl,","sstream","stack","stack,","stack.","stage","stage.","stand","standard","start","start.","start.elf","start:","started.","started...","state","stated,","statement","statement.","static","statu","status,","status=0x0","stay","std","std::cin","std::cout","std::endl;","std::w","std;","stdin","stdin.","stdio","stdout","stdout.","step","step,","step.","step:","stick","still","stop","storag","storage.","store","stored.","stores.","str,","str.hello_world","straight","strang","strd","stream","stream,","stream.","street,","string","string,","string.","stringstream","strong","struct","structur","struggl","stuck","stuck.","studi","stuff!","stump","sub","sub,","sub.","sub.o","sub:","subdivid","subregist","subroutin","subroutines.","subs,","substitut","subtract","subtracted.","subtraction!","subtraction:","success","success!","successful.","successfulli","successfully.","successfully:","such","such.","such.,","such:","sucks!”","sudo","suffici","suffix","suggest","suit","sum,","support","sure","surround","suspect","switch","switch.","switches,","switches.","sym.imp.put","sym.main'","sym.main.","symbol","symbols.","syntax","syntax,","syntax.","syntax:","sys/install.sh","sys/user.sh","sys_exit","sys_exit.","sys_writ","syscal","syscall.","system","system,","system.","systems!","systems,","systems.","systems?","tab","tabl","table.","table:","tablet","tabstop,","tackl","tact.","tada!","tag","take","takeaway","taken","taken.","talk","target","task","task.","tasks.","tcp,","teach","technic","techniqu","techniques.","technologies.","tell","telnet,","temporari","temporarili","term","termin","terminal!","terminal.","terminal:","terminals.","test","test.asm","test.c","test.o","text","textbook","tf:","thank","that.","that?","that’","them.","themselv","then...","theori","there!","there.","therefor","therefore,","thing","thing!","thing.","things.","things?","things?”","think","third","this!","this,","this.","this:","this?","thoma","thorough","those","though","thoughts,","thousand","thread","threat","threat.","threats.","three","through","through.","throughout","throw","thu","thumb","thumb.","ti","tightli","time","time!","time,","time.","times.","times:","timezon","tint","tls,","to,","to.","today","today'","today,","today.","today?","today’","togeth","together.","tomorrow!","took","tool","tool.","toolkit","top","top.","topic","total","touch","toward","town.","trace","track","tradit","traffic.","train","transistor","transistor.","transistors.","translat","transmit","transpir","transpired.","trap","treat","tree","trend","tri","trick","tricky.","trigger","trivial","true","true,","true.","true;","truli","tune","tuned!","tuned.","turn","tutori","tutorial,","tutorial.","tutorials,","tutorials.","tutorial’","tv","twice","twice,","two","two'","type","type.","type:","typic","typing,","typing.","typing:","u","ubuntu","ubuntu.","udp,","uefi","ultim","ultimately.","um","unchang","unclear","under","understand","understand.","understand?","understanding.","understands.","unfortun","uniniti","uniqu","unit","units)","unix","unlik","unlimit","unmap","unmapped.","unreach","unreachablefunct","unreachablefunction.","unreliable.","unsign","unstabl","until","up","up,","up.","updat","updates,","upgrad","upgrades.","upon","upto","upward","upward.","us","usag","usage.","usb,","used.","useless","user","username.","users.","usual","util","v","va","val1","val1;","val2","val2;","valid","valid.","validation.","valu","value!","value,","value.","value:","values,","values.","var","variabl","variable.","variables!","variables.","variable”","varianc","varieti","variety.","variou","vary.","vast","vector","veri","verif","verifi","versa.","version","versions.","very,","vi","vice","video","view","view.","vif:","vim","vim.","vip:","virtual","virtualbox","viru","visit","visual","vital","vlan,","vldr","vm","vm.","vm:","vmware","void","voila!","voltag","volumes:","von","vs","vulner","vv","w","w0","w0,","wa","wait","wait!","wait,","walk","wan","want","want!","want,","want.","wanted,","was:","wasn't","wast","watch","water","wave","way","way!","way.","way:","ways.","web","websit","week","week!","week'","week.","weeks/month","week’","welcom","well","well,","well.","well...","went","what!","what'","whatev","whatsoev","whenev","whether","whew,","white","whitespac","whitespace,","whole","whose","why...\"","wi","wide","wide.","wikipedia","win","win.ex","wind","window","window.","windows,","windows.","wire","wire.","wireshark","with.","within","without","woah!","won't","wonder","woohoo!","word","word.","word:","word]","words,","words.","work","work!","work,","worked!","workflow","workings.","works,","works.","world","world!","world!\"","world!\".","world!'","world!`","world!”","world\"","world,","world.","world?","world\\n'","world”","worm","worri","wrap","wrap_up","write","write,","writer/15522266","written","written,","wrong","wrong.","wrote,","wx","x","x/1c","x/xb","x64","x86","x86'","x86,","x86.","x86/x64","x87","xmmword","xor","xor,","y","year","yellow","yes,","yes_no","yet.","yield","ymmword","ymmword.","you'r","you,","you.","yourself","yourself.","youtub","yy","z","zero","zero,","zero.","zeros.","zf","zf:","zoom","{","|","||","}","–","–32","—","‘7’","‘:wq’","‘esc’","‘hello","‘i’","‘i’.","‘n’","‘n’.","‘n’;","‘y’","‘y’.","“2017”","“charact","“constant”","“hack","“hello","“i’m","“n”","“ok","“so","“well","“whi","−","−2,147,483,648","♡"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"\n    Reverse Engineering For Everyone!\n\n\n\n    — by\n    \n        @mytechnotalent\n    \n\n\n\n    \n        \n    \n        \n        \n    \n    \n        \n    \n\n\n\n    Wait, what's reverse engineering?\n\n\n    Wikipedia defines it as:\n    \n        Reverse engineering, also called backwards engineering or back engineering, is the process by which an artificial object is deconstructed to reveal its designs, architecture, code, or to extract knowledge from the object. It is similar to scientific research, the only difference being that scientific research is conducted into a natural phenomenon.\n    \n    Whew, that was quite a mouthful, wasn't it? Well, it is one of the main reasons why this tutorial set exists. To make reverse engineering\n    \n        as simple as possible.\n    \n\n\n    \n\n\n    This comprehensive set of reverse engineering tutorials covers x86, x64 as well as 32-bit ARM and 64-bit architectures. If you're a newbie looking to learn reversing, or just someone looking to revise on some concepts, you're at the right place. As a beginner, these tutorials will carry you from nothing upto the mid-basics of reverse engineering, a skill that everyone within the realm of cyber-security should possess. If you're here just to refresh some concepts, you can conveniently use the side bar to take a look at the sections that has been covered so far.\n\n\n    You can get the entire tutorial set in PDF or MOBI format. All these ebook versions will get updated automatically as new tutorials will be added. \n\n\n    Download here: [ PDF | MOBI ]\n\n\n\n    \n        Gitbook crafted with ♡ by\n        \n            @0xInfection\n        \n    \n"},"pages/x86-course.html":{"url":"pages/x86-course.html","title":"x86 Course","keywords":"","body":"\n    The x86 Architecture\n\n\n    Let's dive in rightaway!\n"},"pages/part-1-goals.html":{"url":"pages/part-1-goals.html","title":"Part 1: Goals","keywords":"","body":"Part 1: Goals\nEssential to the discussion of basic reverse engineering is the concept of modern malware analysis. Malware analysis is the understanding and examination of information necessary to respond to a network intrusion.\nThis short tutorial will begin with the basic concepts of malware reverse engineering and graduate to an entry-level basic examination of Assembly Language.\nThe keys to the kingdom so to speak are rooted in the break-down of the respective suspected malware binary and how to find it on your network and ultimately to contain it.\nUpon full identification of the files required for deeper analysis, it is critical to develop signatures to detect malware infections throughout your network whether it be a home based LAN or complex corporate WAN to which malware analysis is necessary to develop host-based and network signatures.\nTo begin with the concept of a host-based signature, we need to understand that these are utilized to find malicious code in a target machine. Host-based signatures are also referred to as indicators which can identify files created or edited by the infected code which can make hidden changes to a computers registry. This is quite in contrast with antivirus signatures because these concentrate on what the malware actually does rather than the make-up of the malware which makes them more effective in finding malware that can migrate or has been removed from the media.\nIn contrast, network signatures are used to find malicious code by examining network traffic. It is important to note such tools as WireShark and the like are often effective in such analysis.\nUpon identification of these aforementioned signatures, the next step is to identify what the malware is actually doing.\n\nIn our next lesson we will discuss techniques of malware analysis.\n"},"pages/part-2-techniques.html":{"url":"pages/part-2-techniques.html","title":"Part 2: Techniques","keywords":"","body":"Part 2: Techniques\nThere are two basic techniques that you can employ when analyzing malware. The first being static analysis and the other being dynamic analysis.\nStatic analysis uses software tools to examine the executable without looking at the actual decompiled instructions in Assembly. We will not focus on this type of analysis as we are going to focus on actual disassembled binaries instead.\nDynamic analysis uses disassemblers and debuggers to analyze malware binaries. The most popular tool in the market today is called IDA which is a multi-platform, multi-processor disassembler and debugger. There are other disassembler/debugger tools as well on the market today such as Hopper Disassembler, OllyDbg and many more.\nA disassembler will convert an executable binary written in Assembly, C, C++, etc into Assembly Language instructions that you can debug and manipulate.\nReverse engineering is much more than just malware analysis. At the end of our series, our capstone tutorial will utilize IDA as we will create a real-world scenario where you will be tasked by the CEO of ABC Biochemicals to secretly try to ethically hack his companies software that controls a bullet-proof door in a very sensitive Bio-Chemical lab in order to test how well the software works against real threats. The project will be very basic however it will ultimately showcase the power of Assembly Language and how one can use it to reverse engineer and ultimately provide solutions on how to better design the code to make it safer.\nIn our next lesson we will discuss various types of malware.\n"},"pages/part-3-types-of-malware.html":{"url":"pages/part-3-types-of-malware.html","title":"Part 3: Types Of Malware","keywords":"","body":"Part 3: Types Of Malware\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nMalware falls into several categories of which I will touch briefly upon below.\nA backdoor is malicious code that embeds itself into a computer to allow a remote attacker access with very little or sometimes no authority to execute various commands on any respective local computer.\nA botnet allows an attacker access to a system however receive instructions not from one remote attacker but from a command-and-control server to which can control an unlimited amount of computers at the same time.\nA downloader is nothing more than malicious code that has only one purpose which is to install other malicious software. Downloaders are frequently installed when a hacker gains access to a system initially. The downloader then installs additional software to control the system.\nWe find information access malware which gathers information from a computer and sends it directly to a host such as a keylogger or password grabber and usually used to obtain access to various online accounts that can be very sensitive.\nThere are malicious programs that launch other malicious programs which use non-standard options to get increased access or a greater cloaking/hiding technique when penetrating a system.\nOne of the most dangerous forms of malware is the rootkit which hides the existence of itself and additional malware from the user which makes it extremely hard to locate. A rootkit can manipulate processes such as hiding their IP in an IP scan so that a user may never know that they have a direct socket to a botnet or other remote computer.\nScareware is used to trick a user into purchasing additional software to falsely protect a user when there is no real threat whatsoever that exists. Once a user pays to have the tricked software removed from the computer it then can stay resident and later emerge in an altered form.\nThere are also various kinds of malware that send spam from a target machine which generates income for the attacker by allowing them to sell various services to other users.\nThe final form of malware is that of a traditional worm or virus which copies itself and goes after other computers.\nThis is the end the road for now regarding our discussion of malware because we first need to go back to the beginning and understand how a computer works at it's base level.\nIn our next lesson we will begin our long journey into x86 Assembly Language. In order to truly understand the very basics of reverse engineering and malware we need to over the next several months take a deep dive into the core and build our way up.\n"},"pages/part-4-x86-assembly-intro.html":{"url":"pages/part-4-x86-assembly-intro.html","title":"Part 4: x86 Assembly Intro","keywords":"","body":"Part 4: x86 Assembly Intro\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLadies and Gentlemen, boys and girls, children of all ages! We are about to embark on a journey that will change your life forever!\nThere is vast material to cover to get a good understanding of Assembly Language and why it is important to understand the basics.\nThe first question we must answer is what is x86 Assembly Language to which the answer is a family of backward-compatible Assembly Languages which provide compatibility back to the Intel 8000 series of microprocessors. x86 Assembly Languages are used to produce object code for the aforementioned series of processors. It uses mnemonics to represent the instructions that the CPU can execute.\nAssembly Language for the x86 microprocessor works in conjunction with various operating systems. We will focus on Linux Assembly Language utilizing the Intel syntax in addition to learning how to program in C to which we will disassemble the source code an analyze the respective Assembly.\nx86 Assembly Language has two choices of syntax. The AT&T syntax was dominant in the Unix world since the OS was developed at AT&T Bell Labs. In contrast, the Intel syntax was originally used for the documentation of the x86 platform and was dominant in the MS-DOS and Windows environments.\nFor our purposes, when we are ultimately disassembling or debugging software, whether it be in a Linux or Windows environment, we will see the Intel syntax in large measure. This is essential whether we are examining a Windows binary in PE format or a Linux binary in ELF format. More on that later in this tutorial.\nThe main differences between the two is in the AT&T syntax, the source comes before the destination and in the Intel syntax, the destination comes before the source. We will discuss this in more detail later in the tutorial.\nBefore you run for the door and regret embarking on this journey, remember, some basic context helps to which we will develop throughout our quest. Many of these topics may be confusing at this point which is perfectly normal as we will develop them in time.\nWe will focus on Linux Assembly because Linux runs on a variety of hardware and is capable of running devices such as a cell phone, personal computer or a complex commercial server.\nLinux is also open source and there are many versions. We will focus on Ubuntu in our demonstrations which can be freely obtained. In contrast, the Windows operating system is owned and controlled by one company, Microsoft, to which all updates, security patches and service patches come directly from them where Linux has millions of professionals providing the same absolutely free!\nWe will also focus on a 32-bit architecture as ultimately most malware will be written for such in order to infect as many systems as possible. 32-bit applications/malware will work on 64-bit systems so we want to understand the basics of the 32-bit world.\nIn our next lesson we discuss the binary number system. Grab your cup of coffee you are going to need it!\n"},"pages/part-5-binary-number-system.html":{"url":"pages/part-5-binary-number-system.html","title":"Part 5: Binary Number System","keywords":"","body":"Part 5: Binary Number System\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary numbers are what define the core of a computer. A bit within a computer is either on or off. A bit has either electricity turned on to it or it is absent of such. We will dive into this deeper in future tutorials. \nPuzzled and confused, where do we go from here?\nHave no fear! The binary number system is here! It is important to understand that in binary, each column has a value two times the column to its right and there are only two digits in the base which happen to be 0 and 1.\nIn decimal, base 10, say we have the number 15 which means (1 x 10) + (5 x 1) = 15 therefore the 5 is the number times 1 and the 1 is that number times 10.\nBinary works in a similar fashion however we are now referring to base 2. That same number in binary is 1111. To illustrate: \n\n\nBinary numbers are important because using them instead of the decimal system simplifies the design of computers and related technologies. The simplest definition of the binary number system is a system of numbering that uses only two digits, as we mentioned above, to represent numbers necessary for a computer architecture rather than using the digits 1 through 9 plus 0 to represent such.\nIn our next lesson we discuss the hexadecimal number system. It only gets more exciting from here!\n"},"pages/part-6-hexadecimal-number-system.html":{"url":"pages/part-6-hexadecimal-number-system.html","title":"Part 6: Hexadecimal Number System","keywords":"","body":"Part 6: Hexadecimal Number System\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nNow that we are binary masters, it's time to tackle the numbering system of numbering systems!\nWe learned in binary that each number represents a bit. If we combine 8 bits, we get a byte. A byte can be further subdivided into its top 4 bits and its low 4 bits. A combination of 4 bits is a nibble. Since 4 bits gives you the possible range from 0 - 15 a base 16 number system is easier to work with. Keep in mind when we say base 16 we start with 0 and therefore 0 - 15 is 16 different numbers.\nThis exciting number system is called hexadecimal. The reason why we use this number system is that in x86 Assembly it is much easier to express binary number representations in hexadecimal than it is in any other numbering system.\nHexadecimal is similar to every other number system except in hexadecimal, each column has a value of 16 times the value of the column to its right. The fun part about hexadecimal is that not only do we have 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 we have A, B, C, D, E and F and therefore 16 different symbols.\nLets look at a simple table to see how hexadecimal compares to decimal.\n      \nOk I see the smoke coming out of your ears but its ok! In decimal, everything is dealt with in the power of 10. Let's take the number 42 and examine it in decimal:\n2 x 10 ^ 0 = 2\n4 x 10 ^ 1 = 40\nRemember 10 to the 0 power is 1 and 10 to the 1st power is 10, therefore, 2 + 40 = 42.\nGrab your coffee, here comes the fun stuff!\nIf we understand that decimal is a base 10 number system, we can create a simple formula where b represents the base. In this case, b = 10.\n(2 * b ^ 0) + (4 * b ^ 1)\n(2 * 10 ^ 0) + (4 * 10 ^ 1) = 42\nIn binary, 42 decimal is 0010 1010 binary as follows:\n0 x 2 ^ 0 = 0\n1 x 2 ^ 1 = 2\n0 x 2 ^ 2 = 0\n1 x 2 ^ 3 = 8\n0 x 2 ^ 4 = 0\n1 x 2 ^ 5 = 32\n0 x 2 ^ 6 = 0\n0 x 2 ^ 7 = 0\n0 + 2 + 0 + 8 + 0 + 32 + 0 + 0 = 42 decimal\nIn hexadecimal, everything is dealt with in the power of 16. Therefore 42 in decimal is 2A in hexadecimal:\n10 * 16 ^ 0 = 10\n2 * 16 ^ 1 = 32\n10 + 32 = 42 decimal => 2A hexadecimal\nThis is the same as saying:\n10 * 1 = 10\n2 * 16 = 32\n10 + 32 = 42 decimal => 2A hexadecimal\nKeep in mind 10 decimal is equal to A hexadecimal and 2 decimal is equal to 2 hexadecimal. In our formula above when we deal with A, B, C, D, E or F we need to convert them to their decimal equivalent.\nLets take another example of F5 hexadecimal. This would be as follows:\n5 x 16 ^ 0 = 5\n15 x 16 ^ 1 = 240\n5 + 240 = 245 decimal => F5 hexadecimal\nLets look at a binary to hexadecimal table:\n\n   \nIt is important to understand that every hexadecimal number is 4 bits long or called a nibble. This will become critical when we are reverse engineering our C programs into Assembly.\nLets look at this another way. Lets work with some more hexadecimal numbers and convert them to decimal:\n\n\nTo re-emphasize F1CD as a simple conversion:\nD --- 13 x 1 = 13\nC --- 12 x 16 = 192\n1 --- 1 x 256 = 256\nF --- 15 x 4096 = 61,440\n13 + 192 + 256 + 61,440 = 61,901\nAddition in hexadecimal works as follows. From this point forward all numbers in hexadecimal will have a 'h' next to the number:\n        \nAnother example is as such:\n      \nA final add example is as such:\n\n\nWe will now focus on subtraction:\n\n\nYou are probably asking yourself why is this guy spending so much time going over so many different ways of learning this! The answer is that each of us learn a little different from the next. I wanted to show several representations of hexadecimal compared to decimal and binary to help put together the whole picture.\nIt is fundamental that you understand what is going on here in order to proceed any further. If you have any questions, please comment below and I will be more than happy to help!\nIn our next lesson we discuss switches, transistors and memory.\n"},"pages/part-7-transistors-and-memory.html":{"url":"pages/part-7-transistors-and-memory.html","title":"Part 7: Transistors And Memory","keywords":"","body":"Part 7: Transistors And Memory\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our last lesson, we took a very deep dive into the hexadecimal number system. I am going to keep this weeks lesson short so that you can re-read last weeks lesson. I can not emphasize how important it is to understand hexadecimal number conversions in addition to the ability to manually add and subtract them.\nIn the real world, we have calculators, in the real world we use the Windows operating system, in the real world professional reverse engineers use GUI debuggers like IDA Pro and others.\nThe question is, why am I not jumping right into the core of what real reverse engineers do? The answer is simple, one must have a deep respect and understanding of the machine in order to become great. We will never change the world without fully understanding it first. Patience and perseverance win the day.\nI focus on on Linux and console-based programming because most professional servers utilize Linux and therefore is the greatest threat of malware. Understanding Linux Assembly allows you to very easily grasp the library-choking portable executable format of Windows Assembly in a much deeper way.\nAs I step off the soap box, lets get back to the basics of computers so here we go!\nWhen we ask ourselves what is a computer one must go down to as about as basic as one can get.\nElectronic computers are simply made out of transistor switches. Transistors are microscopic crystals of silicon that use electrical properties of silicon to act as switches. Modern computers have what are referred to as field-effect transistors.\nLet's use an example of 3 pins. When an electrical voltage is applied to pin 1, current then flows between pins 2 and 3. When the voltage is removed from the first pin, current stops flowing between pins 2 and 3.\nWhen we zoom out a bit we see that there are also diodes and capacitors when taken together with the transistor switches we now have a memory cell. A memory cell keeps a minimum current flow to which when you put a small voltage on its input pin and a similar voltage on its select pin, a voltage will appear and remain on its output pin. The output voltage remains in its set state until the voltage is removed from the input pin in conjunction with the select pin.\nWhy is this important you ask. Very simply, the presence of voltage indicates a binary 1 and the absence of voltage indicates a binary 0 therefore the memory cell holds one binary digit or bit which is either 1 or 0 meaning on or off.\nIn our next lesson we will discuss bytes and words.\n"},"pages/part-8-bytes-words-double-words-etc.html":{"url":"pages/part-8-bytes-words-double-words-etc.html","title":"Part 8 - Bytes, Words, Double Words, etc...","keywords":"","body":"Part 8 - Bytes, Words, Double Words, etc...\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nMemory is measured in bytes. A byte is 8 bits. Two bytes are called a word and two words are called a double word which is four bytes (32-bit) and a quad word is eight bytes (64-bit).\nA byte is 8 bits and is 2^8 power which is 256. The number of binary numbers 8 bits in size is one of 256 values starting at 0 and going to 255.\nEvery byte of memory in a computer has its own unique address. Let's review the disassembled instructions for a simple hello world application in Linux by setting a breakpoint on the main function. We will use the GDB debugger:\n\n\nDon't worry if this does not make sense yet. The point of utilizing this example is to give you a sneak peek into our first program that we will examine in addition to learning about memory in a computer.\nBelow is an examination of the ESP register. Again, it is not critical that you understand what a register is or what ESP does. We simply want to see what a memory location looks like:\n \nWe see the memory location of 0xffffd040 which of course is in hexadecimal. We also see the value inside the ESP register which is 0xf7fac3dc which is also in hexadecimal.\nIt is important to understand that 0xffffd040 is 4 bytes and is a double word. As we learned in Part 6: Hexadecimal Number System, each hexadecimal digit is 4 bits long otherwise called a nibble. In 0xffffd040, lets look at the right most digit of 0. In this example, 0 (hexadecimal) is 4 bits long. If we look at 40 (in hexadecimal), we see that is a byte in length or 8 bits long. If we look at d040, we have two bytes or a word in length. Finally, ffffd040 is a double word or 4 bytes in length which is 32-bits long. The 0x at the beginning of the address just designates that is is a hexadecimal value.\nA computer program is nothing more than machine instructions stored in memory. A 32-bit CPU fetches a double word from a memory address. A double word is 4 bytes in a row which is read from memory and loaded into the CPU. As soon as it finishes executing, the CPU fetches the next machine instruction in memory from the instruction pointer.\nThose of you new to assembly have now had your first look. Don't get discouraged or frustrated if you do not know what is going on here. We will take our time and go through dozens of examples to break down each step in future lessons. What is important is that you take your time and examine what each lesson is discussing. Please always feel free to comment below with any questions.\nIn our next tutorial we will discuss the basics of x86 Architecture.\n"},"pages/part-9-x86-basic-architecture.html":{"url":"pages/part-9-x86-basic-architecture.html","title":"Part 9: x86 Basic Architecture","keywords":"","body":"Part 9: x86 Basic Architecture\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nA computer application is simply a table of machine instructions stored in memory to which the binary numbers which make up the program are unique only in the way the CPU deals with them.\nThe basic architecture is made up of a CPU, memory and I/O devices which are input/output devices which are all connected by a system bus as detailed below.\n\n\nThe CPU consists of 4 parts which are:\n1)Control Unit - Retrieves and decodes instructions from the CPU and then storing and retrieving them to and from memory.\n2)Execution Unit - Where the execution of fetching and retrieving instructions occurs.\n3)Registers - Internal CPU memory locations used a temporary data storage.\n4)Flags - Indicate events when execution occurs.\n\n\nWe will discuss 32-bit x86 so therefore a 32-bit CPU first fetches a double word (4 bytes or 32-bits in length) from a specific address in memory and is read from memory and loaded into the CPU. At this point the CPU looks at the binary pattern of bits within the double word and begins executing the procedure that the fetched machine instruction directs it to do.\nUpon completion of executing an instruction, the CPU goes to memory and fetches the next machine instruction in sequence. The CPU has a register, which we will discuss registers in a future tutorial, called the EIP or instruction pointer that contains the address of the next instruction to be fetched from memory and then executed.\nWe can immediately see that if we controlled flow of EIP, we can alter the program to do things it was NOT intended to do. This is a popular technique upon which malware operates.\nThe entire fetch and execute process is tied to the system clock which is an oscillator that emits square-wave pulses at precise intervals.\nIn our next tutorial we will dive deeper into the IA-32 Architecture with a discussion of the General-purpose Registers.\n"},"pages/part-10-general-purpose-registers.html":{"url":"pages/part-10-general-purpose-registers.html","title":"Part 10: General-purpose Registers","keywords":"","body":"Part 10: General-purpose Registers\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe general-purpose registers are used to temporarily store data as it is processed on the processor. The registers have evolved dramatically over time and continue to do so. We will focus on 32-bit x86 architecture for our purposes.\nEach new version of general-purpose registers is created to be backward compatible with previous processors. This means that code utilizing 8-bit registers on the 8080 chips will still function on today's 64-bit chipset.\nGeneral-purpose registers can be used to hold any type of data to which some have acquired specific use which are used in programs. Lets review the 8 general-purpose registers in an IA-32 architecture.\nEAX: Main register used in arithmetic calculations. Also known as accumulator, as it holds results of arithmetic operations and function return values.\nEBX: The Base Register. Pointer to data in the DS segment. Used to store the base address of the program.\nECX: The Counter register is often used to hold a value representing the number of times a process is to be repeated. Used for loop and string operations.\nEDX: A general purpose register. Additionally used for I/O operations. In addition will extend EAX to 64-bits.\nESI: Source Index register. Pointer to data in the segment pointed to by the DS register. Used as an offset address in string and array operations. It holds the address from where to read data.\nEDI: Destination Index register. Pointer to data (or destination) in the segment pointed to by the ES register. Used as an offset address in string and array operations. It holds the implied write address of all string operations.\nEBP: Base Pointer. Pointer to data on the stack (in the SS segment). It points to the bottom of the current stack frame. It is used to reference local variables.\nESP: Stack Pointer (in the SS segment). It points to the top of the current stack frame. It is used to reference local variables.\nKeep in mind each of the above registers are 32-bit in length or 4 bytes in length. Each of the lower 2 bytes of the EAX, EBX, ECX, and EDX registers can be referenced by AX and then subdivided by the names AH, BH, CH and DH for high bytes and AL, BL, CL and DL for the low bytes which are 1 byte each.\nIn addition, the ESI, EDI, EBP and ESP can be referenced by their 16-bit equivalent which is SI, DI, BP, SP.\nThis can be a bit confusing to someone who has not studied computer engineering however let me illustrate in the table below:\n\n\nEAX would have AX as its 16-bit segment and then you can further subdivide AX into AL for the low 8 bits and AH for the high 8 bits. The same holds true for EBX, ECX and EDX as well. EBX would have BX as its 16-bit segment and then you can further subdivide BX into BL for the low 8 bits and BH for the high 8 bits. ECX would have CX as its 16-bit segment and then you can further subdivide CX into CL for the low 8 bits and BH for the high 8 bits. EDX would have DX as its 16-bit segment and then you can further subdivide DX into DL for the low 8 bits and DH for the high 8 bits.\nESI, EDI, EBP and ESP can be broken down into its 16-bit segments as follows:\n\n\nESI would have SI as its 16-bit segment, EDI would have DI as its 16-bit segment, EBP would have BP as its 16-bit segment and ESP would have SP as its 16-bit segment.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with the Segment Registers.\n"},"pages/part-11-segment-registers.html":{"url":"pages/part-11-segment-registers.html","title":"Part 11: Segment Registers","keywords":"","body":"Part 11: Segment Registers\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe segment registers are used specifically for referencing memory locations. There are three different methods of accessing system memory of which we will focus on the flat memory model which is relevant for our purposes.\nThere are six segment registers which are as follows:\nCS: Code segment register stores the base location of the code section (.text section) which is used for data access.\nDS: Data segment register stores the default location for variables (.data section) which is used for data access.\nES: Extra segment register which is used during string operations.\nSS: Stack segment register stores the base location of the stack segment and is used when implicitly using the stack pointer or when explicitly using the base pointer.\nFS: Extra segment register.\nGS: Extra segment register.\nEach segment register is 16-bits and contains the pointer to the start of the memory-specific segment. The CS register contains the pointer to the code segment in memory. The code segment is where the instruction codes are stored in memory. The processor retrieves instruction codes from memory based on the CS register value and an offset value contained in the instruction pointer (EIP) register. Keep in mind no program can explicitly load or change the CS register. The processor assigns its values as the program is assigned a memory space.\nThe DS, ES, FS and GS segment registers are all used to point to data segments. Each of the four separate data segments help the program separate data elements to ensure that they do no overlap. The program loads the data segment registers with the appropriate pointer value for the segments and then reference individual memory locations using an offset value.\nThe stack segment register (SS) is used to point to the stack segment. The stack contains data values passed to functions and procedures within the program.\nSegment registers are considered part of the operating system and can neither read nor be changed directly in almost all cases. When working in the protected mode flat model (x86 architecture which is 32-bit), your program runs and receives a 4GB address space to which any 32-bit register can potentially address any of the four billion memory locations except for those protected areas defined by the operating system. Physical memory may be larger than 4GB however a 32-bit register can only express 4,294,967,296 different locations. If you have more than 4GB of memory in your computer, the OS must arrange a 4GB region within memory and your programs are limited to that new region. This task is completed by the segment registers and the OS keeps close control of this.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with the Instruction Pointer Register.\n"},"pages/part-12-instruction-pointer-register.html":{"url":"pages/part-12-instruction-pointer-register.html","title":"Part 12: Instruction Pointer Register","keywords":"","body":"Part 12: Instruction Pointer Register\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe instruction pointer register called the EIP register is simply the most important register you will deal with in any reverse engineering. The EIP keeps track of the next instruction code to execute. EIP points to the next instruction to execute. If you were to alter that pointer to jump to another area in the code you have complete control over that program.\nLets jump ahead and dive into some code. Here is an example of a simple hello world application in C that we will go into more detail much later in our tutorial series. For our purposes today, we will see the raw POWER of assembly language and particularly that of the EIP register and what we can do to completely hack program control.\n\n\nDon’t worry if you do not understand what it does or its functionality. What to take note of here is the fact we have a function called unreachableFunction that is never called by the main function. As you will see if we can control the EIP register we can hack this program to execute that code!\n\n\nWe have simply compiled the code to work with the IA32 instruction set and ran it. As you can see there is no call to the unreachableFunction of any kind as it is unreachable under normal conditions as you can see the ‘Hello World!` printed when executed.\n\n\nWe have disassembled the program using the GDB Debugger. We have set a breakpoint on the main function and ran the program. The => shows where EIP is pointing to when we step to the next instruction. If we follow normal program flow, ‘Hello World! will print to the console and exit. \n\n\nIf we run the program again and do an examination of where EIP is pointing to we will see:\n\n\nWe can see EIP is pointing to main+17 or the address of 0x680cec83.\nLets examine the unreachableFunction and see where it starts in memory and write down that address.\n\n\nThe next step is to set EIP to address 0x0804843b so that we hijack program flow to run the unreachableFunction.\n\n\nNow that we have hacked control of EIP, lets continue and watch how we have hijacked the operation of a running program to our advantage!\n\n\nTada! We have hacked the program!\nSo the question in your mind is why did you show me this when I have no idea of what any of this is? It is important to understand that when we are doing a lengthy tutorial such as this we should sometimes look forward to see why we are taking so many steps to learn the basics before we dive in. It is important however to show you that if you stay with the tutorial your hard work will pay off as we will learn how to hijack any running program to make it do whatever we want in addition to proactively breaking down a malicious program so that we can not only disable it but trace it back to a potential IP of where the hack originated.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with the Control Registers.\n"},"pages/part-13-control-registers.html":{"url":"pages/part-13-control-registers.html","title":"Part 13: Control Registers","keywords":"","body":"Part 13: Control Registers\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTheir are five control registers which are used to determine the operating mode of the CPU and the characteristics of the current executing task. Each control register is as follows:\nCR0: System flag that control the operating mode and various states of the processor.\nCR1: (Not Currently Implemented)\nCR2: Memory page fault information.\nCR3: Memory page directory information.\nCR4: Flags that enable processor feathers and indicate feature capabilities of the processor.\nThe values in each of the control registers can’t be directly accessed however the data in the control register can be moved to one of the general-purpose registers and once the data is in a GP register, a program can examine the bit flags in the register to determine the operating status of the processor in conjunction with the current running task.\nIf a change is required to a control register flag value, the change can be made to the data in the GP register and the register moved to the CR. Low-level System Programmers usually modify the values in control registers. Normal application programs do not usually modify control register entries however they might query flag values to determine the capabilities of the host processor chip on which the program is currently running.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with the topic of Flags.\n"},"pages/part-14-flags.html":{"url":"pages/part-14-flags.html","title":"Part 14: Flags","keywords":"","body":"Part 14: Flags\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe topic of flags are one of the most extremely complex and complicated concepts of assembly language and program flow control when reverse engineering. This information below will become much clearer as we enter into the final phase of our training when we reverse engineer C applications into assembly language.\nWhat is important here is to take away the fact that flags help control, check and verify program execution and are a mechanism to determine whether each operation that is performed by the processor is successful or not.\nFlags are critical to assembly language applications as they are a check to verify each programs functions successful execution.\nWe are dealing with 32-bit assembly to which a single 32-bit register which contains a group of status, control and system flags exist. This register is called the EFLAGS register as it contains 32 bits of information that are mapped to represent specific flags of information.\nThere are three kinds of flags which are status flags, control flags and system flags.\nStatus flags are as follows:\nCF: Carry Flag\nPF: Parity Flag\nAF: Adjust Flag\nZF: Zero Flag\nSF: Sign Flag\nOF: Overflow Flag\nThe carry flag is set when a math operation on an unsigned integer value generates a carry or borrow for the most significant bit. This is an overflow condition for the register involved in the math operation. When this occurs, the remaining data in the register is not the correct answer to the math operation.\nThe parity flag is used to indicate corrupt data as a result of a math operation in a register. When checked, the parity flag is set if the total number of 1 bits in the result is even and is cleared if the total number of 1 bits in the result is odd. When the parity flag is checked, an application can determine whether the register has been corrupted since the operation.\nThe adjust flag is used in Binary Coded Decimal math operations and is set if a carry or borrow operation occurs from bit 3 of the register used for the calculation.\nThe zero flag is set if the result of an operation is zero.\nThe sign flag is set to the most significant bit of the result which is the sign bit and indicates whether the result is positive or negative.\nThe overflow flag is used in signed integer arithmetic when a positive value is too big or a negative value is too small to be represented in the register.\nControl flags are utilized to control specific behavior in the processor. The DF flag which is the direction flag is used to control the way strings are handled bu the processor. When set, string instructions automatically decrement memory addresses to get the next byte in the string. When cleared, string instructions automatically increment memory addresses to get the next byte in the string.\nSystem flags are used to control OS level operations which should NEVER be modified by any respective program or application.\nTF: Trap Flag\nIF: Interrupt Enable Flag\nIOPL: I/O Privilege Level Flag\nNT: Nested Task Flag\nRF: Resume Flag\nVM: Virtual-8086 Mode Flag\nAC: Alignment Check Flag\nVIF: Virtual Interrupt Flag\nVIP: Virtual Interrupt Pending Flag\nID: Identification Flag\nThe trap flag is set to enable single-step mode and when in this mode the processor performs only one instruction code at a time, waiting for a signal to perform the next instruction. This is essential when debugging.\nThe interrupt enable flag controls how the processor responds to signals received from external sources.\nThe I/O privilege field indicates the input-output privilege level of the currently running task and defines access levels for the input-output address space which must be less than or equal to the access level required to access the respective address space. In the case where it is not less than or equal to the access level required, any request to access the address space will be denied.\nThe nested task flag controls whether the currently running task is linked to the previously executed task and is used for chaining interrupted and called tasks.\nThe resume flag controls how the processor responds to exceptions when in debugging mode.\nThe VM flag indicates that the processor is operating in virtual-8086 mode instead of protected or real mode.\nThe alignment check flag is used in conjunction with the AM bit in the CR0 control register to enable alignment checking of memory references.\nThe virtual interrupt flag replicates the IF flag when the processor is operating in virtual mode.\nThe virtual interrupt pending flag is used when the processor is operating in virtual mode to indicate that n interrupt is pending.\nThe ID flag indicates whether the processor supports the CPUID instruction.\nIn our next tutorial we will discuss the stack.\n"},"pages/part-15-stack.html":{"url":"pages/part-15-stack.html","title":"Part 15: Stack","keywords":"","body":"Part 15: Stack\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nFunctions are the most fundamental feature in software development. A function allows you to organize code in a logical way to execute a specified task. It is not critical that you understand how functions work at this stage it is only important that you understand that when we start learning to develop, we want to minimize duplication by using functions that can be called multiple times rather than duplicate code taking up excessive memory.\nWhen a program starts to execute a certain contiguous section of memory is set aside for the program called the stack.\nThe stack pointer is a register that contains the top of the stack. The stack pointer contains the smallest address, lets say for example 0x00001000, such that any address smaller than 0x00001000 is considered garbage and any address greater than 0x00001000 is considered valid.\nThe above address is random and is not an absolute where you will find the stack pointer from program to program as it will vary. Lets look at what the stack looks like from an abstract perspective:\n\n\nThe above diagram is what I want you to keep clear in your mind as that is what is actually happening in memory. The next series of diagrams will show the opposite of what is shown above.\nYou will see the stack growing upward in the below diagrams however in reality it is growing downward from higher memory to lower memory.\nIn the addMe example below, the stack pointer (ESP), when examined in memory on a breakpoint on the main function, lists 0xffffd050. When the program calls the addMe function from main, ESP is now 0xffffd030 which is LOWER in memory. Therefore the stack grows DOWNWARD despite the diagram showing it pointing upward. Just keep in mind when the arrows below are pointing upward they are actually pointing to lower memory addresses.\nThe stack bottom is the largest valid address of the stack and is located in the larger address area or top of the memory model. This can be confusing as the stack bottom is higher in memory. The stack grows downward in memory and it is critical that you understand that now as we go forward.\nThe stack limit is the smallest valid address of the stack. If the stack pointer gets smaller than this, there is a stack overflow which can corrupt a program to allow an attacker to take control of a system. Malware attempts to take advantage of stack overflows. As of recent, there are protections build into modern OS that attempt to prevent this from happening.\nThere are two operations on the stack which are push and pop. You can push one or more registers by setting the stack pointer to a smaller value. This is usually done by subtracting four times the number of registers to be pushed onto the stack and copying the registers to the stack.\nYou can pop one or more registers by copying the data from the stack to the registers, then to add a value to the stack pointer. This is usually done by adding four times the number of registers to be popped on the stack.\nLet us look at how the stack is used to implement functions. For each function call there is a section of the stack reserved for the function. This is called the stack frame.\nLet’s look at the C program we created in tutorial 12 and examine what the main function looks like:\n\n\nWe see two functions here. The first one is the unreachableFunction to which will never execute under normal circumstances and we also see the main function that will always be the first function to be called onto the stack.\nWhen we run this program, the stack will look like this:\n\n\nWe can see the stack frame for int main(void) above. It is also referred to as the activation record. A stack frame exists whenever a function has started but yet to complete. For example, inside of the body of the int main(void) there is a call to int addMe(int a, int b) which takes two arguments a and b. There needs to be assembly language code in int main(void) to push the arguments for int addMe(int a, int b) onto the stack. Lets examine some code.\n\n\nWhen we compile and run this program we will see the value of 5 to be print out like this:\n\n\nVery simply, int main(void) calls int addMe(int a, int b) first and will get put on the stack like this:\n\n\nYou can see that by placing the arguments on the stack, the stack frame for int main(void) has increased in size. We also reserved space for the return value which is computed by int addMe(int a, int b) and when the function returns, the return value in int main(void) gets restored and execution continues in int main(void) until it finishes.\nOnce we get the instructions for int addMe(int a, int b), the function may need local variables so the function needs to push some space on the stack which would look like:\n\n\nint addMe(int a, int b) can access the arguments passed to it from int main(void) because the code in int main(void) places the arguments just as int addMe(int a, int b) expects it. \nFP is the frame pointer and points to the location where the stack pointer was just before int addMe(int a, int b) moved the stack pointer or SP for int addMe(int a, int b)’s own local variables.\nThe use of a frame pointer is essential when a function is likely to move the stack pointer several times throughout the course of running the function. The idea is to keep the frame pointer fixed for the duration of int addMe(int a, int b)’s stack frame. In the meantime, the stack pointer can change values.\nWe can use the frame pointer to compute the locations in memory for both arguments as well as local variables. Since it does not move, the computations for those locations should be some fixed offset from the frame pointer.\nOnce it is time to exit int addMe(int a, int b), the stack pointer is set to where the frame pointer is which pops off the int addMe(int a, int b) stack frame.\nIn sum, the stack is a special region of memory that stores temporary variables created by each function including main. The stack is a LIFO which is last in, first out data structure which is managed and optimized by the CPU closely. Every time a function declares a new variable it is pushed onto the stack. Every time a function exists, all of the variables pushed onto the stack by that function are freed or deleted. Once a stack variable is freed, that region of memory becomes available for other stack variables.\nThe advantage of the stack to store variables is that memory is managed for you. You do not have to allocate memory manually or free it manually. The CPU manages and organizes stack memory very efficiently and is very fast.\nIt is critical that you understand that when a function exits, all of its variables are popped off the stack and lost forever. The stack variables are local. The stack grows and shrinks as functions push and pop local variables.\nI can see your head spinning around and around. Keep in mind, these topics are complicated and will continue to develop in future tutorials. We have been dealing with a lot of confusing topics such as registers, memory and now the stack and it can be overwhelming. If you ever have questions, please comment below and I will help you to better understand this framework.\nIn our next tutorial we will discuss the heap.\n"},"pages/part-16-heap.html":{"url":"pages/part-16-heap.html","title":"Part 16: Heap","keywords":"","body":"Part 16: Heap\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOur next step in the Basic Malware Reverse Engineering section focuses on the heap. Keep in mind, the stack grows downward and the heap grows upward. It is very, very important that you understand this concept as we progress forward in our future tutorials.\n\n\nThe heap is the region of your computer's memory that is not managed automatically for you, and is not as tightly managed by the CPU. It is free-floating region of memory and is larger than the stack allocation of memory.\nTo allocate memory on the heap, you must use malloc() or calloc(), which are built-in C functions. Once you have allocated memory on the heap, you are responsible for freeing it by using free() to de-allocate that memory once you don't need it any more.\nIf you don’t do this step, your program will have what is known as a memory leak. That is, memory on the heap will still be set aside and won't be available to other processes that need it.\nUnlike the stack, the heap does not have size restrictions on variable size. The only thing that would limit the heap is the physical limitations of your computer. Heap memory is slightly slower to be read from and written to, because you have to to use pointers to access memory on the heap. When we dive into our C tutorial series we will demonstrate this.\nUnlike the stack, variables created on the heap are accessible by any function, anywhere in your program. Heap variables are essentially global in scope.\nIf you need to allocate a large block of memory for something like a struct or a large array and you need to keep that variable around for a good duration of the program to which must be accessed globally, then you should choose the heap for this purpose. If you need variables like arrays and structs that can change size dynamically such as arrays that can grow or shrink as needed, then you will likely need to allocate them on the heap, and use dynamic memory allocation functions like malloc(), calloc(), realloc() and free() to manage that memory manually.\nThe next step is to dive into programming C in the Linux environment where we step-by-step disassemble each C program so in effect you will be learning both C programming and Assembly so that you can progress your skills in Malware Analysis and Reverse Engineering.\nI look forward to seeing you all next week when we take a comprehensive step-by-step tutorial on how to install Linux on your current computer using the FREE Virtual Box software tool.\n"},"pages/part-17-how-to-install-linux.html":{"url":"pages/part-17-how-to-install-linux.html","title":"Part 17 – How To Install Linux","keywords":"","body":"Part 17 – How To Install Linux\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIf you do not have Linux installed on a computer within your household, I would suggest installing Virtual Box which is an open-source free virtual environment which you can install on your existing computer to have a version of Linux you can program with. Below is a link to download and install Virtual Box as there are versions for both Windows and Mac.\nhttps://www.virtualbox.org/wiki/Downloads  \n\n\nIn addition, you will need a copy of Linux to which I will be working with Ubuntu. Below is a link to download the .iso file to which you will install once you have Virtual Box installed.\nhttp://www.ubuntu.com/download/desktop \n\n\nAfter you download the above .iso, go to your Download directory and first execute and run the VirtualBox-5.0.24-108355-Win.exe or whatever version of VirtualBox that is currently available. If you are running a Mac, you will download the .dmg file. Simply double-click on the file to execute and run it.\nAfter you install VirtualBox-5.0.24-108355-Win.exe or the Mac .dmg file and you will see this screen:\n\n\nClick on the New button above which is located in the top-left corner of the screen as it is a big blue cog-looking circle.\n\n\nIn the name field above, type Ubuntu and click the next button.\n\n\nIt is important to click on the blue slider bar above and select an amount of ram that points to an area in green so that it does not overwhelm your computer resources. After moving the blue slider, click next.\n\n\nThen click create.\n\n\nThen click next.\n\n\nThen click next.\n\n\nPlease move the dial up to 16.00 GB rather than 8.00 GB shown above then click create.\n\n\nThe next step is to click on the green start button.\n\n\nThe next step is to click on the yellow folder just above the cancel button.\n\n\nThe next step is to click on the .iso file that should be in your Download directory and click open.\n\n\nThe next step is to click start.\n\n\nThe next step is to let the install begin and click Install Ubuntu.\n\n\nThe next step is to check each of the boxes to Download updates while installing Ubuntu and click continue.\n\n\nThe next step is to select Erase disk and install Ubuntu and click install now.\n\n\nThe next step is to click continue and progress forward to the screen where you will select your timezone to which you will select continue.\n\n\nThe next step is to select your keyboard layout and click continue.\n\n\nThe next step is to create a name for your account. I chose noroot and did the same for the username. In addition, create a password and re-type it for verification and click continue.\n\n\nAt this point it will take some time to install the operating system. When the process is finished, click restart now. If the window locks up, click Power Off The Machine and click close or next.\n\n\nAt this point, click on the green start button.\n\n\nEnter in your password that you created earlier and click enter on your keyboard. You can click on the blue x buttons in the top right corner as they are just some information you can close out.\n\n\nCongratulations! You have a working version of Linux! \n\n\nClick on the top left icon and type terminal and double-click on the first Terminal icon with the >_ in the window.\n\n\nYou will see a Terminal icon at the bottom left of your screen. Right-click on it and select Lock to Launcher so that it will be available for you once you close the window.\n\n\nIn the terminal window type cd Desktop and press Enter. Then type mkdir Code and press enter. The first command moves you into the Desktop directory and the mkdir command creates a folder on the Desktop called Code so that we have a place to store our software applications that we create.\n\n\nIt is important you keep your version of Linux up to date. Every time you login, you should type the following commands. First, sudo apt-get update and press enter.\n\n\nNext you should then type sudo apt-get upgrade and press enter.\n\n\nIn order to work with 32-bit Assembly examination, we need to install the gcc multilib package so that we can compile 32-bit versions of C code for examination. Type sudo apt-get install gcc-multilib and press enter.\n    \nFinally click on Devices and click Insert Guest Additions CD Image… in order to get a better working functionality out of your VM.\nThis has been a very long tutorial however necessary to get you a working copy of Linux so that we can continue with our future tutorials.\nI look forward to seeing you all next week when we learn how to use the vim text editor to begin coding!\n"},"pages/part-18-vim-text-editor.html":{"url":"pages/part-18-vim-text-editor.html","title":"Part 18 - vim Text Editor","keywords":"","body":"Part 18 - vim Text Editor\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nNow that we have a working version of Linux, we need a text editor that we can work with in the terminal.\nTo begin, open your terminal and type:\n\n\nThis will open up the vi text editor. The first thing you need to type is the letter ‘i’ to set the editor to insert mode so you may begin typing.\n  \nAfter you a done typing, press the ‘esc’ key and type ‘:wq’ and press enter.\nCongratulations! You created your first file! This is a one time file that we need to create in order to use our text editor they way we want it to perform.\nThe first line states set number which means we would like each file to show line numbers as this is essential for debugging code. The set smartindent, set tabstop, set shiftwidth and set expandtab statements set forth rules to properly format code and allow 4 spaces per tab indent which will help our code to look clean.\nThere are several commands you need to be aware of. Keep in mind, to go into command mode rather than insert mode you must press the ‘esc’ key. Below are the most common commands:\nj or down-arrow [move cursor down one line]\nk or up-arrow [move cursor up one line]\nh or left-arrow [move cursor left one character]\nl or right-arrow [move cursor right one character]\n0 [move cursor to the start of the current line]\n$ [move cursor to the end of the current line]\nb [move cursor back to the beginning of preceding word]\ndd [deletes the line the cursor is on]\nD [deletes from the cursor position to the end of the line]\nyy [copies the current line]\np [puts the copied text after the cursor]\nu [undo the last change to the file]\n:w [save file]\n:wq [save file and exit text editor]\n:q! [quit text editor and do not save any changes]\nYou will be consistently moving between command mode ‘esc’ and insert mode ‘i’. Remember that when you want to insert characters you need to be in insert mode and when you want to move the cursor other than moving to the next line, you need to be in command mode.\nNow that we have vi configured, lets install vim which has some better functionality. Simply type:\n\n\nOnce that is installed instead of using vi we will now use vim.\nI look forward to seeing you all next week when we talk about why it’s important to learn Assembly Language.\n"},"pages/part-19-why-learn-assembly.html":{"url":"pages/part-19-why-learn-assembly.html","title":"Part 19 - Why Learn Assembly","keywords":"","body":"Part 19 - Why Learn Assembly\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWhy learn Assembly Language? Java is the most in-demand programming language and will get me a job immediately so why in the hell would I ever waste my damn time learning this archaic Assembly Language crap?\nSo many people ask me this question and it is true, Java is HOT and in the greatest demand and there is nothing wrong with learning Java however the threats that face society more than anything in this world, above everything else, is the Cyber Security threat. With that said, Java offers a great career path and I would encourage you to learn it however Java is not the only game in town.\nMost malware is written in higher-level languages however most malware authors do not give the attackers their source code so they can properly deal with their crafted attack.\nThe hackers use a multitude of high-level languages and the demand for new professional Malware Analyst Reverse Engineers continue to grow daily.\nWhen we examine malware, more than not we get only a compiled binary. The only thing we can do with a compiled binary is to break it down, instruction-by-instruction, in Assembly Language as EVERYTHING ultimately goes down to Assembly Language.\nWhen someone says Assembly Language is a dinosaur I say to those people, lets have that conversation when your entire network is brought to its knees and you can’t login to a single terminal or manipulate a single machine on your network. Lets talk about how useless Assembly Language is at that time.\nUnderstanding Assembly Language allows one to open a debugger on an a running process. Each running program has a PID to which is a numerical value which designates a running program. If we open a running process or any bit of malware with a professional or open-source tool like GDB, we can see EXACTLY what is going on and then grab the EIP instruction pointer to go where we need it to go to have COMPLETE control over program flow.\nMost malware is written, as I have stated, in a middle-level language and once compiled it can be read by the hardware or OS as it is not human-readable. In order for professional Cyber Security Engineers to understand this, they must learn to read, write and properly debug Assembly.\nAssembly Language is low-level and has many more instructions than you would see in a higher-level application.\nThe prior 18 lessons in this tutorial series gave you the basics of x86 hardware. As I have stated in prior tutorials, we will focus on 32-bit Assembly debugging as most malware is going to try to affect as many systems as possible and although there is 64-bit malware, 32-bit malware is significantly more destructive and dangerous and will be the focus of this series.\nI look forward to seeing you all next week when we learn the basics of instruction code handling.\n"},"pages/part-20-instruction-code-handling.html":{"url":"pages/part-20-instruction-code-handling.html","title":"Part 20 - Instruction Code Handling","keywords":"","body":"Part 20 - Instruction Code Handling\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nA CPU reads instruction codes that are stored in memory as each code set can contain one of more bytes of information that guide the processor to perform a very specific task. As each instruction code is read in from memory, any data needed for the instruction code is also stored and read into memory.\nKeep in mind, memory that contain instruction codes are no different than the bytes that contain the data used by the CPU and special pointers are used to help the CPU keep track of where in memory data is and where instruction codes are stored.\nA data pointer helps the CPU keep track of where the data area in memory starts which is the stack. When new data elements are placed in the stack, the stack pointer moves down in memory and as data is read from the stack the stack pointer moves up in memory. Please review Part 15 – Stack if you don’t understand this concept.\nThe instruction pointer is used to help the CPU keep track of which instruction codes have already been processed and what code is to be processed next. Please review Part 12 – Instruction Pointer Register if you don’t understand this concept.\nEach and every instruction code must include an opcode that defines the basic function or task to be performed by the CPU to which opcodes are between 1 and 3 bytes in length and uniquely defines the function that is performed.\nLets examine a simple C program called test.c to get started.\n\n\nAll we are doing is creating a main function of type integer to which it has a void parameter and returning 0. All this program does is simply exit the OS.\nLets compile and run this program.\n\n\nLets use the objdump tool to and find the main function within it.\n\n\nHere is a snippet of the results you would get by running the above command. Here are the contents of the main function. Keep in mind the below is in Intel syntax as we spoke about in the last tutorial.\n\n\nOn the far left we have the corresponding memory addresses. In the center we have the opcodes and finally on the right we have the corresponding assembly language in Intel syntax.\nTo keep this simple, lets examine memory address 80483de where we see op codes b8 00 00 00 00. We can see that the b8 opcode corresponds with the mov eax, 0x0 instruction on the right. The next series of 00 00 00 00 represents 4 bytes of the value 0. We see mov eax, 0x0 therefore the value of 0 is moved into eax therefore representing the above code. Keep in mind, the IA-32 platform uses what we call little-endian notation which means the lower-value bytes appear first in order when reading right to left.\nI want to make sure you have this straight in your head so lets pretend the value above was:\nmov eax, 0x1\nIn this scenario the corresponding opcode would be:\nb8 01 00 00 00\nIf you are confused it is ok. Remember little-endian? Keep in mind eax is 32-bits wide therefore that is 4 bytes (8 bits = 1 byte). The values are listed in reverse order therefore we see the above representation.\nI look forward to seeing you all next week when we dive into the details about how to compile a program.\n"},"pages/part-21-how-to-compile-a-program.html":{"url":"pages/part-21-how-to-compile-a-program.html","title":"Part 21 - How To Compile A Program","keywords":"","body":"Part 21 - How To Compile A Program\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s look again at last weeks C program and take a deeper look at how we turn that source code into an executable file.\n\n\nTo compile this program in C, we simply type:\n\n\nThis single step will create exit.o which is the binary object file and exit which is the binary executable file.\nIf we wanted to convert this C source code to Assembly, we need to use the GNU compiler in the below fashion. Lets start by running the below command in the terminal:\n\n\nLet’s begin with the -S switch. The -S switch will create comparable AT&T Syntax Assembly source code. The -m32 will create a 32-bit executable and the -O0 will tell the compiler how much optimization to use when compiling the binary. That is the capital O and the numeric 0. Numeric 0 in that case means no optimization which means it is at the most human readable instruction set. If you were to substitute a 1, 2 or 3 the amount of optimization increases as the values go up.\n\n\nThis step above creates exit.s which is the equivalent Assembly Language source code as we mentioned above.\nWe then need to compile the Assembly source code into a binary object file which will generate a exit.o file.\n\n\nFinally we need to use a linker to create the actual binary executable code from the binary object file which will create an executable called exit. \n\n\nLast week when we examined the executable file exit in a program called objdump, and examined the main area we saw the following below except this time we will use AT&T Assembly Language Syntax:\n\n\nThis command above will create the following output below:\n\n\nLets examine the code in the debugger. Let’s start GDB which is the GNU debugger and first list the source code by typing l, then set a breakpoint on main and run the program. Finally we will disassemble and review the output below:\n\n\nIn each of the three above examinations, you will essentially see the same set of instructions which we will take a deeper look as to what is exactly going on in future tutorials.\nThroughout this tutorial series thus far we have been looking at Intel Syntax Assembly Language. We are going to turn our focus to AT&T Syntax as I have stated above as this is the natural syntax utilized in Linux with the GNU Assembler and GNU Debugger.\nThe biggest different you will see is that in AT&T Syntax, the source and destinations are reversed.\nAT&T Syntax : movl %esp, %ebp [This means move esp into ebp.]\nIntel Syntax : mov esp, ebp [This means move ebp into esp.]\nYou will also see some additional variances as AT&T uses additional variances which we will cover in a later tutorial.\nIf we wanted to create a pure Assembly Code program which does the same thing above we would type:\n\n\nTo compile this we would use the GAS Assembler and Linker:\n\n\nTo run any executable in Linux you type ./ and the name of the binary executable. In this case we type ./exit and press return. When we do so, nothing happens. That is good as all we did was create a program that exited to the OS.\nI look forward to seeing you all next week when we dive into more assembly code!\n"},"pages/part-22-asm-program-1-moving-immediate-data.html":{"url":"pages/part-22-asm-program-1-moving-immediate-data.html","title":"Part 22 - ASM Program 1 [Moving Immediate Data]","keywords":"","body":"Part 22 - ASM Program 1 [Moving Immediate Data]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nI appreciate everyone being patient as it has taken 21 lessons to get to our first ASM program however very necessary background had to be covered in order to fully understand where we begin when developing assembly language.\nWe are going to create 32-bit assembly programs as most malware is written in 32-bit mode in order to attack the maximum amount of systems possible. Keep in mind even though most of us ALL have 64-bit operating systems, 32-bit programs can run on them.\nFor the most part we have been working with Intel syntax when it comes to assembly however I am going to focus on the native AT&T syntax going forward. It is very easy to convert back and forth between Intel and AT&T syntax as I have demonstrated in prior tutorials.\nEvery assembly language program is divided into three sections:\n1)Data Section: This section is used for declaring initialized data or constants as this data does not ever change at runtime. You can declare constant values, buffer sizes, file names, etc.\n2)BSS Section: This section is used for declaring uninitialized data or variables.\n3)Text Section: This section is used for the actual code sections as it begins with a global _start which tells the kernel where execution begins.\nCritical to any development is the use of comments. In the AT&T syntax we use use the # symbol to declare a comment as any data after that symbol on a respective line will be ignored by the compiler.\nKeep in mind, assembly language statements are entered in one statement per line as you do not have to end the line with a semicolon like many other languages. The structure of a statement is as follows:\n[label] mnemonic [operands] [comment]\nA basic instruction has two parts of which the first one is the name of the instruction or the mnemonic which is executed and the second part is the operands or parameters of the command.\nOur first program will demonstrate how to move immediate data to a register and immediate data to memory.\nLets open VIM and create a program called moving_immediate_data.s and type the following:\n\n\nTo compile you type:\nas –32 -o moving_immediate_data.o moving_immediate_data.s\nld -m elf_i386 -o moving_immediate_data moving_immediate_data.o\nTo run you type:\n./moving_immediate_data\nI would like to show you what it would look like in Intel syntax as well. Before we examine this part you will need to type sudo apt-get install nasm in a command prompt which will install the Netwide Assembler:\n\n\nTo compile you type:\nnasm -f elf32 moving_immediate_data.asm\nld -m elf_i386 -o moving_immediate_data moving_immediate_data.o\nTo run you type:\n./moving_immediate_data\nOk what the heck! There is no output! That is correct and you did not do anything wrong. Many of our programs will not actually do anything as they are not much more than sandbox programs that we will use in GDB for analysis and manipulation.\nNext week we will dive into the GNU GDB debugger and see what is going on under the hood.\nI want to take some time and discuss the code at line 20 – 22 in the AT&T version and the Intel Syntax version as well. This set of instructions takes advantage of what we call a software interrupt. On line 20 in the AT&T Syntax, we movl $1, %eax meaning we move the decimal value of 1 into eax which specifies the sys_exit call which will properly terminate program execution back to Linux so that there is no segmentation fault. On line 21, we movl $0, %ebx which moves 0 into ebx to show that the program successfully executed and finally we see int $0x80.\nLine 20 and 21 set up the software interrupt which we call on line 22 with the instruction int $0x80. Let’s dive into this a little deeper.\nIn Linux, there are two distinct areas of memory. At the very bottom of memory in any program execution we have the Kernel Space which is made up of the Dispatcher section and the Vector Table.\nAt the very top of memory in any program execution we have the User Space which is made up of The Stack, The Heap and finally your code all of which can be illustrated in the below diagram:\n\n\nWhen we load the values as we demonstrated above and call INT 0x80, the very next instruction’s address in the User Space, ASM Code section which is your code, is placed into the Return Address area in The Stack. This is critical so that when INT 0x80 does its work, it can properly know what instruction is to be carried out next to ensure proper and sequential program execution.\nKeep in mind in modern versions of Linux, we are utilizing Protected Mode which means you do NOT have access to the Linux Kernel Space. Everything under the long line that runs in the middle of the diagram above represents the Linux Kernel Space.\nThe natural question is why can’t we access this? The answer is very simple, Linux will NOT allow your code to access operating system internals as that would be very dangerous as any Malware could manipulate those components of the OS to track all sorts of things such as user keystrokes, activities and the like.\nIn addition, modern Linux OS architecture changes the address of these key components constantly as new software is installed and removed in addition to system patches and upgrades. This is the cornerstone of Protected Mode operating systems.\nThe way that we have our code communicate with the Linux Kernel is through the use of a kernel servies call gate which is a protected gateway between User Space where your program is running and Kernel Space which is implemented through the Linux Software Interrupt of 0x80.\nAt the very, very bottom of memory where segment 0, offset 0 exists is a lookup table with 256 entries. Every entry is a memory address including segment and offset portions which comprise of 4 bytes per entry as the first 1,024 bytes are reserved for this table and NO OTHER CODE can be manipulated there. Each address is called an interrupt vector which comprises the whole called the interrupt vector table where every vector has a number from 0 to 255 to which vector 0 starts off occupying bytes 0 to 3. This continues with vector 1 which contains 4 to 7, etc.\nKeep in mind, none of these addresses are part of permanent memory. What is static is vector 0x80 which points to the services dispatcher which point to Linux kernel service routines.\nWhen the return address is popped off the stack returns to the next instruction, the instruction is called the Interrupt Return or IRET which completes the execution of program flow.\nTake some time and look at the entire table of system calls by opening up a terminal and typing:\ncat /usr/include/asm/unistd_32.h\nBelow is a snapshot of just a few of them. As you can see the exit 1 represents the sys_exit that we utilized in our above code.\n\n\nStarting with this lesson we will take a 3-step approach:\n1)Program\n2)Debug\n3)Hack\nEach week we will start with a program like you see here, the following week we will take it into GDB and examine what exactly is going on at the assembly level and finally in the third series of each week we will hack the data in GDB to change it to whatever we want demonstrating the ability to control program flow which includes learning how to hack malware to a point where it is not a threat.\nWe will not necessarily look at malware directly as I would rather focus on the topics of assembly language programs that will give you the tools and understanding so that ANY program can be debugged and manipulated to your liking. That is the purpose of these tutorials.\nThe information you will learn in this tutorial series can be used with high-level GUI debuggers like IDA Pro as well however I will focus only on the GNU GDB debugger.\nI look forward to seeing you all next week when we dive into creating our first assembly debug!\n"},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"url":"pages/part-23-asm-debugging-1-moving-immediate-data.html","title":"Part 23 - ASM Debugging 1 [Moving Immediate Data]","keywords":"","body":"Part 23 - ASM Debugging 1 [Moving Immediate Data]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s begin by loading the binary into GDB.\nTo load into GDB type:\ngdb -q moving_immediate_dat\n\n\nLet’s first set a breakpoint on start by typing b _start.\nWe can then run the program by typing r.\nTo then begin disassembly, we simply type disas.\nWe coded a nop which means no operation or 0x90 from an OPCODE perspective for proper debugging purposes which the breakpoint properly hit. This is good practice when creating assembly programs.\n\n\nThe native syntax as I have stated many times before is AT&T syntax which you see above. I painfully go back and forth deliberately so that you have comfort in each however going forward I will be sticking to the AT&T syntax however wanted to show you a few examples of both. I will state again that if you ever want to see Intel syntax simply type set-disassembly-flavor intel and you will have what you are looking for.\nWe first use the command si which means step-into to advance to the next instruction. What we see here at _start+0 is you are moving the hex value of 0x64 into EAX. This is simply moving decimal 100 or as the computer sees it, hex 0x64 into EAX which demonstrates moving an immediate value into a register.\n\n\nWe step-into again and then use the command i r which keep in mind has a space between them to give us information on the state of the CPU registers. We can see EAX now has the value of 0x64 hex or 100 decimal.\n\n\nAfter we step-into again and do a disas, we see that we have then moved the value of 0x50 into the buffer label as can refer back to the source code from last week to see.\nWhen dealing with non-register data, we can use the print command above as we type print /x buffer and it clearly shows us that the value inside buffer is 0x50. The /x designation means show us the value in hex.\n\n\nConsequently you can review slide 2 of this tutorial above you see at _start+5 the immediate value of 0x50 loaded into the buffer label or in this case the address of buffer which is 0x8049090 and we can examine it by using the examine instruction by typing x/xb 0x8049090 which shows us one hex byte at that location which yields 0x50.\nWe will be doing this with every program example so that we can dive into the debugging process. If there are any questions, please leave them below in the comments.\nI look forward to seeing you all next week when we dive into creating our first assembly hack!\n"},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"url":"pages/part-24-asm-hacking-1-moving-immediate-data.html","title":"Part 24 - ASM Hacking 1 [Moving Immediate Data]","keywords":"","body":"Part 24 - ASM Hacking 1 [Moving Immediate Data]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s begin by loading the binary into GDB.\nTo load into GDB type:\ngdb -q moving_immediate_data\n\n\nLet’s first set a breakpoint on start by typing b _start.\nWe can then run the program by typing r.\nTo then begin disassembly, we simply type disas.\nWe coded a nop which means no operation or 0x90 from an OPCODE perspective for proper debugging purposes which the breakpoint properly hit. This is good practice when creating assembly programs.\n\n\nLets have some fun! At this point lets si once and do an i r to see that 0x64 has in fact been moved into EAX.\n\n\nWe can see EAX has the value of 0x64 or 100 decimal. Lets HACK that value now by setting EAX to say something like 0x66 by typing set $eax = 0x66.\n\n\nBAM! There we go! You can see the ULTIMATE power of assembly here! We just hacked the value from 0x64 to 0x66 or 100 to 102 decimal. This is a trivial example however you can clearly see when you learn to master these concepts you develop a greater power over the computer. With each program that we create, we will have a very simple lesson like this where we will hijack at least one portion of the code so we can not only see how the program is created and debugged but how we can manipulate it to whatever we want.\nI look forward to seeing you all next week when we dive into creating our second assembly program!\n"},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"url":"pages/part-25-asm-program-2-moving-data-between-registers.html","title":"Part 25 - ASM Program 2 [Moving Data Between Registers]","keywords":"","body":"Part 25 - ASM Program 2 [Moving Data Between Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our second program we will demonstrate how we can move data between registers. Moving data from one register to another is the fastest way to move data. It is always advisable to keep data between registers as much as can be engineered for speed.\nSpecifically we will move the value in EDX into EAX. We will initialize this program with a simple immediate value of 22 decimal which will go into EDX and ultimately into EAX.\n\n\nKeep in mind you can only move similar registers between each other. We know that EAX and EDX are 32-bit registers. We know that each of these registers can be accessed by their 16-bit values as ax and dx respectively. You can’t move a 32-bit value into a 16-bit value and vice-versa.\nI look forward to seeing you all next week when we dive into debugging our second assembly program!\n"},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"url":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","title":"Part 26 - ASM Debugging 2 [Moving Data Between Registers]","keywords":"","body":"Part 26 - ASM Debugging 2 [Moving Data Between Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s debug the second program below:\n\n\nLets fire up GDB and break on _start, run the binary and disas:\n\n\nNow lets si twice and i r:\n\n\nAs we can see the value of 0x16 or 22 decimal did move into EDX successfully. Now lets si again.\n\n\nAs you can see we have successfully moved EDX into EAX.\nI look forward to seeing you all next week when we dive into hacking our second assembly program!\n"},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"url":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","title":"Part 27 - ASM Hacking 2 [Moving Data Between Registers]","keywords":"","body":"Part 27 - ASM Hacking 2 [Moving Data Between Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s hack the second program below:\n\n\nLets fire up GDB and break on _start, run the binary and disas:\n\n\nNow lets si twice and i r:\n\n\nAs we can see the value of 0x16 or 22 decimal did move into EDX successfully. This is what we did in the last lesson however here we are going to hack that value to something else.\nWe can set $edx = 0x19 for example:\n\n\nAs you can see we easily hacked the value of EDX to 0x19 or 25 decimal.\nHopefully you see some very simple patterns now that we are diving into very simple assembly language programs. The key is to understand how to manipulate values and instructions so that you have complete control over the binary.\nWe are going to continue to move at a snails pace throughout the rest of this tutorial as my goal is to give everyone very small bite-size examples of how to understand x86 assembly.\nI look forward to seeing you all next week when we dive into writing our third assembly program!\n"},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"url":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","title":"Part 28 - ASM Program 3 [Moving Data Between Memory And Registers]","keywords":"","body":"Part 28 - ASM Program 3 [Moving Data Between Memory And Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our third program we will demonstrate how we can move data between memory and registers. \n\n\nSpecifically we will move the value of inside the constant integer of 10 decimal into ECX.\nKeep in mind to assemble we type:\nas –32 -o moving_data_between_memory_and_registers.o moving_data_between_memory_and_registers.s\nTo link the object file we type:\nld -m elf_i386 -o moving_data_between_memory_and_registers moving_data_between_memory_and_registers.o \nI look forward to seeing you all next week when we dive into debugging our third assembly program!\n"},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"url":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","title":"Part 29 - ASM Debugging 3 [Moving Data Between Memory And Registers]","keywords":"","body":"Part 29 - ASM Debugging 3 [Moving Data Between Memory And Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s debug! \n\n\nSpecifically we will move the value of inside the constant integer of 10 decimal into ECX.\n\n\nWe open GDB in quiet mode and break on _start and run by following the commands above.\n\n\nAs we can see when we info registers the value of ECX is 0.\n\n\nAfter we step into twice, we now see the value of ECX as 10 decimal of 0xa hex.\nI look forward to seeing you all next week when we dive into hacking our third assembly program!\n"},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"url":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","title":"Part 30 - ASM Hacking 3 [Moving Data Between Memory And Registers]","keywords":"","body":"Part 30 - ASM Hacking 3 [Moving Data Between Memory And Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s hack! \n\n\nSpecifically we will move the value of inside the constant integer of 10 decimal into ECX like before.\n\n\nWe open GDB in quiet mode and break on _start and run by following the commands above. \n\n\nAs we can see when we info registers the value of ECX is 0. Let’s do a si and another si. \n\n\nAs you can see the value of ECX is 10 decimal or 0xa hex as it was in the prior lesson now lets hack that value to something else.\nLet’s set $ecx = 1337 and do an i r.\n\n\nAs you can clearly see we have hacked the value of ECX to 0x539 hex or 1337 decimal.\nAs I have stated throughout this series. Each of these lessons are very bite-sized examples so that you get the hard muscle memory on how to hack through a variety of situations so that you ultimately have a complete mastery of processor control.\nI look forward to seeing you all next week when we dive into creating our fourth assembly program!\n"},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"url":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","title":"Part 31 - ASM Program 4 [Moving Data Between Registers And Memory]","keywords":"","body":"Part 31 - ASM Program 4 [Moving Data Between Registers And Memory]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fourth program we will demonstrate how we can move data between registers and memory. \n\n\nSpecifically we will move the immediate value of 777 decimal into EAX. We then move that value stored in EAX into the constant value in memory which initially had the value of 10 decimal at runtime. Keep in mind we could have called the value anything however I called it constant as it was set up as a constant in the .data section.\nYou can clearly see it can be manipulated so it is NOT a constant. I chose constant deliberately as if it was in pure form the value would stay 10 decimal or 0xa hex.\nThis code is purely an academic exercise as variable data normally would be set up under the .bss section however I wanted to demonstrate that the above is possible to show the absolute flexibility of assembly language.\nKeep in mind to assemble we type:\nas –32 -o moving_data_between_registers_and_memory.o moving_data_between_registers_and_memory.s\nTo link the object file we type:\nld -m elf_i386 -o moving_data_between_registers_and_memory moving_data_between_registers_and_memory.o \nI look forward to seeing you all next week when we dive into debugging our fourth assembly program!\n"},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"url":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","title":"Part 32 - ASM Debugging 4 [Moving Data Between Registers And Memory]","keywords":"","body":"Part 32 - ASM Debugging 4 [Moving Data Between Registers And Memory]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fourth program we will demonstrate how we can move data between registers and memory. \n\n\nSpecifically we will move the immediate value of 777 decimal into EAX. We then move that value stored in EAX into the constant value in memory which initially had the value of 10 decimal at runtime. Keep in mind we could have called the value anything however I called it constant as it was set up as a constant in the .data section.\n\n\nAs you can see above we go into GDB and clearly see that the value of constant has been replaced with 777 decimal where in the code it was clearly set at 10 decimal in line 6 of the code at the beginning of this tutorial.\nWe can clearly see that in line 16 of the code the value of 777 decimal was successfully moved into EAX and into the memory value of constant.\nI look forward to seeing you all next week when we dive into hacking our fourth assembly program!\n"},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"url":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","title":"Part 33 - ASM Hacking 4 [Moving Data Between Registers And Memory]","keywords":"","body":"Part 33 - ASM Hacking 4 [Moving Data Between Registers And Memory]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine the source code.\n\n\nWe again can see above that we will move the immediate value of 777 decimal into EAX. We then move that value stored in EAX into the constant value in memory which initially had the value of 10 decimal at runtime. Keep in mind we could have called the value anything however I called it constant as it was set up as a constant in the .data section.\n\n\nAs you can see above we go into GDB and clearly see that the value of constant has been replaced with 777 decimal where in the code it was clearly set at 10 decimal in line 6 of the code at the beginning of this tutorial.\nWe can clearly see that in line 16 of the code the value of 777 decimal was successfully moved into EAX and into the memory value of constant.\nNow lets hack this thing!\n\n\nWe took the very steps as we did last time with the debugging lesson. Here we hack the value of constant to which we hack the value from 777 to 666.\nI look forward to seeing you all next week when we dive into creating our fifth assembly program!\n"},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"url":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","title":"Part 34 - ASM Program 5 [Indirect Addressing With Registers]","keywords":"","body":"Part 34 - ASM Program 5 [Indirect Addressing With Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fifth program we will demonstrate how we can manipulate indirect addressing with registers. \n\n\nWe can place more than one value in memory as indicated above. In the past, our memory location contained one single value. In the above as you can see the value of constants contains 11 separate values.\nThis creates a sequential series of data values placed in memory. Each data value occupies one unit of memory which is an integer or 4 bytes.\nWe must use an index system to determine these values as what we have created above is an array.\nWe will utilize the indexed memory mode where the memory address is determined by a base address, an offset address to add to the base address and the size of the data element, in our case an integer of 4 bytes and an index to determine which data element to select.\nKeep in mind an array starts with index 0. Therefore in the above code we see 1 moving into edi which is the 2nd index which ultimately goes into ebx.\nWe will dive deeper into this in the next lesson we debug however I want you to take some time to study the code above and get a good grasp of what is going on.\nKeep in mind to assemble we type:\nas –32 -o indirect_addressing_with_registers.o indirect_addressing_with_registers.s\nTo link the object file we type:\nld -m elf_i386 -o indirect_addressing_with_registers indirect_addressing_with_registers.o \nI look forward to seeing you all next week when we dive into debugging our fifth assembly program!\n"},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"url":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","title":"Part 35 - ASM Debugging 5 [Indirect Addressing With Registers]","keywords":"","body":"Part 35 - ASM Debugging 5 [Indirect Addressing With Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fifth program we demonstrated how we can manipulate indirect addressing with registers.\n\n\nI want to start by addressing the question of why I use AT&T syntax. In previous lessons I provided many ways to easily convert back and forth between AT&T syntax and Intel syntax.\nI deliberately choose this path so that it forces you to be comfortable with the most complex flavor of x86. If you are confused with this syntax please review the prior lessons as I go through the differences between both.\nLet’s recap. We will use objdump to take a compiled binary such as the one above that we compiled in our last lesson and show how we can view it’s Intel source code.\nobjdump -d -M intel indirect_addressing_with_registers | grep _start.: -A24 \n\n\nNow back to our regularly scheduled program.\nLet’s load the binary into GDB and break on _start, step a few steps and examine 6 of the 11 values inside the constants label.\n\n\nWe then move the memory address of the constants label into edi and move the immediate value of 25 decimal into the second index of our array. This is in essence a source code hack as we are changing the original value of 8 to 25.\nIf you examine the source code you see line 18 where we load the value of 1 into edi. Keep in mind this is the second value as arrays are 0 based.\n\n\nYou can see we changed the value of 8 decimal into 25 as explained.\nThis is our first introduction to arrays in assembly language. It is critical that you understand how they work as you may someday be a Malware Analyst or Reverse Engineer looking at the compiled binary of any number of higher-level program compiled arrays.\nIn our next lesson we will manually hack one of the values in GDB. Keep in mind, we will have to overwrite the contents inside an actual memory address with an immediate value. The fun is only beginning!\nI look forward to seeing you all next week when we dive into hacking our fifth assembly program!\n"},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"url":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","title":"Part 36 - ASM Hacking 5 [Indirect Addressing With Registers]","keywords":"","body":"Part 36 - ASM Hacking 5 [Indirect Addressing With Registers]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s reexamine the source once more.\n\n\nLet’s once again load the binary into GDB and break on _start.\n\n\nAs we look above we see the command print *0x804909e. We see that it yields a value of 5 decimal. The binary at runtime puts the values inside the constants label to a respective memory address.\nIn this case we see that the pointer to 0x804909e or *0x804909e holds 5 decimal as we have stated above. An integer holds 4 bytes of data. The next value in our array will be stored in 0x80490a2. This memory location will hold the value of 8.\nIf we were to continue to advance through the array we would move 4 bytes to the next value and so forth. Remember each memory location in x86 32-bit assembly holds 4 bytes of data.\nLet’s hack!\n\n\nAfter we broke on _start and ran, we examined the array like we did in our prior lesson. Here we hack the value at 0x80490a2 to 66 decimal instead of 8 decimal and we can see that we successfully changed one element of the array.\nThis lesson is very important to understand how arrays are ultimately stored in memory and how to manipulate and hack them. If you have any questions, please leave them in the comments below.\nI look forward to seeing you all next week when we dive into programming our sixth assembly program!\n"},"pages/part-37-asm-program-6-cmov-instructions.html":{"url":"pages/part-37-asm-program-6-cmov-instructions.html","title":"Part 37 - ASM Program 6 [CMOV Instructions]","keywords":"","body":"Part 37 - ASM Program 6 [CMOV Instructions]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our sixth program we will demonstrate how we can work with CMOV instructions.\nBefore we dive into some code lets talk about CMOV is. CMOV can prevent the processor from utilizing the JMP instructions and speeds up the respective binary.\nThere are unsigned CMOV instructions such as:\nCMOVA or CMOVNBE = Above [Carry Flag or Zero Flag = 0]\nCMOVAE or CMOVNB = Above Or Equal [Carry Flag = 0]\nCMOVNC = Not Carry [Carry Flag = 0]\nCMOVB or CMOVNAE = Below [Carry Flag = 1]\nCMOVC = Carry [Carry Flag = 1]\nCMOVBE or CMOVNA = Below Or Equal [Carry Flag or Zero Flag = 1]\nCMOVE or CMOVZ = Equal [Zero Flag = 1]\nCMOVNE or CMOVNZ = Not Equal [Zero Flag = 0]\nCMOVP or CMOVPE = Parity [Parity Flag = 1]\nCMOVNP or CMOVPO = Not Parity [Parity Flag =0]\nThere are also signed CMOV instructions such as:\nCMOVGE or CMOVNL = Greater Or Equal [Sign Flag xor Overflow Flag = 0]\nCMOVL or CMOVNGE = Less [Sign Flag xor Overflow Flag = 1]\nCMOVLE or CMOVNG = Less Or Equal [Sign Flag xor Overflow Flag or ZF = 1]\nCMOVO = Overflow [Overflow Flag = 1]\nCMOVNO = Not Overflow [Overflow Flag = 0]\nCMOVS = Sign NEGATIVE [Sign Flag = 1]\nCMOVNS = Not Sign POSITIVE [Sign Flag = 0]\nKeep in mind to review the relationships between the unsigned and signed operations. The unsigned instructions utilize the CF, ZF and PF to determine the difference between the two operands where the signed instructions utilize the SF and OF to indicate the condition of the comparison between the operands.\nIf you need a refresher on the flag please review Part 14 on Flags in this series.\nThe CMOV instructions rely on a mathematical instruction that sets the EFLAGS register to operate and therefore saves the programmer to use JMP statements after the compare statement. Lets examine some source code.\n\n\nOk lets begin with lines 21 and 22. This is nothing new that we have experienced as we are simply moving the array into ebx.\nOn line 24 we see the find_smallest_value function to where we are cycling through the array and using the CMOVB to find the lowest value ultimately.\nWe see cmp %ebx, %eax to which cmp subtracts the first operand from the second and sets the EFLAGS register appropriately. At this point the cmovb is used to replace the value in ebx with the value in eax if the value is smaller than what was originally in the ebx register.\nAfter we exit the loop we see three sets of sys_writes to first display our message, second to display our converted integer to ascii value and then finally a period and line feed.\nKeep in mind to assemble we type:\nas –32 -o cmov_instructions.o cmov_instructions.s\nTo link the object file we type:\nld -m elf_i386 -o cmov_instructions cmov_instructions.o \nI look forward to seeing you all next week when we dive into debugging our sixth assembly program!\n"},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"url":"pages/part-38-asm-debugging-6-cmov-instructions.html","title":"Part 38 - ASM Debugging 6 [CMOV Instructions]","keywords":"","body":"Part 38 - ASM Debugging 6 [CMOV Instructions]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLets re-examine some source code.\n\n\nLets break on 0x08048092 which is line 31. Lets do a r to run and then type print $ebx. We can see the value of 7.\n\n\nOk now lets break on 0x080480b1 which is line 46. Remember when we are examining the value of answer, it has been converted to its ascii printable equivalent so in order to see the value of ‘7’ you would type x/1c &answer.\n\n\nI look forward to seeing you all next week when we dive into hacking our sixth assembly program!\n"},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"url":"pages/part-39-asm-hacking-6-cmov-instructions.html","title":"Part 39 - ASM Hacking 6 [CMOV Instructions]","keywords":"","body":"Part 39 - ASM Hacking 6 [CMOV Instructions]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s bring the binary into gdb.\n\n\nLet’s now run the binary. We see that the smallest value is 7 which is expected. Our final bit of instruction in this tutorial will teach you how to jump to any part of the execution that you so choose.\n\n\nWe set $eip = 0x080480dd which is the exit routine. We see now that it bypasses all of the code from the nop instruction when we broke on _start. You now can use this command to jump anywhere inside of any binary within the debugger.\nI look forward to seeing you all next week when we wrap up our tutorial series.\n"},"pages/part-40-conclusion.html":{"url":"pages/part-40-conclusion.html","title":"Part 40 - Conclusion","keywords":"","body":"Part 40 - Conclusion\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThis has been an extensive and hopefully beneficial tutorial series for you all. Understanding assembly language is so important to everyone when trying to understand how Malware works in addition to programming no matter bare-metal assembly, c, c++ or even Java, Python or iOS or Android development.\nIf you are looking to pursue a career in Reverse Engineering, assembly will be second nature to you. Most of us will pursue higher-level language development as computers and devices are significantly more powerful today which allows for rapid development languages.\nI want to thank you all for joining me on this tutorial series and look forward to you all making an impact in the future of tomorrow!\n"},"pages/arm-32-course-1.html":{"url":"pages/arm-32-course-1.html","title":"ARM-32 Course 1","keywords":"","body":"\n    The 32-bit ARM Architecture (Part 1)\n\n\n    Let's dive in rightaway!\n"},"pages/part-1-the-meaning-of-life.html":{"url":"pages/part-1-the-meaning-of-life.html","title":"Part 1 – The Meaning Of Life","keywords":"","body":"Part 1 - The Meaning Of Life\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nWhy C++? I primarily develop in Python professionally as an Automator however with every day passing we see another Ransomware attack that further cripples society in a catastrophic way.\nThis course is a comprehensive series where we learn every facet of C++ and how it relates to the ARM 64 architecture as we will reverse engineer each step in ARM 64 assembly language to get a full understanding of the environment.\nThere are roughly over 2,000 hacks a day world-wide and so few who truly understand how the hacks are executed on a fundamental level. This course is going to take a very basic and step-by-step approach to understanding low-level architecture as it relates to the ARM 64.\nIn our next lesson we will set up our development environment.\n"},"pages/part-2-number-systems.html":{"url":"pages/part-2-number-systems.html","title":"Part 2 - Number Systems","keywords":"","body":"Part 2 – Number Systems\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nAt the core of the microprocessor are a series of binary numbers which are either +5V (on or 1) or 0V (off or 0). Each 0 or 1 represents a bit of information within the microprocessor. A combination of 8 bits results in a single byte.\nBefore we dive into binary, lets examine the familiar decimal. If we take the number 2017, we would understand this to be two thousand and seventeen.\n\n\nLet’s take a look at the binary system and the basics of how it operates.\n\n\nIf we were to convert a binary number into decimal, we would very simply do the following. Lets take a binary number of 0101 1101 and as you can see it is 93 decimal.\n\n\nAdding the values in the value column gives us 0 + 64 + 0 + 16 + 8 + 4 + 0 + 1 = 93 decimal.\nIf we were to convert a decimal number into binary, we would check to see if a subtraction is possible relative to the highest order bit and if so, a 1 would be placed into the binary column to which the remainder would be carried into the next row. Let’s consider the example of the decimal value of 120 which is 0111 1000 binary.\n\n\n1)Can 128 fit inside of 120: No, therefore 0.\n2)Can 64 fit inside of 120: Yes, therefore 1, then 120 – 64 = 56.\n3)Can 32 fit inside of 56: Yes, therefore 1, then 56 – 32 = 24.\n4)Can 16 fit inside of 24: Yes, therefore 1, then 24 – 16 = 8.\n5)Can 8 fit inside of 8: Yes, therefore 1, then 8 – 8 = 0.\n6)Can 4 fit inside of 0: No, therefore 0.\n7)Can 2 fit inside of 0: No, therefore 0.\n8)Can 1 fit inside of 0: No, therefore 0.\nWhen we want to convert binary to hex we simply work with the following table.\n\n\nLets convert a binary number such as 0101 1111 to hex. To do this we very simply look at the table and compare each nibble which is a combination of 4 bits. Keep in mind, 8 bits is equal to a byte and 2 nibbles are equal to a byte.\n0101 = 5\n1111 = F\nTherefore 0101 1111 binary = 0x5f hex. The 0x notation denotes hex.\nTo go from hex to binary it’s very simple as you have to simply do the opposite such as:\n0x3a = 0011 1010\n3 = 0011\nA = 1010\nIt is important to understand that each hex digit is a nibble in length therefore two hex digits are a byte in length.\nTo convert from hex to decimal we do the following:\n0x5f = 95\n5 = 5 x 16^1 = 5 x 16 = 80\nF = 15 x 16^0 = 15 x 1 = 15\nTherefore we can see that 80 + 15 = 95 which is 0x5f hex.\nFinally to convert from decimal to hex. Lets take the number 850 decimal which is 352 hex.\n\n\nWe put the numbers together from bottom to the top and we get 352 hex.\n“Why the hell would I waste my time learning all this crap when the computer does all this for me!”\nIf you happen to know any reverse engineers please if you would take a moment and ask them the above question.\nThe reality is, if you do NOT have a very firm understanding of how all of the above works, you will have a hard time getting a grasp on how the ARM processor registers hold and manipulate data. You will also have a hard time getting a grasp on how the ARM processor deals with a binary overflow and it’s effect on how carry operations work nor will you understand how compare operations work or even the most basic operations of the most simple assembly code.\nI am not suggesting you memorize the above, nor am I suggesting that you do a thousand examples of each. All I ask is that you take the time to really understand that literally everything and I mean everything goes down to binary bits in the processor.\nWhether you are creating, debugging or hacking an Assembly, Python, Java, C, C++, R, JavaScript, or any other new language application that hits the street, ultimately everything MUST go down to binary 0 and 1 to which represent a +5V or 0V.\nWe as humans operate on the base 10 decimal system. The processor works on a base 16 (hex) system. The registers we are dealing with in conjunction with Linux are addressed in 32-bit sizes. When we begin discussion of the processor registers, we will learn that each are 32-bits wide (technically the BCM2837 are 64-bit wide however our version of Linux that we are working with is 32-bit therefore we only address 32-bits of each register).\nNext week we will dive into binary addition! Stay tuned!\n"},"pages/part-3-binary-addition.html":{"url":"pages/part-3-binary-addition.html","title":"Part 3 - Binary Addition","keywords":"","body":"Part 3 – Binary Addition\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary addition can occur in one of four different fashions:\n0 + 0 = 0\n1 + 0 = 1\n0 + 1 = 1\n1 + 1 = 0 (1) [One Plus One Equals Zero, Carry One]\n\n\nKeep in mind the (1) means a carry bit. It very simply means an overflow.\nLets take the following 4-bit nibble example:\n  0111\n+ 0100\n= 1011\n\n\nWe see an obvious carry in the 3rd bit. If the 8th bit had a carry then this would generate a carry flag within the CPU.\nLet’s examine an 8-bit number:\n  01110000\n+ 01010101\n= 11000101\n\n\nIf we had:\n     ﻿﻿11110000\n+    11010101\n= (1)11000101\n\n\nHere we see a carry bit which would trigger the carry flag within the CPU to be 1 or true. We will discuss the carry flag in later tutorials. Please just keep in mind this example to reference as it is very important to understand.\nNext week we will dive into binary subtraction! Stay tuned!\n"},"pages/part-4-binary-subtraction.html":{"url":"pages/part-4-binary-subtraction.html","title":"Part 4 - Binary Subtraction","keywords":"","body":"Part 4 – Binary Subtraction\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary subtraction is nothing more than adding the negative value of the number to be subtracted. For example 8 + - 4, the starting point would be zero to which we move 8 points in the positive direction and then four points in the negative direction yielding a value of 4.\nWe represent a sign bit in binary to which bit 7 indicates the sign of number where 0 is positive and 1 is negative.\n\n\nThe above would represent -2.\nWe utilize the concept of twos compliment which inverts each bit and then finally adding 1.\nLets examine binary 2.\n00000010\nInvert the bits.\n11111101\n\n\nLet’s examine a subtraction operation:\n\n\nSo what is the (1) you may ask, that is the overflow bit. In future tutorials we will examine what we refer to as the overflow flag and carry flag.\nNext week we will dive into word lengths! Stay tuned!\n"},"pages/part-5-word-lengths.html":{"url":"pages/part-5-word-lengths.html","title":"Part 5 - Word Lengths","keywords":"","body":"Part 5 – Word Lengths\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe system on chip we are working with has a 32-bit ARM CPU. 32-bits is actually 4 bytes of information which make up a word.\nIf you remember my prior tutorial on x86 Assembly, a word was 16-bits. Every different architecture defines a word differently.\nThe most significant bit of a word for our ARM CPU is located at bit 31 therefore a carry is generated if an overflow occurs there.\nThe lowest address in our architecture starts at 0x00000000 and goes to 0xFFFFFFFF. The processor sees memory in word blocks therefore every 4 bytes. A memory address associated with the start of a word is referred to as a word boundary and is divisible by 4. For example here is our first word:\n0x00000000\n0x00000004\n0x00000008\n0x0000000C\n\n\nSo why is this important? There is the concept of fetching and executing to which the processor deals with instructions to which it must work in this fashion for proper execution.\nBefore we dive into coding assembly it is critical that you understand some basics of how the CPU operates. There will be a number of more lectures going over the framework so I appreciate everyone hanging in there!\nNext week we will dive into registers! Stay tuned!\n"},"pages/part-6-registers.html":{"url":"pages/part-6-registers.html","title":"Part 6 - Registers","keywords":"","body":"Part 6 – Registers\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOur ARM microprocessor has internal storage which make any operation must faster as there is no external memory access needed. There are two modes, User and Thumb. We will be focusing on User Mode as we are ultimately focused on developing for a system on chip within a Linux OS rather than bare-metal programming which would be better suited on a microcontroller device.\nIn User Mode we have 16 registers and a CPSR register to which have a word length each which is 32-bits each or 8 bytes each.\nRegisters R0 to R12 are multi-purpose registers to which R13 – R15 have a unique purpose as well as the CPSR. Lets take a look at a simple table to illustrate.\nR0 GPR (General-Purpose Register)\nR1 GPR (General-Purpose Register)\nR2 GPR (General-Purpose Register)\nR3 GPR (General-Purpose Register)\nR4 GPR (General-Purpose Register)\nR5 GPR (General-Purpose Register)\nR6 GPR (General-Purpose Register)\nR7 GPR (General-Purpose Register)\nR8 GPR (General-Purpose Register)\nR9 GPR (General-Purpose Register)\nR10 GPR (General-Purpose Register)\nR11 GPR (General-Purpose Register)\nR12 GPR (General-Purpose Register)\nR13 Stack Pointer\nR14 Link Register\nR15 Program Counter\nCPSR Current Program Status Register\n\n\nIt is critical that we understand registers in a very detailed way. At this point we understand R0 – R12 are general purpose and will be used to manipulate data as we build our programs and additionally when you are hacking apart or reverse engineering binaries from a hex dump on a cell phone or other ARM device, no matter what high-level language it is written in, it must ultimately come down to assembly which you need to understand registers and how they work to grasp and understand of any such aforementioned operation.\nThe chip we are working with is known as a load and store machine. This means we load a register with the contents of a register or memory location and we can store a register with the contents of a memory or register location. For example:\nldr, r4, [r10] @ \n    load r4 with the contents of r10, if r10 had the decimal value of \n    say 22, 22 would go to r4\n\nstr, r9, [r4] @ \n    store r9 contents into location in r4, if r9 had 0x02 hex, \n    0x02 would be stored into location r4\n\n\nThe @ simply indicates to the compiler that what follows it on a given line is a comment and to be ignored.\nThe next few weeks we will take our time and look at each of the special purpose registers so you have a great understanding of what they do.\nNext week we will dive into more information on the program counter! Stay tuned!\n"},"pages/part-7-program-counter.html":{"url":"pages/part-7-program-counter.html","title":"Part 7 - Program Counter","keywords":"","body":"Part 7 – Program Counter\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe will dive into the registers over the coming weeks to make sure you obtain a firm understand of their role and what they can do.\nWe begin with the PC or program counter. The program counter is responsible for directing the CPU to what instruction will be executed next. The PC literally holds the address of the instruction to be fetched next.\nWhen coding you can refer to the PC as PC or R15 as register 15 is the program counter. You MUST treat it with care as you can set it wrong and crash the executable quite easily.\nYou can control the PC directly in code:\nmov r15, 0x00000000\n\n\nI would not suggest trying that as we are not in Thumb mode and that will cause a fault as you would be going to an OS area rather than designated program area.\nRegarding our ARM processor, we follow the standard calling convention meaning params are passed by placing the param values into regs R0 – R3 before calling the subroutine and the subroutine returns a value by putting it in R0 before returning.\nThis is important to understand when we think about how execution flows when dealing with a stack operation and the link register which we will discuss in future tutorials.\nWhen you are hacking or reversing a binary, controlling the PC is essential when you want to test for subroutine execution and learning about how the program flows in order to break it down and understand exactly what it is doing.\nNext week we will dive into more information on the CPSR! Stay tuned!\n"},"pages/part-8-cpsr.html":{"url":"pages/part-8-cpsr.html","title":"Part 8 - CPSR","keywords":"","body":"Part 8 - CPSR\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe CPSR register stores information about the program and the results of a particular operation. Bits that are in the respective registers have pre-assigned conditions that are tested for an occurrence which are flags.\nThere are 32-bits that total this register. The highest 4 we are concerned with most which are:\nBit 31 – N = Negative Flag\nBit 30 – Z = Zero Flag\nBit 29 – C = Carry Flag (UNSIGNED OPERATIONS)\nBit 28 – V = Overflow flag (SIGNED OPERATIONS)\nWhen the instruction completes the CPSR can get updated if it falls into one of the aforementioned scenarios. If one of the conditions occurs, a 1 goes into the respective bits.\nThere are two instructions that directly effect the CPSR flags which are CMP and CMN. CMP is compare such as:\nCMP R1, R0 @ notational subtraction where R1 – R0 and if the result is 0, bit 30 Z would be set to 1\n\n\nThe most logical command that usually follows is BEQ = branch if equal, meaning the zero flag was set and branches to another label within the code.\nRegarding CMP, if two operands are equal then the result is zero. CMN makes the same comparison but with the second operand negated for example:\nCMN R1, R0 @ R1 - (-R0) or R1 + R0\n\n\nWhen dealing with the SUB command, the result would NOT update the CPSR you would have to use the SUBS command to make any flag update respectively.\nNext week we will dive into more information on the Link Register! Stay tuned!\n"},"pages/part-9-link-register.html":{"url":"pages/part-9-link-register.html","title":"Part 9 - Link Register","keywords":"","body":"Part 9 - Link Register\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe Link Register, R14, is used to hold the return address of a function call.\nWhen a BL (branch with link) instruction performs a subroutine call, the link register is set to the subroutine return address. BL jumps to another location in the code and when complete allows a return to the point right after the BL code section. When the subroutine returns, the link register returns the address back to the program counter.\nThe link register does not require the writes and reads of the memory containing the stack which can save a considerable percentage of execution time with repeated calls of small subroutines.\nWhen BL has executed, the return address which is the address of the next instruction to be executed, is loaded into the LR or R14. When the subroutine has finished, the LR is copied directly to the PC (Program Counter) or R15 and code execution continues where it was prior in the sequential code source.\nCODE TIME! Don’t be discouraged if you don’t understand everything in the code example here. It will become clear over the next few lessons.\n\n\nTo compile:\nas -o lr_demo.o lr_demo.s\n\nld -o lr_demo lr_demo.o\n\n\nThe simple example I created here is pretty self-explanatory. We start and proceed to the no_return subroutine and proceed to the my_function subroutine then to the wrap_up subroutine and finally exit.\n\n\nIt is necessary that we jump into GDB which is our debugger to see exactly what happens with each step:\nAs you can see with every step inside the debugger it shows you exactly the progression from no_return to my_function skipping wrap_up until the program counter gets the address from the link register.\n\n\nHere we see the progression from wrap_up to exit.\nThis is a fundamental operation when we see next week how the stack operates as the LR is an essential part of this process.\nNext week we will dive into the Stack Pointer! Stay tuned!\n"},"pages/part-10-stack-pointer.html":{"url":"pages/part-10-stack-pointer.html","title":"Part 10 - Stack Pointer","keywords":"","body":"Part 10 - Stack Pointer\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe Stack is an abstract data type to which is a LIFO (Last In First Out). When we push a value onto the stack it goes into the Stack Pointer and when it is popped off of the stack it pops the value off of the stack and into a register of your choosing.\nCODE TIME! Again, don’t be discouraged if you don’t understand everything in the code example here. It will become clear over the next few lessons.\n\n\nTo compile:\nas -o sp_demo.o sp_demo.s\n\nld -o sp_demo sp_demo.o\n\n\nOnce again lets load the binary into GDB to see what is happening.\n\n\nLets step into one time.\n\n\nWe see hex 30 or 48 decimal moved into r7. Lets step into again.\n\n\nWe see the value of the sp change from 0x7efff3a0 to 0xefff39c. That is a movement backward 4 bytes. Why the heck is the stack pointer going backward you may ask!\nThe answer revolves around the fact that the stack grows DOWNWARD. When we say the top of the stack you can imagine a series of plates being placed BENEATH of each other.\nOriginally the sp was at 0x7efff3a0.\n\n\nWhen we pushed r7 onto the stack, the new value of the Stack Pointer is now 0x7efff39c so we can see the Stack truly grows DOWNWARD in memory.\n\n\nNow lets step into again.\n\n\nWe can see the value of hex 10 or decimal 16 moved into r7. Notice the sp did not change.\nBefore we step into again, lets look at the value inside the sp.\n\n\nLets step into again.\n\n\nWe see the value in the stack was popped off the stack and put back into r7 therefore the value of hex 30 is back in r7 as well as the sp is back at 0x73fff3a0.\n\n\nPlease take the time to type out the code, compile and link it and then step through the binary in GDB. Stack operations are critical to understanding Reverse Engineering and Malware Analysis as well as any debugging of any kind.\nNext week we will dive into ARM Firmware Boot Procedures.\n"},"pages/part-11-arm-firmware-boot-procedures.html":{"url":"pages/part-11-arm-firmware-boot-procedures.html","title":"Part 11 - ARM Firmware Boot Procedures","keywords":"","body":"Part 11 - ARM Firmware Boot Procedures\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s take a moment to talk about what happens when we first power on our Raspberry Pi device.\nAs soon as the Pi receives power, the graphics processor is the first thing to run as the processor is held in a reset state to which the GPU starts executing code. The ROM reads from the SD card and reads bootcode.bin to which gets loaded into memory in C2 cache and turns on the rest of the RAM to which start.elf then loads.\nThe start.elf is an OS for the graphics processor and reads config.txt to which you can mod. The kernel.img then gets loaded into 0x8000 in memory which is the Linux kernel.\nOnce loaded, kernel.img turns on the CPU and starts running at 0x8000 in memory.\nIf we wanted, we could create our own kernel.img to which we can hard code machine code into a file and replace the original image and then reboot. Keep in mind the ARM word size is 32 bit long which go from bit 0 to 31.\nAs stated, when kernel.img is loaded the first byte, which is 8-bits, is loaded into address 0x8000.\nLets open up a hex editor and write the following:\nFE FF FF EA\nSave the file as kernel.img and reboot.\n“Ok nothing happens, this sucks!”\nActually something did happen, you created your first bare-metal firmware! Time to break out the champagne!\nWhen the Pi boots, the below code when it reached kernel.img loads the following:\nFE FF FF EA\n@ address 0x8000, 0xfe gets loaded.\n@ address 0x8001, 0xff gets loaded.\n@ address 0x8002, 0xff gets loaded.\n@ address 0x8003, 0xea gets loaded.\n“So what the hell is really going on?”\nThis set of commands simply executes an infinite loop.\nReview the datasheet:\nhttps://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdf\nThe above code has 3 parts to it:\n1)Conditional – Set To Always\n2)Op Code – Branch\n3)Offset – How Far To Move Within The Current Location\nCondition – bits 31-28: 0xe or 1110\nOp Code – bits 27-24: 0xa or 1010\nOffset – bits 23-0 -2\nI know this may be a lot to wrap your mind around however it is critical that you take the time and read the datasheet linked above. Do not cut corners if you truly have the passion to understand the above. READ THE DATASHEET!\nI will go through painstaking efforts to break everything down step-by-step however there are exercises like the above that I am asking you to review the datasheet above so you learn how to better understand where to look when you are stuck on a particular routine or set of machine code. This is one of those times I ask you to please read and research the datasheet above!\n“I’m bored! Why the hell does this crap matter?”\nGlad you asked! The single most dangerous malware on planet earth today is that of the root-kit variety. If you do not have a basic understanding of the above, you will never begin to even understand what a root-kit is as you progress in your understanding.\nAnyone can simply replace the kernel.img file with their own hacked version and you can have total control over the entire process from boot.\nNext week we will dive into the Von Neumann Architecture.\n"},"pages/part-12-von-neumann-architecture.html":{"url":"pages/part-12-von-neumann-architecture.html","title":"Part 12 - Von Neumann Architecture","keywords":"","body":"Part 12 - Von Neumann Architecture\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nARM is a load and store machine to which the Arithmetic Logic Unit only operates on the registers themselves and any data that needs to be stored out to RAM, the control unit moves the data between memory and the registers which share the same data bus.\n\n\nThe CPU chip of this architecture holds a control unit and the arithmetic logic unit (along with some local memory) and the main memory is in the form of RAM sticks located on the motherboard.\nA stored-program digital computer is one that keeps its program instructions, as well as its data, in read-write, random-access memory or RAM.\nNext week we will dive into the Instruction Pipeline.\n"},"pages/part-13-instruction-pipeline.html":{"url":"pages/part-13-instruction-pipeline.html","title":"Part 13 - Instruction Pipeline","keywords":"","body":"Part 13 - Instruction Pipeline\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe processor works with three separate phases which are:\n1)Fetch Phase – The control unit grabs the instruction from memory and loads it into the instruction register.\n2)Decode Phase – The control unit configures all of the hardware within the processor to perform the instruction.\n3)Execute Phase – The processor computes the result of the instruction or operation.\nWhen the processor processes instruction 1 we refer to it as being in the fetch phase. When the processor processes instruction 2, instruction 1 goes into the decode phase and instruction 2 goes into the fetch phase. When the processor processes instruction 3, instruction 2 goes into the decode stage and instruction 1 goes into the execute stage.\n\n\nKeep in mind, if a branch instruction occurs, the pipeline might be flushed and start over again with a fresh set of cycles.\nYou now have a strong basis and background of ARM Assembly and how it works regarding its load and store capability between memory and the respective registers and the basics of how the instruction set flows.\nNext week we will dive into our first C++ program!\n"},"pages/part-14-add.html":{"url":"pages/part-14-add.html","title":"Part 14 - ADD","keywords":"","body":"Part 14 - ADD\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn ARM Assembly, we have three instructions that handle addition, the first being ADD, the second ADC (Add With Carry) and the final ADDS (Set Flag). This week we will focus on ADD.\nLet’s look at an example to illustrate:\n\n\nHere we see that we move decimal 67 into r1 and decimal 53 into r2. We then add r1 and r2 and put the result into r0.\n\"So what the heck is all that and why should I care?\"\nThis series is going to be unlike any other in it's class. The goal is to take small pieces of code and see exactly what it does. If you are going to understand how to reverse a binary or malware of any kind, it is critical that you understand the basics. Learning ARM Assembly basics will help you when reversing an iPhone or Android. This tutorial series is going to work to take extremely small bites of code and talk about:\n1)The Code: (Here) we speak briefly about what the code does.\n2)The Debug: We break down the binary in the GDB Debugger and step though each instruction and see what specifically it does to program flow, register values and flags.\n3)The Hack: We hack a piece of the code to make it do whatever WE want!\nThis approach will allow you to spend just a few minutes each week to get a good grasp on what is going on behind the scenes.\nNext week we will dive into Debugging ADD.\n"},"pages/part-15-debugging-add.html":{"url":"pages/part-15-debugging-add.html","title":"Part 15 - Debugging ADD","keywords":"","body":"Part 15 - Debugging ADD\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our ADD example below:\n\n\nAgain we see that we move decimal 67 into r1 and decimal 53 into r2. We then add r1 and r2 and put the result into r0.\nLet’s compile:\nas -o add.o add.s\nld -o add add.o\nLet’s bring into GDB to debug:\ngdb -q add\n\n\nWe can see that when we b _start, break on start and r, run we see the disassembly. If you do an i r we see the info registers where we notice our cpsr is 0x10.\nAs we step again and info registers:\n\n\nWe notice 0x43 hex or 67 decimal into r1. We also notice that the flags are unchanged (cpsr 0x10).\nLet’s step again and info registers:\n\n\nWe can see r0 now holds 0x78 hex or 120 decimal. We successfully saw the add instruction in place and we again notice that the flags register (cpsr) remains unchanged by this operation.\nNext week we will dive into Hacking ADD.\n"},"pages/part-16-hacking-add.html":{"url":"pages/part-16-hacking-add.html","title":"Part 16 - Hacking ADD","keywords":"","body":"Part 16 - Hacking ADD\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s again review our ADD example below:\n\n\nLet’s debug:\n\n\nWe see the value of 67 decimal is being moved into r1 below:\n\n\nLet’s hack! Lets set r1 = 66!\n\n\nNow we see we have hacked the program so when it adds the values it will have a different output. If you remember back to the last lecture, r0 = 120. Here we see we have hacked r1 and now the value of r0 is 119!\n\n\nThis is the power of understanding assembly. This is a VERY simple example however with each new series as I have stated we will create a program, debug and hack it.\nThis combination of instructions will help you to get hands on experience when learning how to have absolute control over an application and in the case of malware reverse engineering gives you the ability to make the binary do exactly what you want!\nNext week we will dive into ADDS.\n"},"pages/part-17-adds.html":{"url":"pages/part-17-adds.html","title":"Part 17 - ADDS","keywords":"","body":"Part 17 - ADDS\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nADDS is the same as ADD except it sets the flags accordingly in the CPSR.\nLet’s look at an example to illustrate:\n\n\nWe add 100 decimal into r1, 4,294,967,295 into r2. We then add r1 and r2 and place in r0.\nWe see adds which sets the flags in the CPSR. We have to remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.\nYou can compile the above by:\nas -o adc.o adc.s\nld -o adc adc.o\n\n\nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nTherefore if the value in binary was 0110 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag SET\nCarry Flag SET\nOverflow Flag NOT Set \nIt is critical that you compile, debug and hack each exercise in order to understand what is going on here.\nNext week we will dive into Debugging ADDS.\n"},"pages/part-18-debugging-adds.html":{"url":"pages/part-18-debugging-adds.html","title":"Part 18 – Debugging ADDS","keywords":"","body":"Part 18 – Debugging ADDS\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code:\n\n\nWe again add 100 decimal into r1, 4,294,967,295 into r2. We then add r1 and r2 and place in r0.\nLets debug:\n\n\nWe again see adds which sets the flags in the CPSR. We have to remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.\nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR at 10 hex. 10 hex in binary is 0001.\nTherefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag NOT SET\nOverflow Flag Set \nThere is nothing in code above which set the Overflow Flag however in it’s natural state upon executing this binary it is set.\nLets step through the program:\n\n\nWe see 64 hex or 100 decimal moved into r1 as expected. No change in the CPSR. Lets step some more.\n\n\nWe see the addition that transpires above and notice the value in r0 is 99 decimal after 100 decimal and 4294967295 decimal were added together. How is that possible? The answer is simple, we overflowed the 32-bit register of r0 from this addition.\nIf we examine the CPSR we now see 20000010 hex or 0010 0000 0000 0000 0000 0000 0001 0000 binary. We only have to focus on the most significant bits which are 0010:\nThe value in binary is 0010 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag SET\nOverflow Flag NOT Set\nWe see that the Carry Flag was set and the Overflow Flag was NOT set. Why is that?\nThe Carry Flag is a flag set when two unsigned numbers were added and the result is larger than the register where it is saved. We are dealing with a 32-bit register. We are also dealing with unsigned numbers therefore the CF is set and the OF was not as the OF flag deals with signed numbers.\nNext week we will dive into Hacking ADDS.\n"},"pages/part-19-hacking-adds.html":{"url":"pages/part-19-hacking-adds.html","title":"Part 19 – Hacking ADDS","keywords":"","body":"Part 19 – Hacking ADDS\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s once again re-examine our code:\n\n\nWe again add 100 decimal into r1, 4,294,967,295 into r2. We then add r1 and r2 and place in r0.\nLets debug:\n\n\nWe again see adds which sets the flags in the CPSR. We have to remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.\nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR at 10 hex. 10 hex in binary is 0001.\nTherefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag NOT SET\nOverflow Flag Set \nLets take a look if we step again:\n\n\nWe see 4294967295 decimal or 0xffffffff in r2. We know if we step again we will cause the CPSR to change from 0001 to 0010 which means:\nThe value in binary is 0010 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag SET\nOverflow Flag NOT Set\nThis action sets the carry flag. However lets hack:\n\n\nWe hacked r2 and changed the value to 1 decimal and 0x1 hex. NOW we know before the CPSR went to 0010 last time however now that we hacked this, lets see what happens to the CPSR when we step.\n\n\nBAM! We hacked it and see r0 is 101 and therefore did NOT trigger the carry flag and kept the CPSR at 0x10 hex which means 0001 binary which means:\nTherefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag NOT SET\nOverflow Flag Set \nIt is so important that you understand this lesson in its entirety. If not, please review the last two weeks lessons.\nNext week we will dive into ADC.\n"},"pages/part-20-adc.html":{"url":"pages/part-20-adc.html","title":"Part 20 – ADC","keywords":"","body":"Part 20 – ADC\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nADC is the same as ADD except it adds a 1 if the carry flag is set. We need to pay particular attention to the CPSR or Status Register when we work with ADC.\nLet’s look at an example to illustrate:\n\n\nWe add 100 decimal into r1, 4,294,967,295 into r2, 100 decimal into r3 and 100 decimal into r4. We then add r1 and r2 and place in r0 and then add r3 and r4 and place into r5.\nWe see adds which sets the flags in the CPSR. We have to once again remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.\nYou can compile the above by:\nas -o adc.o adc.s\nld -o adc adc.o\n\n\nI want you to ask yourself what is going to happen when r3(100 decimal) is added to r4(100 decimal)? What do you think the value of r5 will be with the above example of setting the flags with the adds result? Think about the first sentence in this tutorial and keep this in mind for the next tutorial.\nNext week we will dive into Debugging ADC.\n"},"pages/part-21-debugging-adc.html":{"url":"pages/part-21-debugging-adc.html","title":"Part 21 – Debugging ADC","keywords":"","body":"Part 21 – Debugging ADC\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTo recap, ADC is the same as ADD except it adds a 1 if the carry flag is set. We need to pay particular attention to the CPSR or Status Register when we work with ADC.\nLet’s review our code:\n\n\nWe add 100 decimal into r1, 4,294,967,295 into r2, 100 decimal into r3 and 100 decimal into r4. We then add r1 and r2 and place in r0 and then add r3 and r4 and place into r5.\nWe see adds which sets the flags in the CPSR. We have to once again remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.\nLast week I raised a question where I wanted you to ask yourself what is going to happen when r3(100 decimal) is added to r4(100 decimal)? What do you think the value of r5 will be with the above example of setting the flags with the adds result?\n\n\nOk so we add 100 decimal and 100 decimal together in r3 and r4 and we get 201 decimal in r5! Is something broken? ADC is the same as ADD except it adds a 1 if the carry flag is set. Therefore we get the extra 1 in r5.\nWe again need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR at 20000010 hex. The most significant bits of 20000010 hex in binary is 0010.\nTherefore if the value in binary was 0010 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT Set\nCarry Flag SET\nOverflow Flag NOT Set\nAs we can clearly see the carry flag was set. I hope you can digest and understand each of these very simple operations and how they have an effect on the CPSR.\nNext week we will dive into Hacking ADC.\n"},"pages/part-22-hacking-adc.html":{"url":"pages/part-22-hacking-adc.html","title":"Part 22 – Hacking ADC","keywords":"","body":"Part 22 – Hacking ADC\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTo recap again, ADC is the same as ADD except it adds a 1 if the carry flag is set. We need to pay particular attention to the CPSR or Status Register when we work with ADC.\nLet’s again review our code:\n\n\nWe add 100 decimal into r1, 4,294,967,295 into r2, 100 decimal into r3 and 100 decimal into r4. We then add r1 and r2 and place in r0 and then add r3 and r4 and place into r5.\n\n\nWe run the program and step to where we move 4,294,967,295 into r2. Let’s hack that value in r2 and change it to 100 decimal.\n\n\nLet’s step a few more times:\n\n\nOk so now we add 100 decimal and 100 decimal together in r3 and r4 and we get 200 decimal in r5! Do you remember last week when we had 201? Let’s examine the CPSR below.\nWe again need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR at 10 hex. The most significant bits of 10 hex in binary is 0001.\nTherefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:\nNegative Flag NOT Set\nZero Flag NOT Set\nCarry Flag NOT SET\nOverflow Flag Set\nAs we can clearly see the carry flag was NOT set. I hope you can digest and understand each of these very simple operations and how they have an effect on the CPSR. Please take the time and review last weeks lesson for comparison.\nNext week we will dive into SUB.\n"},"pages/part-23-sub.html":{"url":"pages/part-23-sub.html","title":"Part 23 – SUB","keywords":"","body":"Part 23 – SUB\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nSubtraction in ARM has four instructions which are SUB, SBC, RSB and RSC. We will start today with SUB.\nPlease keep in mind when you add the S suffix on the end of each such as SUBS, SBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags in the prior lessons so that you should have a firm grasp on this now.\nLet’s examine an example of SUB:\n\n\nTo compile:\nas -o sub.o sub.s\nld -o sub sub.o\n\n\nWe simply take 67 decimal and move into r1 and 53 decimal and move into r2 and subtract r1 – r2 and put the result in r0.\nNext week we will dive into SUB debugging.\n"},"pages/part-24-debugging-sub.html":{"url":"pages/part-24-debugging-sub.html","title":"Part 24 – Debugging SUB","keywords":"","body":"Part 24 – Debugging SUB\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nAs stated, subtraction in ARM has four instructions which are SUB, SBC, RSB and RSC. We will start today with SUB.\nPlease keep in mind when you add the S suffix on the end of each such as SUBS, SBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags in the prior lessons so that you should have a firm grasp on this now.\nLet’s re-examine our example of SUB:\n\n\nWe simply take 67 decimal and move into r1 and 53 decimal and move into r2 and subtract r1 – r2 and put the result in r0.\nLet’s debug.\n\n\nAs we can see the registers are clear. Lets step through and see what the value of r0 becomes.\n\n\nAs you can see above r0 now has decimal 14 which works as expected.\nNext week we will dive into SUB hacking.\n"},"pages/part-25-hacking-sub.html":{"url":"pages/part-25-hacking-sub.html","title":"Part 25 – Hacking SUB","keywords":"","body":"Part 25 – Hacking SUB\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nAs stated, subtraction in ARM has four instructions which are SUB, SBC, RSB and RSC. We will start today with SUB.\nPlease keep in mind when you add the S suffix on the end of each such as SUBS, SBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags in the prior lessons so that you should have a firm grasp on this now.\nLet’s re-examine our example of SUB:\n\n\nWe simply take 67 decimal and move into r1 and 53 decimal and move into r2 and subtract r1 – r2 and put the result in r0.\nLet’s hack.\n\n\nAs we can see the registers are clear. Lets step through and see what the value of r0 becomes when we do a little hacking.\n\n\nAs you can see above r0 now has decimal 17 which works as expected as we hacked the value of r2 to decimal 50 instead of decimal 53.\nI want to thank you all for taking this journey to learn ARM Assembly. This is the end of the series as I encourage you all to take what you have learned and continue to work through the ARM instruction set and continue your progress.\nThis tutorial’s purpose was to provide you a solid foundation in ARM Assembly and I believe we have done that. Thank you all and I look forward to seeing you all become future Reverse Engineers!\n"},"pages/arm-32-course-2.html":{"url":"pages/arm-32-course-2.html","title":"ARM-32 Course 2","keywords":"","body":"\n    The 32-bit ARM Architecture (Part 2)\n\n\n    Let's dive in rightaway!\n"},"pages/part-1-the-meaning-of-life-part-2.html":{"url":"pages/part-1-the-meaning-of-life-part-2.html","title":"Part 1 – The Meaning Of Life Part 2","keywords":"","body":"Part 1 – The Meaning Of Life Part 2\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWelcome to the ARM Reverse Engineering tutorial. This is the third tutorial series that I have done focusing on Assembly Language and Reverse Engineering.\nThe first series was on x86 Assembly and the second was on ARM Assembly. This series will be an expansion series on ARM focusing on ARM Reverse Engineering so rather than create programs directly in Assembly alone and then Reverse Engineer the binary in Assembly we will work with Assembly and C together and Reverse Engineer in Assembly so that you will get a flavor for a real-world series of applications and what it looks like disassembled.\nWe will not be working with GUI tools such as IDA Pro as we will be working with GDB in CLI shell. We will not be working in a traditional lab environment where we are going to put a binary into a debugger rather we are going to SSH into the ARM device and actually attach to a running process (PID) and Reverse Engineer the process as it is running.\nThe first 13 weeks will be an exact review of the ARM Assembly series as it is critical that we re-examine these concepts so that we have a very firm grasp when it comes time to reverse our binaries.\nI wanted to bring back the original quote below before we get started...\n“So if I go to college and learn Java will I make a million dollars and have nice things?”\nI felt it necessary to start out this tutorial series with such a statement. This is NOT an attack on Java as I have used Java in Android Development, Spring and JavaEE. In today’s Agile environment, rapid-development is reality. With the increased challenges in both the commercial market and the government sector, software development will continue to focus on more robust libraries that will do more with less. React, Python, Java, C# and the like will continue to grow not shrink as the race for project completion augments with each passing second of time.\nLike it or not, hardware is getting smaller and smaller and the trend is going from CISC to RISC. A CISC is your typical x86/x64 computer with a complex series of instructions. CISC computers will always exist however with the trend going toward cloud computing and the fact that RISC machines with a reduced instruction set are so enormously powerful today, they are the obvious choice for consumption.\nHow many cell phones do you think exist on earth today? Most of them are RISC machines. How many of you have a Smart TV or Amazon Echo or any number of devices considered part of the IOT or Internet Of Things? Each of these devices have one thing in common – they are RISC and all are primarily ARM based.\nARM is an advanced RISC machine. Compared to the very complex architecture of a CISC, most ARM systems today are what is referred to as a SoC or system on chip which is an integrated circuit which has all of the components of a computer and electronic system on a single chip. This includes RF functionality as well. These low-power embedded devices can run versions of Windows, Linux and many other advanced operating systems.\n“Well who cares about ARM, you can call it anything you want, I know Java and that’s all I need to know cause when I program it works everywhere so I don’t have to worry about anything under the hood.”\nI again just want you to reflect on the above statement for a brief moment. As every day continues to pass, more and more systems are becoming vulnerable to attack and compromise. Taking the time to understand what is going on under the hood can only help to curb this unfortunate reality.\nThis series will focus on ARM Reverse Engineering. We will work with a Raspberry Pi 3 which contains the Broadcom BCM2837 SoC with a 4x ARM Cortex-A53, 1.2GHz CPU and 1 GB LPDDR2 RAM. We will work with the Raspbian Jessie, Linux-based operating system. If you don’t own a Raspberry Pi 3, they are usually available for $35 on Amazon or any number of retailers. If you would like to learn more visit https://www.raspberrypi.org.\nWe will work solely in the terminal so no pretty pictures and graphics as we are keeping it to the hardcore bare-bones utilizing the GNU toolkit to compile and debug our code base.\n\nNext week we will dive into the binary number system and compare and contrast it with decimal and hexadecimal so we have a proper framework of understanding to move forward.\n"},"pages/part-11-firmware-boot-procedures.html":{"url":"pages/part-11-firmware-boot-procedures.html","title":"Part 11 - Firmware Boot Procedures","keywords":"","body":"Part 11 - Firmware Boot Procedures\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s take a moment to talk about what happens when we first power on our Raspberry Pi device.\nAs soon as the Pi receives power, the graphics processor is the first thing to run as the processor is held in a reset state to which the GPU starts executing code. The ROM reads from the SD card and reads bootcode.bin to which gets loaded into memory in C2 cache and turns on the rest of the RAM to which start.elf then loads.\nThe start.elf is an OS for the graphics processor and reads config.txt to which you can mod. The kernel.img then gets loaded into 0x8000 in memory which is the Linux kernel.\nOnce loaded, kernel.img turns on the CPU and starts running at 0x8000 in memory. \nIf we wanted, we could create our own kernel.img to which we can hard code machine code into a file and replace the original image and then reboot. Keep in mind the ARM word size is 32 bit long which go from bit 0 to 31. \nAs stated, when kernel.img is loaded the first byte, which is 8-bits, is loaded into address 0x800.\nLets open up a hex editor and write the following:\nFE FF FF EA\nSave the file as kernel.img and reboot.\n“Ok nothing happens, this sucks!”\nActually something did happen, you created your first bare-metal firmware! Time to break out the champagne! \nWhen the Pi boots, the below code when it reached kernel.img loads the following:\nFE FF FF EA\n@ address 0x8000, 0xfe gets loaded.\n@ address 0x8001, 0xff gets loaded.\n@ address 0x8002, 0xff gets loaded.\n@ address 0x8003, 0xea gets loaded.\n“So what the hell is really going on?”\nThis set of commands simply executes an infinite loop. \nReview the datasheet:\nhttps://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdf\nThe above code has 3 parts to it:\n1)Conditional – Set To Always\n2)Op Code – Branch\n3)Offset – How Far To Move Within The Current Location\nCondition – bits 31-28: 0xe or 1110\nOp Code – bits 27-24: 0xa or 1010\nOffset – bits 23-0 -2\nI know this may be a lot to wrap your mind around however it is critical that you take the time and read the datasheet linked above. Do not cut corners if you truly have the passion to understand the above. READ THE DATASHEET!\nI will go through painstaking efforts to break everything down step-by-step however there are exercises like the above that I am asking you to review the datasheet above so you learn how to better understand where to look when you are stuck on a particular routine or set of machine code. This is one of those times I ask you to please read and research the datasheet above!\n“I’m bored! Why the hell does this crap matter?”\nGlad you asked! The single most dangerous malware on planet earth today is that of the root-kit variety. If you do not have a basic understanding of the above, you will never begin to even understand what a root-kit is as you progress in your understanding.\nAnyone can simply replace the kernel.img file with their own hacked version and you can have total control over the entire process from boot.\nNext week we will dive into the Von Neumann Architecture.\n"},"pages/part-14-hello-world.html":{"url":"pages/part-14-hello-world.html","title":"Part 14 - Hello World","keywords":"","body":"Part 14 - Hello World\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we begin our journey into the world of C++ and gaining a better understanding of how C++ interacts with our ARM processor.\nThe prior lessons in this series focus on the basics of the ARM processor and touch upon its architecture and how everything ultimately translates down to Assembly Language and then ultimately opcodes into machine language.\nWe start with our first program in C++ which is our “Hello World” program. Let’s dive in and break each line down step-by-step and see how this language works. We will call this example1.cpp and save it to our device.\n#include \n \nint main(void) {\n    std::cout \n\n\n\nTo compile this we simply type:\ng++ example1.cpp -o example1\n\n\nWe simply then type:\n./example1\n\n\n\nSUCCESS! We see “Hello World” printed to the standard output or terminal!\nLets break it down line by line:\n#include  is referred to as a preprocessor statement. These preprocessor statements happen just before the compilation of the rest of the code. The #include keyword will find a file called iostream and take all of the contents of that file and paste it into the existing code we just created. These files are also called header files. \nWe call iostream because we need a declaration for a function called cout and endl. The cout function allows us to print text to the standard output or terminal and the endl function creates a new line after the text has been displayed.\nThe main section which is of type integer is the entry point into the main application or binary. You will notice a void inside the () which indicates that it does not have any parameters which will be passed into the function.\nThe std indicates a namespace which is quite simply a mechanism to organize code into logical groups in order to prevent name collisions when you are dealing with multiple libraries.\nYou will see many examples where they declare a using namespace std; however I will NEVER utilize this approach as it can cause naming collisions in more complex applications.\nThe  operator is referred to as an overloaded operator. They are essentially a function very similar to printf in the C language. We are simply moving the “Hello World” string into the cout function through the use of the  overloaded operator. We then push the endl which creates a new line to the console.\nThe final line is the return 0. Since our main function is of type int, we have to return something. In C++ 11 there is no need for this in the main function however is required for every other function. I will stick to tradition and simply include it.\nThe next stage is that we compile the file. The first thing that occurs is the entire contents of the iostream header goes into the source file as we discussed. The compile process is where the C++ code gets translated into machine code. The next stage of compilation occurs when the rest of the lines of our existing code are parsed through. Essentially we have all of the contents of iostream into a new file and then all of the contents of our existing file added to a single file.\nCompiling takes our text file the cpp file and converts it into an intermediate format called an obj file. An abstract syntax tree is created which is a conversion of constant data, variables and instructions.\nOnce the tree is created the code is generated. This means we now have machine code that our ARM CPU will execute. Every cpp file (translation units) which will have its own respective obj file associated with it. \nLinking takes our obj files, our compiled files, in addition to the C++ Standard Library and finds where each symbol and function is and link them all together into one executable.   \nThe concepts above may appear a bit confusing if you are new to programming however as you code and compile and later debug and hack in Assembly Language it will all become very clear and you will learn to master the processor.\nNext week we will dive into Debugging Hello World.\n"},"pages/part-15-debugging-hello-world.html":{"url":"pages/part-15-debugging-hello-world.html","title":"Part 15 - Debugging Hello World","keywords":"","body":"Part 15 - Debugging Hello World\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code from last week.\n\n\nLet’s debug! Let’s fire up GDB which is the GNU Debugger to which we will break down the C++ binary and step through it line-by-line in ARM Assembly.\n\n\nThis is the ARM disassembly that we are seeing. No matter what language you program in, it ultimately will go down to this level. \nThis might be a bit scary to you if you did not take my prior course on ARM Assembly. If you need to do a refresher, please link back to that series.\nYou are probably asking yourself why we are not debugging with the original source code and seeing how it matches nicely to the assembly. The answer is when you are a professional Reverse Engineer, you do not get the luxury of seeing source code when you are reversing binaries. \nThis is a childishly simple example and we will continue through the series with very simple examples so that you can learn effective techniques. We are using a text-based debugger here so that you fully understand what is going on and to also get some training if you had to ever attach yourself to a running process inside a foreign machine you will know how to properly debug or hack.\nI will focus SOLELY on this method rather than using a nice graphical debugger like IDA or the like so that you are able to manipulate at a very low-level.\nWe start with loading the link register into r11 and adding 4 to the stack pointer and then adding it to r11. This is simply a routine which will allow the binary to preserve the link register and setting up space on the stack.\nWe notice memory address 0x10750 being loaded from memory to the register r1. Let’s do a string examination and see what is located at that address.\n\n\nVoila! We see our string. “Hello World!” located at that memory address. \nLet’s set a breakpoint at main+16.\n\n\nLet’s take a look at our register values.\n\n\nLet’s now take a look at what is inside the r1 register and then step through the binary.\n\n\nWe see the “Hello World!” string now residing inside of r1 which resides at memory address 0x10848. Finally let’s continue through the binary.\n\n\nUnderstanding assembly and step-by-step debugging allows you to have complete and ultimate control over any binary! More complex binaries can cause you hours, days or weeks to truly Reverse Engineer however the techniques are the same just more time consuming.\nReverse Engineering is the most sophisticated form of analysis in advanced Computer Engineering. There are many tools that a professional Reverse Engineer uses however each of those tools have a usage and purpose however this technique is the most sophisticated and comprehensive.\nNext week we will dive into Hacking Hello World.\n"},"pages/part-16-hacking-hello-world.html":{"url":"pages/part-16-hacking-hello-world.html","title":"Part 16 - Hacking Hello World","keywords":"","body":"Part 16 - Hacking Hello World\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code from two weeks ago.\n\n\nLet’s debug once again.\n\n\nLet’s once again examine the contents of the string at memory address 0x10750 and continue through the execution of the program.\n\n\nAs you can see it holds the “Hello World!” string and when we continue through it echo’s back to the terminal as such.\nLet’s hack! Let’s now overwrite the value inside of the memory address with the string, “Hacked World!” and continue execution.\n\n\nWoohoo! Our first hack! As you can see as you understand Assembly you have ABSOLUTE control over the entire binary no matter what language it is written in. In this very simple example we were able to hack the value inside the memory address of 0x10750 to which when executed it echoed, “Hacked World!” to the terminal or standard output.\nLet’s again run the binary and do a disassembly.\n\n\nLet’s now do the same procedure however lets si 3x and examine the string inside of r1. We see that it contains, “Hello World!” as it has been successfully ldr (load from memory into the register) at main+12.\nLet’s now set r1 to “Hacked World!” and continue execution. As you can see we now hacked it coming out of the register rather than in memory. You can clearly begin to see there are a number of ways to hack anything and here is a simple example of two such ways. \n\n\nReverse Engineering is all about understanding how a program executes and hijacking execution flow and changing values to suit our purpose! Today you took your first step into this amazing journey!\nNext week we will dive into constants.\n"},"pages/part-17-constants.html":{"url":"pages/part-17-constants.html","title":"Part 17 - Constants","keywords":"","body":"Part 17 - Constants\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nSo far we have created, debugged and hacked a simple string echo to the standard terminal. We will expand upon that example by adding a constant.\nA constant in C++ is a value that will not change throughout program execution (unless hacked). It is used such that you have a declaration early in the code so that if your future program architecture ever changes you can redefine the constant in one place rather than having to update code all through your code base.\nIt is standard practice to code our constants in all CAPS so that when we see it referenced somewhere in the code we know that value is a constant.\nWe start with our second program in C++ which is our “Constant” program. Let’s dive in and break each line down step-by-step and see how this language works. We will call this example2.cpp and save it to our device.\n#include \n \nint main(void) {\n            cons tint YEAR = 2017;\n \n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example2.cpp -o example2\n\n\nWe simply then type:\n./example2\n\n\n\n\nSUCCESS! We see “2017” printed to the standard output or terminal!\nLet’s break it down:\nWe utilize the const keyword to indicate a constant to which we assign it the integer value of 2017.\nWe then utilize the cout function to print it to the standard output or terminal and add a new line with the endl function.\nThat’s it! Very simple.\nNext week we will dive into Debugging Constants.\n"},"pages/part-18-debugging-constants.html":{"url":"pages/part-18-debugging-constants.html","title":"Part 18 – Debugging Constants","keywords":"","body":"Part 18 – Debugging Constants\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review last week’s code.\n\n\nLet’s debug!\n\n\nAs we can see the value in the memory address 0x10730 is equal to 2017. Let’s continue and watch the value print to the standard output (terminal) as it did last week when we ran it.\n\n\nWe can see very clearly that we move the value from memory into r1 and then we branch to our cout function to print to the terminal. At this stage you should feel a little more comfortable with understanding what the assembly is doing above.\nNext week we will dive into Hacking Constants.\n"},"pages/part-19-hacking-constants.html":{"url":"pages/part-19-hacking-constants.html","title":"Part 19 – Hacking Constants","keywords":"","body":"Part 19 – Hacking Constants\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our original code.\n\n\nLet’s hack!\n\n\nAs we can see the value in the memory address 0x10730 is equal to 2017. Let’s change that value in memory to 1981. Let’s continue and watch the value turn to 1981! Successful hack!\nLet’s hack a second way! Re-start the program and set a breakpoint at main+28 and continue to the breakpoint.\n\n\nLet's continue and we see the value in r1 is 2017. Let’s change the value in r1 to 1981. We continue and see the program successfully hacked to 1981!  \n\n\nNext week we will dive into Character Variables.\n"},"pages/part-20-character-variables.html":{"url":"pages/part-20-character-variables.html","title":"Part 20 – Character Variables","keywords":"","body":"Part 20 – Character Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of character variables. Unlike the strings we have dealt with thus far, a character only takes up one byte of data.\nKeep in mind, when we deal with any character data, we deal with literally two hex digits which are the ASCII code that represents an actual character that we see on our respective terminals.\nRemember that each hex digit is 4 bits in length. Therefore two hex digits are 8 bits in length or a byte long. \nTo recap, each character translates down to an ASCII code in hex which the processor understands. The value of n is 0x6e hex or 110 decimal. You can review any ASCII table to see where we derived this value. This will come in handy in the next lesson.\nWe start with our third program in C++ which is our “Character Variable” program. Let’s dive in and break each line down step-by-step and see how this language works. We will call this example3.cpp and save it to our device.\n#include \n\n \n\nint main(void) {\n\n            char yes_no = ‘n’;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example3.cpp -o example3\nWe simply then type:\n./example3\n\n\nSUCCESS! We see “n” printed to the standard output or terminal!\nLet’s break it down:\nWe utilize the char keyword to indicate a character variable to which we assign it the value of n.\nWe then utilize the cout function to print it to the standard output or terminal and add a new line with the endl function.\nThat’s it! Very simple.\nNext week we will dive into Debugging Character Variables.\n"},"pages/part-21-debugging-character-variables.html":{"url":"pages/part-21-debugging-character-variables.html","title":"Part 21 – Debugging Character Variables","keywords":"","body":"Part 21 – Debugging Character Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code.\n\n\nLet’s debug!\n\n\nWoah! This is confusing. I don’t see any clear memory addresses being loaded into a register to manipulate the data. \nLet’s keep in mind that we are dealing with a single byte character variable. \nIf you remember from last week each character translates down to an ASCII code in hex which the processor understands. The value of n is 0x6e hex or 110 decimal. You can review any ASCII table to see where we derived this value.\nWe do see 0x6e at main+12 which is the character ‘n’.  \n\n\nIf we step into a few times we notice the value has been placed into r3. When we print the value in r3 we now see our ‘n’ character.\nLet’s continue.\n\n\nWe now see the ‘n’ printed to the standard output as expected.\nIt is important that you understand this process and understand that each character translates into an ASCII value to which the processor loads directly into a respective register. Our previous experience we have seen a string loaded directly into a memory location and this is not the case here.\nNext week we will dive into Hacking Character Variables.\n"},"pages/part-22-hacking-character-variables.html":{"url":"pages/part-22-hacking-character-variables.html","title":"Part 22 – Hacking Character Variables","keywords":"","body":"Part 22 – Hacking Character Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code.\n\n\nLet’s hack!\n\n\nWe again see the direct value of 0x6e moved into r3 at main+12 which is our ‘n’.\n\n\nAfter stepping into 4 times and verify the value in r3 which we clearly see as ‘n’.\n\n\nLet’s hack the value in r3 to a ‘y’ and then reexamine the value in r3. We can now clearly see it has been changed to ‘y’.\n\n\nAs we continue we successfully see our hack worked! We see the value of ‘y’ printing to the standard output.\nNext week we will dive into Boolean Variables.\n"},"pages/part-23-boolean-variables.html":{"url":"pages/part-23-boolean-variables.html","title":"Part 23 – Boolean Variables","keywords":"","body":"Part 23 – Boolean Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of Boolean variables. The name goes back to the great George Boole to which all modern computer science has derived. \nAt the lowest level a value is either 0 or 1, false or true, + \nLet’s examine our code.\n#include \n\n \n\nint main(void) {\n\n            bool isHacked = false;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example4.cpp -o example4\n\n./example4\n\n\n\n\nSUCCESS! We see 0 printed to the standard output or terminal!\nLet’s break it down:\nWe create a boolean variable called isHacked to which we assign a value of false or 0. When we run the binary we clearly see the value 0 that successfully was echoed to the standard output.\nNext week we will dive into Debugging Boolean Variables.\n"},"pages/part-24-debugging-boolean-variables.html":{"url":"pages/part-24-debugging-boolean-variables.html","title":"Part 24 – Debugging Boolean Variables","keywords":"","body":"Part 24 – Debugging Boolean Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n\n\nLet’s debug.\n\n\nLet’s step 4 times and disassemble.\n\n\nLet’s examine what is now in r3.\n\n\nAs we can clearly see the value in isHacked is 0 or false which makes sense based on our c++ source code.\nI know these lessons may seem trivial however Reverse Engineering is all about breaking things down in their most basic components. Reverse Engineering is about patience and logical flow. It is critical that you take the time and work through all of these examples with a Raspberry Pi device so that you can have a proper appreciation for how the process actually works.\nNext week we will dive into Hacking Boolean Variables.\n"},"pages/part-25-hacking-boolean-variables.html":{"url":"pages/part-25-hacking-boolean-variables.html","title":"Part 25 – Hacking Boolean Variables","keywords":"","body":"Part 25 – Hacking Boolean Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n\n\nLet’s hack!\n\n\nLet’s break at main, run and disas in addition to step into four times. \n\n\nWe see that 0 or FALSE is moved into r3 at main+12.\n\n\nVery simply we set r3 to 1 or TRUE and continue execution to which we notice that the Boolean variable isHacked is now TRUE.\nIt’s that simple folks! These elementary examples will help build your mental library of examples of how to approach everything in code and understanding how to take control of code execution no matter what!\nNext week we will dive into Integer Variables.\n"},"pages/part-26-integer-variables.html":{"url":"pages/part-26-integer-variables.html","title":"Part 26 – Integer Variables","keywords":"","body":"Part 26 – Integer Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of Integer variables. \nA 32-bit register can store 2^32 different values. The range of integer values that can be stored in 32 bits depends on the integer representation used. With the two most common representations, the range is 0 through 4,294,967,295 (2^32 − 1) for representation as an (unsigned) binary number, and −2,147,483,648 (−2^31) through 2,147,483,647 (2^31 − 1) for representation as two's complement.\nKeep in mind with 32-bit memory addresses you can directly access a maximum of 4 GB of byte-addressable memory.\nLet’s examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 777;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example5.cpp -o example5\n./example5\n\n\nSUCCESS! We see 777 printed to the standard output or terminal!\nLet’s break it down:\nWe assign the integer 777 directly into the variable myNumber and then print it out to the terminal with the c++ cout function.\nNext week we will dive into Debugging Integer Variables.\n"},"pages/part-27-debugging-integer-variables.html":{"url":"pages/part-27-debugging-integer-variables.html","title":"Part 27 – Debugging Integer Variables","keywords":"","body":"Part 27 – Debugging Integer Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code. I again want to include the below information from last week’s lesson to emphasize what is going on regarding integers.\nA 32-bit register can store 2^32 different values. The range of integer values that can be stored in 32 bits depends on the integer representation used. With the two most common representations, the range is 0 through 4,294,967,295 (2^32 − 1) for representation as an (unsigned) binary number, and −2,147,483,648 (−2^31) through 2,147,483,647 (2^31 − 1) for representation as two's complement.\nKeep in mind with 32-bit memory addresses you can directly access a maximum of 4 GB of byte-addressable memory.\n\n\nLet’s debug!\n\n\nWe see at main+12 the address at 0x10730 loading data into r3. Let’s take a closer look.\n\n\nWhen we examine the data inside 0x10730 we clearly see the integer 777 present. When we continue we see 777 echoed back to the terminal which makes sense as we utilized the cout function within c++.#linux #arm #asm #cplusplus #reverseengineering\nNext week we will dive into Hacking Integer Variables.\n"},"pages/part-28-hacking-integer-variables.html":{"url":"pages/part-28-hacking-integer-variables.html","title":"Part 28 – Hacking Integer Variables","keywords":"","body":"Part 28 – Hacking Integer Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code.  \n\n\nLet’s hack!\n\n\nLet’s take a look again inside the memory location of 0x10730.\n\n\nAs we can clearly see the integer value of 777 appears and when we continue it echoes out to the terminal the value of 777 which corresponds with our c++ function cout.\nLet’s hack the value inside of 0x10730 and set the value to 666 and then reexamine the value inside 0x10730 and continue.\n\n\nSuccess! As we can see we hacked the value to 666 as we continue we see it echoed out to stdout.\nNext week we will dive into Float Variables.\n"},"pages/part-29-float-variables.html":{"url":"pages/part-29-float-variables.html","title":"Part 29 – Float Variables","keywords":"","body":"Part 29 – Float Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of Floating-Point variables. \nA floating-point variable is different from an integer as it has a fractional value attached to which we designate with a period.\nLet’s examine our code.\n#include \n\n \n\nfloat main(void) {\n\n            int myNumber = 1337.1;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example6.cpp -o example6\n./example6\nSUCCESS! We see 1337.1 printed to the standard output or terminal!\nLet’s break it down:\nWe assign the floating-point variable directly into the variable myNumber and then print it out to the terminal with the c++ cout function.\nThus far we have a good understanding of the ARM registers however next week we will introduce the registers within the math co-processor that work with floating-point variables. The registers you have worked with up to now only store whole numbers or integers and at the Assembly level, any fractional value must be manipulated through the math co-processor registers.\nNext week we will dive into Debugging Float Variables.\n"},"pages/part-30-debugging-float-variables.html":{"url":"pages/part-30-debugging-float-variables.html","title":"Part 30 – Debugging Float Variables","keywords":"","body":"Part 30 – Debugging Float Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\n \n\nint main(void) {\n\n            float myNumber = 1337.1;\n\n \n\n            std::cout \n\n\n\nLet’s debug!\n\n\nLet’s break on main+20 and continue to that point.\n\n\nLet’s examine what value is inside r11-8. We clearly see it is 1337.09998 which approximates our value in our original c++ code. Keep in mind a float has roughly 7 decimal digits of precision and that is why we do not see 1337.1 so please remember that as we go forward. \n\n\nWe can also see this value in high memory.\n\n\nLet’s break on main+28 and continue.\n\n\nWe see a strange new instruction. We see vldr and the value within r11, #8 being moved into s0. So what is s0? We have a math co-processor which has a series of additional registers that work with decimal or floating-point numbers. Here we see an example of such to which the value of 1337.09998 is being moved into s0. The vldr instruction loads a constant value into every element of a single-precision or double-precision register such as s0.\n\n\nWe can only see these special registers if we do a info registers all command as we do below.\n\n\nBelow we see the value now being moved into s0.\n\n\nNext week we will dive into Hacking Float Variables.\n"},"pages/part-31-hacking-float-variables.html":{"url":"pages/part-31-hacking-float-variables.html","title":"Part 31 – Hacking Float Variables","keywords":"","body":"Part 31 – Hacking Float Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 1337.1;\n\n \n\n            std::cout \n\n\n\nLet’s review last week’s tutorial.\n\n\nLet’s break on main+20 and continue to that point.\n\n\nLet’s examine what value is inside r11-8. We clearly see it is 1337.09998 which approximates our value in our original c++ code. Keep in mind a float has roughly 7 decimal digits of precision and that is why we do not see 1337.1 so please remember that as we go forward.\n\n\nWe can also see this value in high memory.\n\n\nLet’s break on main+28 and continue.\n\n\nWe see a strange new instruction. We see vldr and the value within r11, #8 being moved into s0. So what is s0? We have a math co-processor which has a series of additional registers that work with decimal or floating-point numbers. Here we see an example of such to which the value of 1337.09998 is being moved into s0. The vldr instruction loads a constant value into every element of a single-precision or double-precision register such as s0.\n\n\nWe can only see these special registers if we do a info registers all command as we do below.\n\n\nBelow we see the value now being moved into s0.\n\n\nLet’s hack!\n\n\nLet’s now look at the registers and see what has transpired.\n\n\n\n\nAs you can see we have hacked the value (less the precision issue of the float variable accurate up to 6 decimal places)!\n\n\nFinally as we continue we see our hacked value echoed back out to the terminal when the c++ cout function executes.\nNext week we will dive into Double Variables.\n"},"pages/part-32-double-variables.html":{"url":"pages/part-32-double-variables.html","title":"Part 32 – Double Variables","keywords":"","body":"Part 32 – Double Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of double-precision floating-point variables. \nA double-precision floating-point variable is different from a floating-point variable as it is 64-bits wide and 15-17 significant digits of precision.\nLet’s examine our code.\n#include \n\n \n\nint main(void) {\n\n            double myNumber = 1337.77;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example7.cpp -o example7\n./example7\n\n\nSUCCESS! We see 1337.77 printed to the standard output or terminal!\nLet’s break it down:\nWe assign the floating-point variable directly into the variable myNumber and then print it out to the terminal with the c++ cout function.\nNext week we will dive into Debugging Double Variables.\n"},"pages/part-33-debugging-double-variables.html":{"url":"pages/part-33-debugging-double-variables.html","title":"Part 33 – Debugging Double Variables","keywords":"","body":"Part 33 – Debugging Double Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code.\nint main(void) {\n\n            double myNumber = 1337.77;\n\n \n\n            std::cout \n\n\n\nLet’s debug!\n\n\nLet’s set a breakpoint at main+24 and continue.\n\n\nWe see the strd r2, [r11, #-12] and we have to fully understand that this means we are storing the value at the offset of -12 from register r11 into r2. Let’s now examine what exactly resides there.  \n\n\nVoila! We see 1337.77 at that offset location or specifically stored into 0x7efff230 in memory.\n\n\nLet’s step into twice which executes the vldr d0, [r11, #-12] as we understand that 1337.77 will now be loaded into the double precision math co-processor d0 register. Let’s now print the value at that location below.\n\n\nFinally let’s continue and watch the value echo to the terminal. This completes our cout c++ function.\n\n\nNext week we will dive into Hacking Double Variables.\n"},"pages/part-34-hacking-double-variables.html":{"url":"pages/part-34-hacking-double-variables.html","title":"Part 34 – Hacking Double Variables","keywords":"","body":"Part 34 – Hacking Double Variables\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s review our code.\nint main(void) {\n\n            double myNumber = 1337.77;\n\n \n\n            std::cout \n\n\n\nLet’s debug!\n\n\nLet’s set a breakpoint at main+24 and continue.\n\n\nWe see the strd r2, [r11, #-12] and we have to fully understand that this means we are storing the value at the offset of -12 from register r11 into r2. Let’s now examine what exactly resides there.  \n\n\nVoila! We see 1337.77 at that offset location or specifically stored into 0x7efff230 in memory.\n\n\nLet’s step into twice which executes the vldr d0, [r11, #-12] as we understand that 1337.77 will now be loaded into the double precision math coprocessor d0 register. Let’s now print the value at that location below.\n\n\nLet’s hack the d0 register!\n\n\nNow let’s reexamine the value inside d0.\n\n\nLet’s continue.\n\n\nSuccessfully hacked!\nNext week we will dive into the SizeOf Operator.\n"},"pages/part-35-sizeof-operator.html":{"url":"pages/part-35-sizeof-operator.html","title":"Part 35 – SizeOf Operator","keywords":"","body":"Part 35 – SizeOf Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of the SizeOf operator. \nLet’s examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 16;\n\n            int myNumberSize = sizeof(myNumber);\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example8.cpp -o example8\n./example8\n\n\nWe see 4 printed to the screen.\nLet’s break it down:\nWe create a variable myNumber = 16 to which we create another variable myNumberSize which holds the value of the size of myNumber. We see that when we execute our code it shows 4 therefore we see that the SizeOf operator indicates an integer is 4 bytes wide.\nNext week we will dive into Debugging SizeOf Operator.\n"},"pages/part-36-debugging-sizeof-operator.html":{"url":"pages/part-36-debugging-sizeof-operator.html","title":"Part 36 – Debugging SizeOf Operator","keywords":"","body":"Part 36 – Debugging SizeOf Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 16;\n\n            int myNumberSize = sizeof(myNumber);\n\n \n\n            std::cout \n\n\n\nRemember that we create a variable myNumber = 16 to which we create another variable myNumberSize which holds the value of the size of myNumber. We see that when we execute our code it shows 4 therefore we see that the SizeOf operator indicates an integer is 4 bytes wide.\nLet’s debug and break on main.\n\n\nLet’s break on main+20 as we can see the value of 4 being moved into r3.\n\n\nLet’s examine what is going on at main+16 as we can see that we are storing into the value of $r11-8 that which exists in r3 which in our case is 16. This makes sense as when we examine our original code the value of myNumber was in fact 16. We can see this here when we examine the value inside $r11-8.\n\n\nAs we can see above the value inside $r11-12 is 4 as that represents the value that SizeOf is returning as the integer 16 is in fact 4 bytes wide.\n\n\nFinally when we continue execution we in fact see the value 4 echoed to the terminal.\nNext week we will dive into Hacking SizeOf Operator.\n"},"pages/part-37-hacking-sizeof-operator.html":{"url":"pages/part-37-hacking-sizeof-operator.html","title":"Part 37 – Hacking SizeOf Operator","keywords":"","body":"Part 37 – Hacking SizeOf Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 16;\n\n            int myNumberSize = sizeof(myNumber);\n\n \n\n            std::cout \n\n\n\nRemember that we create a variable myNumber = 16 to which we create another variable myNumberSize which holds the value of the size of myNumber. We see that when we execute our code it shows 4 therefore we see that the SizeOf operator indicates an integer is 4 bytes wide.\nLet’s review last week’s code as we start with debugging and breaking on main.\n\n\nLet’s break on main+20 as we can see the value of 4 being moved into r3.\n\n\nLet’s examine what is going on at main+16 as we can see that we are storing into the value of $r11-8 that which exists in r3 which in our case is 16. This makes sense as when we examine our original code the value of myNumber was in fact 16. We can see this here when we examine the value inside $r11-8.\n\n\nAs we can see above the value inside $r11-12 is 4 as that represents the value that SizeOf is returning as the integer 16 is in fact 4 bytes wide.\n\n\nFinally when we continue execution we in fact see the value 4 echoed to the terminal.\nLet’s hack!\n\n\nWe run and break on main+28.\n\n\nWe see the value in r3 is 4 which is expected.\n\n\nWe break on main+36.\n\n\nWe see the value in r1 is 4 which should make logical sense as the value was stored from r3 into r11-12 and then back to r1.\n\n\nLet’s hack the value in r1!\n\n\nSuccess! We have hacked the machine!\nNext week we will dive into the Pre-Increment Operator.\n"},"pages/part-38-pre-increment-operator.html":{"url":"pages/part-38-pre-increment-operator.html","title":"Part 38 – Pre-Increment Operator","keywords":"","body":"Part 38 – Pre-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of the pre-increment operator. \nLet’s examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 16;\n\n            int myNewNumber = ++myNumber;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example9.cpp -o example9\n./example9\n\n\nWe see 17 printed to the screen.\nLet’s break it down:\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which pre-increments the value of myNumber. We see that when we execute our code it shows 17.\nWhen we pre-increment the value of the variable is incremented before assigning it to another variable. For example myNumber is 16 so it gets incremented before being assigned to myNewNumber so therefore we get 17.\nNext week we will dive into Debugging Pre-Increment Operator.\n"},"pages/part-39-debugging-pre-increment-operator.html":{"url":"pages/part-39-debugging-pre-increment-operator.html","title":"Part 39 – Debugging Pre-Increment Operator","keywords":"","body":"Part 39 – Debugging Pre-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber = 16;\n\n            int myNewNumber = ++myNumber;\n\n \n\n            std::cout \n\n\n\nTo compile this we simply type:\ng++ example9.cpp -o example9\n./example9\n\n\nWe see 17 printed to the screen.\nLet’s break it down:\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which pre-increments the value of myNumber. We see that when we execute our code it shows 17.\nWhen we pre-increment the value of the variable is incremented before assigning it to another variable. For example myNumber is 16 so it gets incremented before being assigned to myNewNumber so therefore we get 17.\nLet’s debug.\n\n\nWe do our normal start in gdb and break on main. Take note at main+24 we are moving the value of 1 into r3. We then see at main+28 we are storing that value at r11-8 to which we will set a breakpoint and continue.\n\n\nAs we evaluate the value in r3 at this stage we see 17. Remember back in our original code that the value in the myNumber variable was 16. We can see that the pre-increment operator was successful to increment the value 1 to give us 17.\n\n\nWe see that when we continue through the code the value 17 is successfully echoed to the terminal as expected.\n\n\nNext week we will dive into Hacking Debugging Pre-Increment Operator.\n"},"pages/part-40-hacking-pre-increment-operator.html":{"url":"pages/part-40-hacking-pre-increment-operator.html","title":"Part 40 – Hacking Pre-Increment Operator","keywords":"","body":"Part 40 – Hacking Pre-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s one again re-examine our code.\n#include \n\n \n\nint main(void) {\n\n            int myNumber\n= 16;\n\n            int\nmyNewNumber = ++myNumber;\n\n \n\n            std::cout\n\n\n\n\nTo compile this we simply type:\ng++ example9.cpp -o example9\n./example9\n\n\n\n\nWe see 17 printed to the screen.\nLet’s break it down:\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which pre-increments the value of myNumber. We see that when we execute our code it shows 17.\nWhen we pre-increment the value of the variable is incremented before assigning it to another variable. For example myNumber is 16 so it gets incremented before being assigned to myNewNumber so therefore we get 17.\nLet’s debug.\n\n\nWe do our normal start in gdb and break on main. Take note at main+24 we are moving the value of 1 into r3. We then see at main+28 we are storing that value at r11-8 to which we will set a breakpoint and continue.\n\n\nAs we evaluate the value in r3 at this stage we see 17. Remember back in our original code that the value in the myNumber variable was 16. We can see that the pre-increment operator was successful to increment the value 1 to give us 17.\n\n\nWe see that when we continue through the code the value 17 is successfully echoed to the terminal as expected.\n\n\nLet’s re-run the program.\n\n\nLet’s hack! Here were review the value in r3 which we know to be 17. Let’s hack it to something else.\n\n\nSuccess! As we can see when we continue we now see the hacked value echoing to the terminal.\n\n\nNext week we will dive into the Post-Increment Operator.\n"},"pages/part-41-post-increment-operator.html":{"url":"pages/part-41-post-increment-operator.html","title":"Part 41 – Post-Increment Operator","keywords":"","body":"Part 41 – Post-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s dive into our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = ++myNumber;\n\n    std::cout \n\n\n\nTo compile this we simply type:\ng++ example10.cpp -o example10\n./example10\n\n\nWe see 16 and 17 printed to the screen.\nLet’s break it down:\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which post-increments the value of myNumber. We see that when we execute our code it shows 16 as the value of myNewNumber and 17 as the value of myNumber as myNewNumber does not get incremented as only myNumber get incremented as it is a post operator.\nWhen we post-increment the value of the variable is incremented after assigning it to another variable. For example myNumber is 16 so it gets incremented after being assigned to myNewNumber so therefore we get 17.\nNext week we will dive into Debugging Post-Increment Operator.\n"},"pages/part-42-debugging-post-increment-operator.html":{"url":"pages/part-42-debugging-post-increment-operator.html","title":"Part 42 – Debugging Post-Increment Operator","keywords":"","body":"Part 42 – Debugging Post-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = ++myNumber;\n\n    std::cout \n\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which post-increments the value of myNumber. We see that when we execute our code it shows 16 as the value of myNewNumber and 17 as the value of myNumber as myNewNumber does not get incremented as only myNumber get incremented as it is a post operator.\nWhen we post-increment the value of the variable is incremented after assigning it to another variable. For example myNumber is 16 so it gets incremented after being assigned to myNewNumber so therefore we get 17.\nLet's debug.\n\n\nLet's break on *main+28 and continue.\n\n\nAs we can see the value in r3 is 16 and the value in r2 is 17. We can see that as they are loaded from memory into the registers in *main+12 directly by the mov instruction and *main+24 we add 1 into r3 and then put that value into r2.\n\n\nAs we continue we can see the cout c++ function called which echos out the values to the terminal (standard output) as expected.\n\n\nNext week we will dive into Hacking Post-Increment Operator.\n"},"pages/part-43-hacking-post-increment-operator.html":{"url":"pages/part-43-hacking-post-increment-operator.html","title":"Part 43 – Hacking Post-Increment Operator","keywords":"","body":"Part 43 – Hacking Post-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet’s re-examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = ++myNumber;\n\n    std::cout \n\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which post-increments the value of myNumber. We see that when we execute our code it shows 16 as the value of myNewNumber and 17 as the value of myNumber as myNewNumber does not get incremented as only myNumber get incremented as it is a post operator.\nWhen we post-increment the value of the variable is incremented after assigning it to another variable. For example myNumber is 16 so it gets incremented after being assigned to myNewNumber so therefore we get 17.\nLet's debug.\n\n\nLet's break on *main+28 and continue.\n\n\nAs we can see the value in r3 is 16 and the value in r2 is 17. We can see that as they are loaded from memory into the registers in *main+12 directly by the mov instruction and *main+24 we add 1 into r3 and then put that value into r2.\nLet's hack this baby!\n\n\nWe know we can now set the value of r3 to our heart's desire!\n\n\nAs we continue we see the c++ cout function echo our new hacked value to the screen!\nNext week we will dive into the Pre-Decrement Operator.\n"},"pages/part-44-pre-decrement-operator.html":{"url":"pages/part-44-pre-decrement-operator.html","title":"Part 44 – Pre-Decrement Operator","keywords":"","body":"Part 44 – Pre-Decrement Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's take a look at our pre-decrement operator example. The pre-decrement operator decrements a given value before the action gets assigned.\nLet's examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = --myNumber;\n\n    std::cout \n\n\n\nAs we compile and run we see 15 echoed out to the terminal.\n\n\nThe value of myNumber was 16 and when it is assigned with the pre-decrement operator we see that the new value is 15 as it is assigned into myNewNumber.\nNext week we will dive into the Debuggin Pre-Decrement Operator.\n"},"pages/part-45-debugging-pre-decrement-operator.html":{"url":"pages/part-45-debugging-pre-decrement-operator.html","title":"Part 45 – Debugging Pre-Decrement Operator","keywords":"","body":"Part 45 – Debugging Pre-Decrement Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's re-examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = --myNumber;\n\n    std::cout \n\nWe remember when we compile we get 15.\nLet's debug.\n\n\nLet's break.\n\n\nAs we can see r3 holds 15. Keep in mind hacking this value may not be the final place it may be stored. Remember this for next week and re-examine the debug code above to see if you can figure it out.\n\n\nAs we can see r1 holds 15 as well. Keep in mind the above statement.\n\n\nAs we continue we see our cout function echoing 15 for both areas as expected.\nNext week we will dive into the Hacking Pre-Decrement Operator.\n"},"pages/part-46-hacking-pre-decrement-operator.html":{"url":"pages/part-46-hacking-pre-decrement-operator.html","title":"Part 46 – Hacking Pre-Decrement Operator","keywords":"","body":"Part 46 – Hacking Pre-Decrement Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's re-examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = --myNumber;\n\n    std::cout \n\nWe remember when we compile we get 15.\nLet's debug.\n\n\nLet's break.\n\n\nLet's review what is inside r3 and hack it.\n\n\nNow as we continue we see it did not successfully hack why is that?\n\n\nWe re-run the binary and break and see the value here at r1 hold 15.\n\n\nWhen we continue we see 15 which we don't want.\n\n\nNow we break again and print the value.\n\n\nThis time we set r1 and we can see we have successfully hacked!\n\n\nThis is your first experience with really breaking down the registers and seeing where things are stored and how it can affect outcome. Take time and run this yourself so you really have a firm handle on this.\nNext week we will dive into the Post-Decrement Operator.\n"},"pages/part-47-post-decrement-operator.html":{"url":"pages/part-47-post-decrement-operator.html","title":"Part 47 – Post-Decrement Operator","keywords":"","body":"Part 47 – Post-Decrement Operator\nThis week we will address the post-decrement operator. Let's examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = myNumber--;\n\n    std::cout std::endl;\n    std::cout std::endl;\n\n    return 0;\n}\n\n\n\n\n\n\n As we compile we see 16 and 15 printed out respectively.\n\n\n\n\nWe see that in this scenario myNewNumber does get decremented as myNumber-- takes the value of 16 and reduces it to 15.\nNext week we will dive into the Debugging Post-Decrement Operator.\n"},"pages/part-48-debugging-post-decrement-operator.html":{"url":"pages/part-48-debugging-post-decrement-operator.html","title":"Part 48 – Debugging Post-Decrement Operator","keywords":"","body":"Part 48 – Debugging Post-Decrement Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's re-examine our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = myNumber--;\n\n    std::cout \n\nWe see our very simple C++ code above to which we are doing nothing more than assigning a number into a variable to which we init another int variable and assign the original variable to which it is post-decremented. We then output each value to the terminal.\nLet's debug.\n\n\nIt is clear that the value for the post-decrement operator gets loaded into r1 at main+68 so let's break at main+72.\n\n\nWe can clearly see that r1 does in fact hold the value of 15 to which was decremented from our original value.\n\n\nNext week we will dive into Hacking Post-Decrement Operator.\n"},"pages/part-49-hacking-post-decrement-operator.html":{"url":"pages/part-49-hacking-post-decrement-operator.html","title":"Part 49 – Hacking Post-Decrement Operator","keywords":"","body":"Part 49 – Hacking Post-Decrement Operator\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's once again review our code.\n#include \n\nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = myNumber--;\n\n    std::cout \n\nLet's review last week's debug.\n\n\nAs we can see here the value in r1 at main+68 is 15. Let's hack!\n\n\nOnce again we have manipulated and changed program execution to our own bidding. With each of these bite-size lessons you continue to get a better grasp on the processor and how it interfaces with the binary.\nI hope this series gives you a solid framework for understanding the ARM processor. This concludes the series. Thank you all for coming along on the journey!\n"},"pages/x64-course.html":{"url":"pages/x64-course.html","title":"x64 Course","keywords":"","body":"\n    The x64 Architecture\n\n\n    Let's dive in rightaway!\n"},"pages/part-1-the-cyber-revolution.html":{"url":"pages/part-1-the-cyber-revolution.html","title":"Part 1 – The Cyber Revolution","keywords":"","body":"Part 1 – The Cyber Revolution\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nI often wonder when I see all the latest hacks on a variety of networks, computers and IoT devices how many people really have even the most basic understanding of what goes on down to the microprocessor level.\nFor years I have published x86 and ARM Assembly and Reverse Engineering tutorials with the intent of opening up the eyes of the public to better understand what Assembly Language is in addition to the notion that there is actually more than just the decimal number system.\nToday we have drones, AI, IoT and smart devices that the public rarely understands what the true impact is on their privacy or security.\nEverything is Cyber. No matter what you do or where you go or where you live or where you work you will be forced to engage \"The Cyber Revolution\".\nThis tutorial series is your opportunity to learn FREE OF CHARGE the very basics of x64 Assembly. Naturally you might ask what is x64 Assembly and why would I possibly want to understand the basics of it let alone Reverse Engineering?\nJust about every computer and server today including the cloud runs on an x64 based chipset. Just about every phone, IoT and tablet device runs on an ARM chip (with a number of exceptions). Our last tutorial series dove deep into the ARM chip so if you would like to dive in please review the archives here on my LinkedIn profile.\nUnderstanding x64 will give you a better idea of the very infrastructure that supports just about everything we do. You do not have to have any computer science skills to take this FREE course. Simply a few minutes of your time once a week will do.\n\nLet's dive in!\n"},"pages/part-2-transistors.html":{"url":"pages/part-2-transistors.html","title":"Part 2 - Transistors","keywords":"","body":"Part 2 - Transistors\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTo understand modern computing we have to go down to the most basic level. Our journey starts with the transistor. \n\n\nA transistor is nothing more than a complex relay as it is a switch that can be open or closed by applying an electrical charge. This charge is made possible by the use of a control wire. The control wire is attached to a material that can conduct or resist electricity to which on the other end there are two electrodes attached to such a material. This is the concept of a semiconductor. The control wire attaches to a gate electrode where if you change the electrical charge of the gate the conductivity of the semiconductor material can be manipulated. Think of a simple kitchen faucet to which you can turn water on or off. The concept is quite similar.\nQuite simply the flow of electricity represents a 1 and the lack of such an electricity flow represents a 0. This is a boolean on or off architecture to which we need to take a deeper dive into the binary number system at a later time.\nI deliberately try to keep these lessons short so that it draws the largest audience to take just a few minutes each week to properly grasp some complicated architectures.\nNext week we will touch on logic gates and discuss how the combination of such gates make up the core of how the processor works. We will only discuss them on a high level as it would be an entire additional course in electrical engineering to really get into how the processor is made to which we will stick to the basics and spend more of our time on how to program the chip.\nAfter some basics about the processor and an introduction to the binary and hexadecimal number systems we will build our very own bootable operating system.\n"},"pages/part-3-logic-gates.html":{"url":"pages/part-3-logic-gates.html","title":"Part 3 - Logic Gates","keywords":"","body":"Part 3 - Logic Gates\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our last tutorial we spoke briefly about binary to which we represent as either true or false. In binary, true is equal to 1 and false is equal to 0. Computers are ultimately built on this very simple concept to which at the core we have four possible logic gates which can be combined in an infinite amount of sequences.\nLet’s start with the AND Gate below.\n\n\nIn an AND Gate there are two binary values to which outputs 1 only if both binary values are 1. \nThe NOT Gate is represented below.\n\n\nIn a NOT Gate it simply takes a single binary value and negates it.\nThe OR Gate is represented below.\n\n\nIn an OR Gate only one of the inputs has to be 1 in order to output a 1.\nThe XOR Gate  is represented below.\n\n\nIn an XOR Gate if both inputs are either 0 or 1 the output is 0.\n\"The Why...\" Ok so why am I going over this? What does this have to do with understanding Assembly or Reverse Engineering? Well... At the very CORE of all processors are these simple logic gates that when combined together form complex instructions. I could spend literally years showing you this in practice however I will leave that for another to pick up the charge. What is important is that you get a basic understanding of what is going on here when we ultimately see instructions such as AND, OR, XOR, etc when we code in Assembly and more importantly when we Reverse Engineer.\nStay tuned! We will be building our own very SIMPLE Operating System shortly!\n"},"pages/part-4-number-systems.html":{"url":"pages/part-4-number-systems.html","title":"Part 4 - Number Systems","keywords":"","body":"Part 4 - Number Systems\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIt really all breaks down to 1 and 0. No matter how sophisticated the future frameworks evolve they all including interpreted languages ultimately use a JVM or the like and go down to Assembly then Machine Code then binary.\nWhy would we need to even talk about number systems? Why is it relevant to our series here? The answer is simple. In addition to everything going down to 1 and 0, the instructions and memory in addition to the processor registers all utilize another number system called hexadecimal. \nLet’s discuss binary! At the core of the microprocessor are a series of binary numbers which are either +5V (on or 1) or 0V (off or 0). Each 0 or 1 represents a bit of information within the microprocessor. A combination of 8 bits results in a single byte.\nBefore we dive into binary, let's examine the familiar decimal. If we take the number 2017, we would understand this to be two thousand and seventeen.\n\n\nLet’s take a look at the binary system and the basics of how it operates.\n\n\nIf we were to convert a binary number into decimal, we would very simply do the following. Let's take a binary number of 0101 1101 and as you can see it is 93 decimal.\n\n\nAdding the values in the value column gives us 0 + 64 + 0 + 16 + 8 + 4 + 0 + 1 = 93 decimal.\nIf we were to convert a decimal number into binary, we would check to see if a subtraction is possible relative to the highest order bit and if so, a 1 would be placed into the binary column to which the remainder would be carried into the next row. Let’s consider the example of the decimal value of 120 which is 0111 1000 binary.\n\n\n1)Can 128 fit inside of 120: No, therefore 0.\n2)Can 64 fit inside of 120: Yes, therefore 1, then 120 – 64 = 56.\n3)Can 32 fit inside of 56: Yes, therefore 1, then 56 – 32 = 24.\n4)Can 16 fit inside of 24: Yes, therefore 1, then 24 – 16 = 8.\n5)Can 8 fit inside of 8: Yes, therefore 1, then 8 – 8 = 0.\n6)Can 4 fit inside of 0: No, therefore 0.\n7)Can 2 fit inside of 0: No, therefore 0.\n8)Can 1 fit inside of 0: No, therefore 0.\nWhen we want to convert binary to hex we simply work with the following table.\n\n\nLet's convert a binary number such as 0101 1111 to hex. To do this we very simply look at the table and compare each nibble which is a combination of 4 bits. Keep in mind, 8 bits is equal to a byte and 2 nibbles are equal to a byte.\n\n\nTherefore 0101 1111 binary = 0x5f hex. The 0x notation denotes hex.\nTo go from hex to binary it’s very simple as you have to simply do the opposite such as:\n\n\nIt is important to understand that each hex digit is a nibble in length therefore two hex digits are a byte in length.\nTo convert from hex to decimal we do the following:\n\n\nTherefore we can see that 80 + 15 = 95 which is 0x5f hex.\nFinally to convert from decimal to hex. Let's take the number 850 decimal which is 352 hex.\n\n\n“Why the hell would I waste my time learning all this crap when the computer does all this for me!”\nAs I mentioned above, it is vital you have a good understanding of these two additional number systems if you are truly to grasp and master reverse engineering at its core. There are some amazing tools that help the RE process however the better understanding that you have of these will help you as you grow.\nI am not suggesting you memorize the above, nor am I suggesting that you do a thousand examples of each. All I ask is that you take the time to really understand that literally everything and I mean everything goes down to binary bits in the processor.\nWhether you are creating, debugging or hacking an Assembly, Python, Java, C, C++, R, JavaScript, or any other new language application that hits the street, ultimately everything MUST go down to binary 0 and 1 to which represent a +5V or 0V.\nWe as humans operate on the base 10 decimal system. Let’s expand our mind to base 2 binary and base 16 hexadecimal!\nNext week we will dive into binary addition! Stay tuned!\n"},"pages/part-5-binary-addition.html":{"url":"pages/part-5-binary-addition.html","title":"Part 5 - Binary Addition","keywords":"","body":"Part 5 - Binary Addition\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary addition can occur in one of four different fashions:\n\n\nKeep in mind the (1) means a carry bit. It very simply means an overflow.\nLets take the following 4-bit nibble example:\n\n\nWe see an obvious carry in the 3rd bit. If the 8th bit had a carry then this would generate a carry flag within the CPU.\nLet’s examine an 8-bit number:\n\n\nIf we had:\n\n\nHere we see a carry bit which would trigger the carry flag within the CPU to be 1 or true. We will discuss the carry flag in later tutorials. Please just keep in mind this example to reference as it is very important to understand.\nNext week we will dive into binary subtraction! Stay tuned!\n"},"pages/part-6-binary-subtraction.html":{"url":"pages/part-6-binary-subtraction.html","title":"Part 6 - Binary Subtraction","keywords":"","body":"Part 6 - Binary Subtraction\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary subtraction is nothing more than adding the negative value of the number to be subtracted. For example 8 + - 4, the starting point would be zero to which we move 8 points in the positive direction and then four points in the negative direction yielding a value of 4.\nWe represent a sign bit in binary to which bit 7 indicates the sign of number where 0 is positive and 1 is negative.\n\n\nThe above would represent -2.\nWe utilize the concept of twos compliment which inverts each bit and then finally adding 1.\nLets example binary 2.\n\n\nInvert the bits.\n\n\nAdd 1.\n\n\nLet’s examine a subtraction operation:\n\n\nSo what is the (1) you may ask, that is the overflow bit. In future tutorials we will examine what we refer to as the overflow flag and carry flag.\nNext week we will dive into word lengths! Stay tuned!\n"},"pages/part-7-word-lengths.html":{"url":"pages/part-7-word-lengths.html","title":"Part 7 - Word Lengths","keywords":"","body":"Part 7 - Word Lengths\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBefore we dive into the architecture lets talk about how we define various bits and how they are structured within the processor.\nIn both x64 and x86, we define a byte as 8 bits. We define a word as 16 bits. We define a double word as 32 bits and a quadword as 64 bits. Finally we define a double quadword as 128 bits. \nIntel processors store bytes as what we refer to as \"little endian,\" meaning lower significant bytes are stored in lower memory addresses. Lets give an example of a simple 16-bit or 2 byte value. On disk - 0xAABB. When it goes into memory it is stored as 0xBBAA as I hope this provides a good visual as this concept can be quite confusing.\nKeep in mind, 8 bits make up a byte. 4 bits are also called a nibble which are equivalent to one hex digit.\nNext week we will dive into general architecture! Stay tuned!\n"},"pages/part-8-general-architecture.html":{"url":"pages/part-8-general-architecture.html","title":"Part 8 - General Architecture","keywords":"","body":"Part 8 - General Architecture\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe x64 architecture is a backwards-compatible extension of the x86 platform. It provides a legacy 32-bit mode, which is identical to x86, and a new 64-bit mode. You can review my legacy x86 tutorial if you would like to get more information right here on LinkedIn.\nThe term \"x64\" includes both AMD 64 and Intel64. The instruction sets are similar.\nx64 extends x86's 8 general-purpose registers to be 64-bit, and adds 8 new 64-bit registers. The 64-bit registers have names beginning with \"r\", so for example the 64-bit extension of eax is called rax. The new registers are named r8 through r15.\nThe lower 32 bits, 16 bits, and 8 bits of each register are directly addressable in operands. This includes registers, like esi, whose lower 8 bits were not previously addressable. The following table specifies the assembly-language names for the lower portions of 64-bit registers.\nThe table below breaks out each bytes distinction.\n\n\nOperations that output to a 32-bit subregister are automatically zero-extended to the entire 64-bit register. Operations that output to 8-bit or 16-bit subregisters are not zero-extended (this is compatible x86 behavior).\nThe high 8 bits of ax, bx, cx, and dx are still addressable as ah, bh, ch, dh, but cannot be used with all types of operands.\nThe instruction pointer, eip, and flags register have been extended to 64 bits (rip and rflags, respectively) as well.\nThe x64 processor also provides several sets of floating-point registers:\n\nEight 80-bit x87 registers.\nEight 64-bit MMX registers. (These overlap with the x87 registers.)\nThe original set of eight 128-bit SSE registers is increased to sixteen.\n\nNext week we will dive into calling conventions! Stay tuned!\n"},"pages/part-9-calling-conventions.html":{"url":"pages/part-9-calling-conventions.html","title":"Part 9 - Calling Conventions","keywords":"","body":"Part 9 - Calling Conventions\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe x64 processor uses what we refer to as __fastcall. \nThe __fastcall calling convention specifies that arguments to functions are to be passed in registers, when possible. This calling convention only applies to the x86 architecture.\nThe first two DWORD or smaller arguments that are found in the argument list from left to right are passed in ecx and edx registers; all other arguments are passed on the stack from right to left.\nCalled function pops the arguments from the stack.\nAt sign (@) is prefixed to names; an at sign followed by the number of bytes (in decimal) in the parameter list is suffixed to names.\nNo case translation performed.\nHere is a simple breakdown to illustrate:\n\n\nIf you have two parameters you are passing from a function, for example int x and int y and it is a QWORD, x will go into rcx and y will go into rdx. \nIf you have five parameters you are passing for example int a, int b, int c, int d, int e and it is a WORD in length, a will go into cx, b into dx, c into r8w, d into r9w and e into the stack.\nNext week we will dive into boolean instructions! Stay tuned!\n"},"pages/part-10-boolean-instructions.html":{"url":"pages/part-10-boolean-instructions.html","title":"Part 10 - Boolean Instructions","keywords":"","body":"Part 10 - Boolean Instructions\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThere are four boolean instructions to which exist are AND, OR, XOR and NOT. Earlier in this tutorial we briefly discussed gates which took advantage of the same logic down to the metal. We will see this logic throughout our reversing so it is important to understand what it does down at the individual bit level.\nAND = If the first number has a 0 and the second number has a 0, the result is 0.\nAND = If the first number has a 0 and the second number has a 1, the result is 0.\nAND = If the first number has a 1 and the second number has a 0, the result is 0.\nAND = If the first number has a 1 and the second number has a 1, the result is 1.\nex: 0 0 1 0 0 0 1 0 \nex: 0 1 1 0 1 1 1 0\nex:———————\nex: 0 0 1 0 0 0 1 0\nOR = If the first number has a 0 and the second number has a 0, the result is 0.\nOR = If the first number has a 0 and the second number has a 1, the result is 1.\nOR = If the first number has a 1 and the second number has a 0, the result is 1.\nOR = If the first number has a 1 and the second number has a 1, the result is 1.\nex: 0 0 1 0 0 0 1 0 \nex: 0 1 1 0 1 1 1 0\nex:———————\nex: 0 1 1 0 1 1 1 0\nXOR = If the first number has a 0 and the second number has a 0, the result is 0.\nXOR = If the first number has a 0 and the second number has a 1, the result is 1.\nXOR = If the first number has a 1 and the second number has a 0, the result is 1.\nXOR = If the first number has a 1 and the second number has a 1, the result is 0.\nex: 0 0 1 0 0 0 1 0 \nex: 0 1 1 0 1 1 1 0\nex:———————\nex: 0 1 0 0 1 1 0 0\nNOT = If the first number has a 0 the second number becomes 1.\nNOT = If the first number has a 1 the second number becomes 0.\nex: 0 0 1 0 0 0 1 0 \nex:———————\nex: 1 1 0 1 1 1 0 1\nNext week we will dive into pointers! Stay tuned!\n"},"pages/part-11-pointers.html":{"url":"pages/part-11-pointers.html","title":"Part 11 - Pointers","keywords":"","body":"Part 11 - Pointers\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nx64 utilizes the flat memory model to which we have one large array of addresses that exist within the processor. \nA pointer is nothing more than the address of a specific value in memory. Let’s take an example:\nmov rax, 0x10\nIn this example we are moving 10 hex into the rax register.\nTo get the value inside rax at 0x10, you would use the following syntax:\nmov rbx, word ptr [rax] \nLet’s assume the value inside memory 0x10 was 0x20 therefore rax points to the value inside 0x10 which when you dereference by [rax] contains 0x20. 0x20 is the value inside of the register rax.\nWe are moving a word value pointed inside of rax  into rbx.\nIf we do:\nmov word ptr [rax], 0x66\nThis will put the value of 0x66 into the memory location at 0x10. We know that the value inside 0x10 memory location was 0x20 so therefore the new value inside the memory at 0x10 will be 0x66.\nThis can get confusing however when we get into code over the coming months this will become more apparent. \nNext week we will dive into load effective address! Stay tuned!\n"},"pages/part-12-load-effective-address.html":{"url":"pages/part-12-load-effective-address.html","title":"Part 12 - Load Effective Address","keywords":"","body":"Part 12 - Load Effective Address\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWhen a binary executes in RAM the OS will unmap the code into a data segment where it finds free space in memory. \nLoad Effective Address loads a given memory address as a pointer to any given variable. For example:\nlea rbx, my_var\nThis will load the address of my_var  into rbx. \nIn C++, a pointer actually adds what the user would see as one if something was incremented however it is actually moving it 2 bytes forward under the hood assuming it is a word in length or 16 bits or 2 bytes. Same thing.\nIn Assembly every single byte is addressable. For example:\nlea rax, my_var\ninc rax\nmov word ptr [rax], rbx\nLet’s say the value of 0x20 is in rbx. This above instruction will place the value of 0x20 into a non-word boundary which will result in an error. You would have to increment rax by 2 to ensure that does not happen.\nNext week we will dive into the data segment! Stay tuned!\n"},"pages/part-13-the-data-segment.html":{"url":"pages/part-13-the-data-segment.html","title":"Part 13 - The Data Segment","keywords":"","body":"Part 13 - The Data Segment\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe data segment allocates memory on the heap in memory rather than the stack as they are not local variables they are known throughout the entire binary. \nThe sizes of data are as follows:\n1)byte - We use the db notation which is obviously 1 byte or 8 bits.\n2)word - We use dw and it is 2 bytes in length.\n3)double word - We use dd to assign and they are 4 bytes long.\n4)quad word - We use dq which is 8 bytes long.\n5)xmm word - We use xmmword which is 16 bytes long.\n6)ymm word - We use ymmword which is 32 bytes long.\nThere are SSE math registers which are separate from the CPU which hold the following:\n1)real4 - This is a single or what you would think of as a floating point numbers as this is 4 bytes long.\n2)real8 - This is a double floating point as this is 8 bytes long.\nFinally there are arrays which can be single or multidimensional arrays where you can allocate against a db, dw, dd, dq, xmmword or ymmword.\nWe will see this in code when we get more advanced into the series however its critical that you understand the variables within a function are local and go to the stack as they do not last throughout the program. These variables which are part of the data segment are not local they are global and go to the heap.\nThe stack - local vars - grows down in memory so they start at a high memory address and grow down. The heap - global vars - grows from a lower memory address and grows up. \nIf you have questions please ask them in the comments as it is critical you get this concept down when we start to build our very basic operating system.\nNext week we will dive into SHL! Stay tuned!\n"},"pages/part-14-shl-instruction.html":{"url":"pages/part-14-shl-instruction.html","title":"Part 14 - SHL Instruction","keywords":"","body":"Part 14 - SHL Instruction\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe SHL command stands for shift left.\nLet’s assume the register al holds 01010101b which is an 8-bit binary value. Let’s assume the instruction is shl al, 2. Below is what transpires as we see the values move two bits to the left.\n   00010101\n00010101\nTherefore the new value will be:\n10100000\nNext week we will dive into SHR! Stay tuned!\n"},"pages/part-15-shr-instruction.html":{"url":"pages/part-15-shr-instruction.html","title":"Part 15 - SHR Instruction","keywords":"","body":"Part 15 - SHR Instruction\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe SHR command stands for shift right.\nLet’s assume the register al holds 00010100b which is an 8-bit binary value. Let’s assume the instruction is shr al, 2. Below is what transpires as we see the values move two bits to the left.\n 00010100\n   00010100\n\n\n\n\n\n\n00000101\nNext week we will dive into ROL! Stay tuned!\n"},"pages/part-16-rol-instruction.html":{"url":"pages/part-16-rol-instruction.html","title":"Part 16 - ROL Instruction","keywords":"","body":"Part 16 - ROL Instruction\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe ROL command stands for rotate left.\n\n\nIn our simple x64 example on an Ubuntu Linux machine above we see we mov 1 into al and rotate left by 1 bit.\nThe binary representation is 00000001b. If we ROL 1 bit the value simply becomes 00000010b as demonstrated below.\nWe first compile and link by:\nnasm -f elf64 -o test.o test.asm\nld -o test test.o\n\n\nWe can see here in the debugger that al starts with 1 and when we rotate left it goes to 10b.\nYou can ROL with additional bits as well. The logic would remain the same as the bits will rotate left just as we demonstrated above.\nNext week we will dive into ROR! Stay tuned!\n"},"pages/part-17-ror-instruction.html":{"url":"pages/part-17-ror-instruction.html","title":"Part 17 - ROR Instruction","keywords":"","body":"Part 17 - ROR Instruction\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe ROR command stands for rotate right.\n\n\nIn our simple x64 example on an Ubuntu Linux machine above we see we mov 1 into al and rotate right by 1 bit.\nThe binary representation is 00000001b. If we ROR 1 bit the value simply becomes 10000000b as demonstrated below.\nWe first compile and link by:\nnasm -f elf64 -o test.o test.asm\nld -o test test.o\n\n\nWe can see here in the debugger that al starts with 1 and when we rotate right it goes to 10000000b.\nNext week we will dive into Boot Sector Basics! Stay tuned!\n"},"pages/part-18-boot-sector-basics-part-1.html":{"url":"pages/part-18-boot-sector-basics-part-1.html","title":"Part 18 - Boot Sector Basics [Part 1]","keywords":"","body":"Part 18 - Boot Sector Basics [Part 1]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOver the next few tutorials we are going to write a very basic x86 Operating System to which we will use QEMU which is a full system emulator or OS emulator. You could also install VirtualBox and ultimately convert our boot loader to an ISO if you so choose.\nAt the very core of a computer booting is what we refer to as the boot loader. The boot loader physically reads the first sector or sector 0 from your HD or other media to ultimately bootstrap an OS.\nWhen the computer boots it reads the first sector which is exactly 0x200 bytes (hex) or 512 bytes in decimal.\nThe system that is reading this boot loader is what is referred to as BIOS which is a basic input output system and it loads in 16-bit mode. It does this to be compatible with older processors. Modern processors immediately switch to what we refer to as UEFI which is a more sophisticated IO system however we will focus on the very basics here with BIOS.\nNext week we will discuss what exactly goes on when BIOS reads the boot sector.\n"},"pages/part-19-boot-sector-basics-part-2.html":{"url":"pages/part-19-boot-sector-basics-part-2.html","title":"Part 19 - Boot Sector Basics [Part 2]","keywords":"","body":"Part 19 - Boot Sector Basics [Part 2]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe are at the stage where we are going to start integrating real-world code. If you do not have an active linux desktop I would suggest you get Virtualbox and Ubuntu on either your Windows or Mac. I have a prior tutorial that will walk you through this process below. For some reason I am not able to embed the link so please just copy and paste it into your browser.\nhttps://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-16/ \nYou will additionally need a text editor for the terminal. I use VIM. You will find a link to set that up as well below.\nhttps://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-17/\nIn addition you will have to install nasm so you may simply type:\nsudo apt-get install nasm\nNASM is the assembler we will use and we will focus on the intel syntax. First go into the terminal and fire up Vim and type the following:\n\n\nRemember to type 'i' to insert and then 'esc' and 'wq' to go into command mode and save your file.\nThe above line simply sets an infinite loop and does nothing more. The loop label is created to which we simply jmp back to itself. This code in itself will compile however it will not run in an OS as it does not trigger what we refer to as the magic number to which BIOS looks to understand this is the end of your boot sector. We will cover more on that in future lectures.\n\n\nWe type the above command assuming you saved your file in vim as bootsector.asm. This will create a binary file to which we will examine the contents within a hex editor. A hex editor is an application that examines each byte of data that is compiled into a file. We will see that our assembly instructions above will ultimately get translated down to their raw opcode values. The processor only understands raw opcodes which are simply operation codes. Below is a link to a table identifying the opcodes. I saved you the effort of referencing the intel dataset as it is literally thousands of pages and several volumes:\nhttp://ref.x86asm.net/coder64.html\nLet's use a hex editor like ghex and open up our bin file.\n\n\nWe see EB FE which are hex bytes and each letter is a nibble (a nibble is 4 bits or half a byte). Both EB FE make up two full bytes. Keep in mind the processor reads from disk in reverse byte order such that FE gets read first and then EB. This process is called little endian and is how the x64 processor works.\nIf you review the table to which I provided the link you will see that FE represents an INC or increment by one. This is our loop value.\nNext you will find that EB stands for JMP which is our jump instruction above.\nThis is alot of information if you are new to assembly. Take it step-by-step and follow along with me in a real linux OS and with each lesson you will get a better understanding of the basics.\nNext week we will build upon this lesson by adding some simple data to our binary.\n"},"pages/part-20-boot-sector-basics-part-3.html":{"url":"pages/part-20-boot-sector-basics-part-3.html","title":"Part 20 - Boot Sector Basics [Part 3]","keywords":"","body":"Part 20 - Boot Sector Basics [Part 3]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nFor those of you that are familiar with assembly these next several weeks/months might seem like we are progressing very slowly however the aim is to help those with little understanding of hardware to get a better understanding of the very systems that power the cloud.\nThe vast majority of AWS and Azure as well as many other cloud services utilize x64 based operating systems. Understanding what happens when these systems boot is of significant value and that is why we are going to go thorough a very slow process looking at each piece of a boot sector when a machine loads.\nLet's examine our source code. Follow along in Vim or Nano.\n\n\nLast week we learned the opcodes for line 1 and 2 to which we do not have to review. Today we add a byte of data into our code. Notice this is a hexadecimal number and will match our binary upon inspection. In future lessons we will see how it looks when we do decimal and other systems.\nLet's compile. If you do not have NASM installed please ensure you type sudo apt-get install nasm.\n\n\nLet's look at our binary in a hex editor. I use GHex as I keep to the GNU tradition as we will in future lessons use the GNU debugger called GDB. These are all on your Linux systems as I am using Ubuntu for these tutorials.\n\n\nWe saw last week that the EB and FE correspond to our INC and JMP instructions. If this is unclear please re-read last weeks lecture. We see the 3rd byte as 10. Remember this is hexadecimal so the value in decimal would be 16.\nNext week we will keep adding to our code and progress in our OS development series.\n"},"pages/part-21-boot-sector-basics-part-4.html":{"url":"pages/part-21-boot-sector-basics-part-4.html","title":"Part 21 - Boot Sector Basics [Part 4]","keywords":"","body":"Part 21 - Boot Sector Basics [Part 4]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we continue our Boot Sector Basics. Let's examine the code:\n\n\nWe add a string to our code as seen above and compile.\n\n\nLet's examine the binary in a hex editor.\n\n\nClosely examine the above. We see our original code which we do not have to review however now we see a series of numbers, hex numbers that represent ASCII characters. We see that each letter corresponds with a letter. When we say that ultimately everything goes down to 0 and 1 this is a proof of concept. As you can see EB is selected above and we can see those hex values ultimately go to 11101011 in binary.\nHomework: Google and research the ASCII conversion table and do some research on your own and better understand how hex values represent characters.\nNext week we take it to the next level. Stay tuned!\n"},"pages/part-22-boot-sector-basics-part-5.html":{"url":"pages/part-22-boot-sector-basics-part-5.html","title":"Part 22 - Boot Sector Basics [Part 5]","keywords":"","body":"Part 22 - Boot Sector Basics [Part 5]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe begin by looking at some simple additions to our code. What we will accomplish today is to create a simple operating system that does literally nothing but boot. We will use QEMU as an emulator as I am too lazy to set up VirtualBox or VMWare however you can easily port the .bin to an .iso if you chose and boot from either.\n\n\nWe are simply adding a padding algorithm on line 7 that simply examines how many bytes are left after we subtract 200h or 512 and then it pads the remaining bytes with zeros. At the end you will see what we refer to as the magic number which is 0xaa55 as this is a signature that the cpu is looking for to identify a boot sector. Remember this code is at sector 0 when it boots as there is no file system so if it finds the successful signature it will attempt to boot it.\n\n\nWe build the binary with the code above. Now let's look at the code in the hex editor.\n\n\nAs you can see it pads out the remaining bytes up to 200h or 512 with 0's as we anticipated. Below is the remainder of the binary.\n\n\nAs you can see at the very end we have 55 AA. We remember that our processor is little endian so when we code it it was aa 55 and which is in it's mapped format. When it goes into the cpu it reverses the byte order. This is critical that you understand this.\nNext week we will simply do nothing more than launch our new operating system. Stay tuned.\n"},"pages/part-23-boot-sector-basics-part-6.html":{"url":"pages/part-23-boot-sector-basics-part-6.html","title":"Part 23 - Boot Sector Basics [Part 6]","keywords":"","body":"Part 23 - Boot Sector Basics [Part 6]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThis week we will focus on how to use QEMU which is an emulator to boot our simple new OS.\n\n\nType the above to obtain qemu specifically for x86 systems.\n\n\nRun the emulator with our binary.\n\n\nYou will see the following. Keep in mind it does nothing but an infinite loop jump which we discussed in detail in previous lessons. This however is the most basic x86 OS one can create.\nIt simply looks for the signature which we spoke of last week (if this does not make sense please review last weeks lecture) and if it is exactly 200h bytes and it is placed at the first sector of the boot medium the process will be successful.\nIf you are interested there are different emulators for different architectures.\n\n\nNext week we will discuss memory addressing so that we can set up a stack within our simple os.\n"},"pages/part-24-boot-sector-basics-part-7.html":{"url":"pages/part-24-boot-sector-basics-part-7.html","title":"Part 24 - Boot Sector Basics [Part 7]","keywords":"","body":"Part 24 - Boot Sector Basics [Part 7]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe need to discuss memory at this point. Before we can discuss setting up a simple stack in our bootloader we must understand how memory is allocated in the bootsector.\n1)0x0 = Interrupt Vector Table - This is where our interrupt table exists at the very base of memory. This is where all of our interrupt calls exist.\n2)0x400 = BIOS Data Area - This stores variables about the state of the bootable device.\n3)0x7c00 = Loaded Boot Sector - This has our machine code that will be loaded into RAM by the bootloader firmware (note: firmware is simply code that runs before an OS runs like what we are doing).\n4)0x7e00 = Free - This is your stack area that you can develop in.\n5)0x9fc00 = Extended BIOS Data Area - Holds data from disk track buffers and other connected devices as remember there is no file system as of yet.\n6)0xa0000 = Video Memory - BIOS maps your video memory here at boot.\n7)0xc0000 = BIOS - Where BIOS officially resides.\n8)0x100000 = Free - Additional space you can develop in.\nThis is critical that you understand how memory is laid out at boot. In our next lesson we will create a simple stack at 0x7e00.\n"},"pages/part-25-boot-sector-basics-part-8.html":{"url":"pages/part-25-boot-sector-basics-part-8.html","title":"Part 25 - Boot Sector Basics [Part 8]","keywords":"","body":"Part 25 - Boot Sector Basics [Part 8]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we will put all the pieces together. We will create our custom OS that does nothing but boot-up, set a video mode and then only accept numeric digits in the console. This is the final tutorial in this mini-series of Boot Sector Basics.\nLet's examine our code:\n\n\nThe first thing we do is move to the programable area of the boot sector code at address 0x7c00. We then set the stack base and identify the area for our stack and set the base pointer into the stack pointer.\nWe then call our video mode function where we set a 640x200 greyscale console. We then call our get character input function that will only allow digits 0 to 9 as you can see 0x30 is the hex ascii value for 0 and 0x39 is the hex ascii value of 9. If the user types anything else in the console literally nothing will enter into the console. This is the absolute control you have in Assembly.\nLets compile and run:\n\n\nWe then see the qemu console:\n\n\nAs you can see I am only able to type numeric digits in our OS. Try it for yourself. Write the code and compile and run in the qemu editor. If you do not have qemu installed I show you in detail how to install it in the last two tutorials.\nTake the time to really review what I am doing here as it is critical to understand that this is how your computer boots before going into 32 then 64-bit mode.\nNext week we will simply discuss the high-level concept of how your computer bridges a 64-bit OS.\n"},"pages/part-26-boot-sector-basics-part-9.html":{"url":"pages/part-26-boot-sector-basics-part-9.html","title":"Part 26 - Boot Sector Basics [Part 9]","keywords":"","body":"Part 26 - Boot Sector Basics [Part 9]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBefore we dive into x64 Assembly I want to talk very briefly about what we refer to as long mode.\nWhen the computer boots it needs to enable what we refer to as the A-20 line. In early architectures, processors had 20 address lines which were A-0 to A-19 to which could access 2 to the power of 20 bytes of information. The A-20 line is an external memory reference containing a 16-bit offset address added to a 16-bit segmented number which shifts 4 bits to get the additional access.\nThis process combined with the Global Descriptor Table allows you to work with your Control Register to to execute a far jump to enter protected mode which is 32-bits.\nLong mode which is 64-bit mode which we are all familiar with in our modern architectures extend the address space to access 0xFFFFFFFFFFFFFFFF.\nThis topic alone can take weeks to explain however I wanted to at a very high level touch base on the fact that the processor needs to bridge to 32-bit mode and then finally to 64-bit through setting the A-20 line, working with the control register and GDT in combination with paging.\nI took several months to get to this point so that you have a basic understanding of Assembly as we will start to get into actual 64-bit Assembly in the following tutorials and then our C++ tutorial to which we will reverse engineer each code block into 64-bit Assembly.\n"},"pages/part-27-x64-assembly-part-1.html":{"url":"pages/part-27-x64-assembly-part-1.html","title":"Part 27 - x64 Assembly [Part 1]","keywords":"","body":"Part 27 - x64 Assembly [Part 1]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we begin our actual x64 code basics. Over the next few weeks I will create very simple examples so we get a grasp of the x64 architecture. Let's start with a basic code block:\n\n\nWe begin by declaring the .data section to which all of our global data is stores. If we had a string or some other form of hard coded data it would go in that block. In our example we will leave it empty.\nThe .text section declares where the entry point of the program will begin in our case we use _start or you can use main.\nWe simply move the value of decimal 16 or hex 10 into the 64-bit RAX register. We will see in a moment that the processor will use only the lower EAX when we debug in GDB.\nThe last piece is just a simple exit routine which we move 60 into RAX and then syscall. It simply returns operation back to the OS.\nLet's compile and link:\n\n\nLet's debug in GDB:\n\n\nLet's set the debugger for intel syntax and set a break on start:\n\n\nAs we can see 16 decimal or hex 10 is about to be moved into EAX but as we can see it has not been completed until we step forward.\n\n\nNow we can view our registers.\n\n\nWe can see that RAX holds decimal 16 or hex 10 successfully.\nWe will spend several weeks on these simple examples so you can get comfortable with how the processor operates and its internal workings.\n"},"pages/part-28-x64-assembly-part-2.html":{"url":"pages/part-28-x64-assembly-part-2.html","title":"Part 28 - x64 Assembly [Part 2]","keywords":"","body":"Part 28 - x64 Assembly [Part 2]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's continue with another example:\n\n\nAs we can see we are moving 0x10 into RAX and adding 0x05 into RAX.\n\n\nWe compile and let's disassemble.\n\n\nAs you can see as expected we see our code in debug.\n\n\nWe step twice and then...\n\n\nWe see 0x15 or 21 decimal moved into RAX. Take the time to carefully try these very simple examples as we go forward.\n"},"pages/part-29-x64-assembly-part-3.html":{"url":"pages/part-29-x64-assembly-part-3.html","title":"Part 29 - x64 Assembly [Part 3]","keywords":"","body":"Part 29 - x64 Assembly [Part 3]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we continue our tutorial with a simple subtract example. Let's examine the source code:\n\n\nLet's compile and run the debugger:\n\n\nLet's run and disassemble:\n\n\nAs we can see very we load 16 or 0x10 hex into EAX and then subtract 5 from it in the next instruction.\n\n\nWe step twice and then look at the resulting value in RAX.\n\n\nAs we can see the result is 0xb hex or 11 decimal as expected. It is important that you try these simple examples to get a grasp of what happens when we start to debug C++ code in future tutorials.\n"},"pages/part-30-x64-assembly-part-4.html":{"url":"pages/part-30-x64-assembly-part-4.html","title":"Part 30 - x64 Assembly [Part 4]","keywords":"","body":"Part 30 - x64 Assembly [Part 4]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we will code our simple, \"hello world\" program in x64 Assembly.\n\n\nWe simply create a string in the .data section and add a return character at the end of the statement. We then perform a simple write call which utilizes the OS's interrupt vector table to spit out our string in the standard output or terminal.\nWe will compile and run below:\n\n\nAs we can see \"Hello World!\" has been echoed to the terminal. Next week we will debug this simple program in GDB.\n"},"pages/part-31-x64-assembly-part-5.html":{"url":"pages/part-31-x64-assembly-part-5.html","title":"Part 31 - x64 Assembly [Part 5]","keywords":"","body":"Part 31 - x64 Assembly [Part 5]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThis lecture will be a bit longer than most however it is important that you all take the time to really code and practice the topics discussed below. Let's review our code:\n\n\nLet's compile and run:\n\n\nAs we can see from last week we successfully created our simple \"Hello World\" program successfully.\nIn prior lessons I touched upon the x64 register set however I will review again with this table:\n\n\nIn prior lessons we described what these registers basic functionality consists of however it is important to understand the 64-bit to 8-bit slices of the registers. Registers hold temporary memory. This is the key takeaway here.\nWe have three sections in Linux-based assembly which consist of a:\n.data = consist of data definitions\n.bss = consist of variable data allocation\n.text = actual code\nIn our example above we used the label of text not to be confused with the .text section. Our compiler will take all of our labels and determine an actual mapped memory location and replace each label with the memory in the actual binary file.\nIt is important to understand that each string character is a byte in length which is represented by two hex digits. There is an ascii table that you can Google that will show you all of these values. Each hex digit is a nibble or 4-bits long. For example our 'H' is 0x48 and 'e' is 0x65. Let's look at our binary in a hex editor to illustrate.\n\n\nIn last week's lecture's comments, Aaron pointed out something that is very critical that you understand when looking at Assembly in an Operating System vs Firmware such as the code we created for our Operating System in our prior lectures.\nAaron carefully pointed out in the comments last week that a SYSCALL is completely dependent on the operating system. System calls will differ depending on the OS because each OS has a different Kernel and each have their own vector interrupt tables which have an ID associated with them with a corresponding number value.\nA SYSCALL is nothing more then when a binary requests a service from a respective kernel to which will take arguments or a list of inputs. It is important to understand in x64 that System Call arguments or inputs correspond to specific registers:\n\n\nThere are 328 SYSCALLS in a traditional linux kernel. As we see above in our code we use both the SYS_WRITE and SYS_EXIT. Let's illustrate:\n\n\nPlease take a moment to look at our code above to see how this works. In SYS_WRITE we load 1 into RAX which is our SYSCALL. We load 1 into RDI which is our first argument which represents our standard output (0 = standard input & 2 = standard error). Our second argument is loaded into RSI which is our text label to which when compiled will have an actual memory address as you will see this in a debugger. Finally our third argument will hold the string length which is 13 in our case and loaded into RDX. As an exercise I want you to write out how SYS_EXIT does the same and keep in mind there is only 1 argument there. PLEASE REVIEW the code above to firmly understand this before moving on!\nIn addition we have our _start label to which our respective operating system will look for otherwise it will throw an error when it seeks to find an entry point to our code. The global declaration tells the linker the actual address of the data.\nNext week we will debug the binary in GDB.\n"},"pages/part-32-x64-assembly-part-6.html":{"url":"pages/part-32-x64-assembly-part-6.html","title":"Part 32 - x64 Assembly [Part 6]","keywords":"","body":"Part 32 - x64 Assembly [Part 6]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's review our code.\n\n\nCompile...\n\n\nDebug...\n\n\nLet's evaluate what is inside the memory address of 0x6000d8.\n\n\nAs we can see \"Hello World\" with the return character will then be moved into our RSI register.\nNext week we will examine this a bit closer.\n"},"pages/part-33-x64-assembly-part-7.html":{"url":"pages/part-33-x64-assembly-part-7.html","title":"Part 33 - x64 Assembly [Part 7]","keywords":"","body":"Part 33 - x64 Assembly [Part 7]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's again review our source code.\n\n\nLet's compile...\n\n\nAs we have seen before it produces our string.\n\n\nWe debug and see the string being moved into 0x6000d8 and then RSI.\n\n\nJust to verify we can see the string at the aforementioned address. NOW FOR A BIT OF FUN :)...\n\n\nHere we demonstrate we have the power to simply hack and redefine the string in memory. We are simply setting a char byte length and setting a new string.\n\n\nAs we can see we have successfully altered the string in memory.\n\n\nWe continue and run through the binary and see that our hack continues through RSI.\n\n\nFinally we see when we run the binary we have successfully hacked it's operation. This is a very simple example however shows the power of truly understanding assembly at this level. GUI debugger tools will also provide this functionality however I like to use the command line tools so that they could be used on every environment.\nThe purpose of these tools is to UNDERSTAND how this is done and what to look for when you are professionally reversing in real-time. You need to understand how an attacker can alter memory and/or instructions. We need more professional RE's to help defend infrastructures throughout the world and hopefully these tutorials motivate you toward a career in such.\n"},"pages/part-34-x64-c++-1-code-part-1.html":{"url":"pages/part-34-x64-c++-1-code-part-1.html","title":"Part 34 - x64 C++ 1 Code [Part 1]","keywords":"","body":"Part 34 - x64 C++ 1 Code [Part 1]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we start our RE with the C++ language. The vast majority of malware is written in C++ and walking through simple code examples over the coming months and breaking them down in a debugger will give you a real hands-on approach to learning true RE.\nWe will use Kali Linux going forward with Radare 2. You can get VirtualBox and download the Kali Linux x64 Appliance to follow along.\nLet's start with the C++ 1 code example:\n\n\nHere we simply create a main function and use the C++ output stream library to output the text \"Hello World\" with a new line at the end to the terminal. Let's compile and link:\n\n\nLet's run in the terminal:\n\n\nAs we can see \"Hello World\" successfully echoed to the terminal.\nNext week we will introduce Radare 2 and debug the code and examine what it looks like in x64 Assembly.\n"},"pages/part-35-x64-c++-2-debug-part-2.html":{"url":"pages/part-35-x64-c++-2-debug-part-2.html","title":"Part 35 - x64 C++ 2 Debug [Part 2]","keywords":"","body":"Part 35 - x64 C++ 2 Debug [Part 2]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's review our code:\n\n\nCompile:\n\n\nRun:\n\n\nFor literally years I have been using GDB as the debugger of choice. The reason is that it is on every Linux based system which runs just about every IoT and Server in the world. In addition, there are versions for Windows.\nI have struggled hard with this but have decided to introduce another terminal based debugger called Radare 2. The reason I like Radare 2 so much is that it is still terminal based yet more robust with its feature set. If you are running a Kali Linux VM like I am here you can simply the below.\nLet's open up our binary for write mode and simply analyze the binary.\n\n\nOk, there is a lot going on here. Let's break it down. First, we open up Radare 2 in write mode by typing 'r2 -w ./1' and then use the 'aaa' command to analyze the binary. We then use 's sym.main' to seek to the main routine of the binary which is our entry point. We then do a 'pdf' command to disassemble the binary.\nWe see what we refer to as the prologue where we push rbp the stack base pointer onto the stack. We then move rsp into rbp for safe keeping and then we reserve 0x10 hex bytes or 16 decimal bytes on the stack to make room for our string.\nIf none of this makes sense please go back to the beginning of the tutorial series to review basic assembly and the registers as it is CRITICAL you understand this before we move forward.\nWe can clearly see the qword of 'Hello World\\n' at memory address 0x2005 and then we see our C++ library call for the output stream which is cout to display our string to the terminal.\nLet's examine 0x2005 to verify that our string is at that location:\n\n\nNext week we will hack the value and modify the binary. I highly encourage you all to install VirtualBox which is free and get the Kali Linux VirtualBox image and install Vim as well.\nThere are tutorials on all of this in my prior series. Stay tuned for the hack next week!\n"},"pages/part-36-x64-c++-3-hacking-part-3.html":{"url":"pages/part-36-x64-c++-3-hacking-part-3.html","title":"Part 36 - x64 C++ 3 Hacking [Part 3]","keywords":"","body":"Part 36 - x64 C++ 3 Hacking [Part 3]\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's review our code:\n\n\nCompile:\n\n\nRun:\n\n\nLet's remember this line above when we compare against our hacked binary.\nLet's open up our binary for write mode and simply analyze the binary.\n\n\nOk, there is a lot going on here. Let's break it down. First, we open up Radare 2 in write mode by typing 'r2 -w ./1' and then use the 'aaa' command to analyze the binary. We then use 's sym.main' to seek to the main routine of the binary which is our entry point. We then do a 'pdf' command to disassemble the binary.\nWe see what we refer to as the prologue where we push rbp the stack base pointer onto the stack. We then move rsp into rbp for safe keeping and then we reserve 0x10 hex bytes or 16 decimal bytes on the stack to make room for our string.\nIf none of this makes sense please go back to the beginning of the tutorial series to review basic assembly and the registers as it is CRITICAL you understand this before we move forward.\nWe can clearly see the qword of 'Hello World\\n' at memory address 0x2005 and then we see our C++ library call for the output stream which is cout to display our string to the terminal.\nLet's examine 0x2005 to verify that our string is at that location:\n\n\nNOW TIME FOR THE HACK!\nLet's hack the value to something like:\n\n\nNow let's see what is now inside memory value @ 0x2005!\n\n\nBOOM! As we can see we have hacked the value and when we quit Radare 2 it will write it and modify our binary as such.,\n\n\nAs you can see we have hacked the binary! This is very basic but now you have an elementary level of understanding of Reverse Engineering a C++ binary.\nNext week we will continue our journey into C and step-by-step reverse engineering.\n"},"pages/part-37-x64-c-amp;-genesis-of-life.html":{"url":"pages/part-37-x64-c-amp;-genesis-of-life.html","title":"Part 37 - x64 C & Genesis Of Life","keywords":"","body":"Part 37 - x64 C & Genesis Of Life\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nCongrats you wrote, compiled and hacked your first C++ program. For the rest of this tutorial I am going to focus on the father of all programming languages from \"Hello World\" to web servers in the programming language to which ALL modern languages come from C.\nLike the variety of religions there are programming languages. Nonetheless there is the ROOT religion or language to which all spawn which is C. I am going to over the next several months teach you C and Reverse Engineer each binary so you have a mastery over the MASTER language of all existence.\nWhen we need to develop in an agile environment we will of course use Java or Python or any of the other rapid development languages however if you are to master Cyber Engineering you MUST become ONE with the WORD to which in digital and cyber terms is the C Programming Language.\nThink of C as if you are in church where Python or Java or C# you are in a secular environment. C will allow TOTAL and complete control over your program or environment where Java or Python will allow only partial control however they are NECESSARY languages in today's rapid development business logic environments.\nIn our next lesson we begin with the basic \"hello world\" program as we did in our prior lesson however we now will work with C. Remember Einstein - \"I want to know God's thoughts, the rest are details.\" This is the difference between C and any other language you are sitting at the ROOT of engineering design for portable systems!\n"},"pages/part-38-x64-networking-basics.html":{"url":"pages/part-38-x64-networking-basics.html","title":"Part 38 - x64 Networking Basics","keywords":"","body":"Part 38 - x64 Networking Basics\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOk so what now? Where are we in the world? What is our purpose? What shall I focus on? What shall I learn?\nThere are over 30 billion devices connected to the Internet today. Nonetheless, the common thread in all basic architecture is the C programming language.\nWe have established that networking can be described in a very high-level pseudo framework called the OSI Model which has 7 layers.\nPLEASE DO NOT THROW SAUSAGE PIZZA AWAY. Ok I am not insane, well, ok I am but this is a good standard agreed upon way to remember the layers in the OSI model which is our Open Systems Interconnection model.\n1)PHYSICAL LAYER - Raw electrical layer which read voltages on an ethernet cable or reading the Wi-Fi RF (radio frequencies). Protocols associated: USB, DSL, ISDN, Infrared, etc...\n2)DATA LINK LAYER - Deals with how a message between notes starts and ends called framing which has some error correction, detection and some flow control. Protocols associated: Ethernet, VLAN, etc...\n3)NETWORK LAYER - Transmits packets between nodes in different networks which involves routing. Protocols associated: IPX, NAT, ICMP, ARP, etc...\n4)TRANSPORT LAYER - Reliably deliver data between two hosts which must split it up into chunks to send. Protocols associated: NetBIOS, TCP, UDP, etc...\n5)SESSION LAYER - Adds checkpoint and resume in addition to term dialogues. Protocols associated: SMB, SOCKS, etc...\n6)PRESENTATION LAYER - Where data structure for and presentation for an application are created where we have encoding, serialization and encryption. Protocols associated: TLS, SSL, etc...\n7)APPLICATION LAYER - Web browsers and apps that use web interfaces like email, etc. Protocols associated: DHCP, DNS, HTTP, HTTPS, POP3, SMTP, FTP, TELNET, etc...\nAs we browse a website we start at the PHYSICAL and go to the APP and as it hits the server it is at the APP and goes back down to the PHYSICAL and back through the cycle.\nThis is an important series of concepts that you must understand in any basic networking. This is NOT a course in networking as we will touch BRIEFLY on these concepts so I would suggest you find a free course on YouTube for networking if you are stuck. I want to get through some basic theory so we can work with C networking apps.\n"},"pages/part-39-why-c.html":{"url":"pages/part-39-why-c.html","title":"Part 39 - Why C?","keywords":"","body":"Part 39 - Why C?\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nSo... What does an x64 server or computer actually understand? 0100010100100100101010 and many more...\nA small level above that we are at machine code which is a series of hex digits which translate into machine instructions and/or data.\nWith the C programming language, we created a construct to more easily create programs to communicate with the hardware. C is the Grandfather of almost every programming language in modern existence.\nC abstracts away the x64 binary of 010101000101001011 or machine code of 0x90 0x45 0x22 0x22 or assembly mov rax, 0x222323123, etc...\nNext we create our first real C program!\n"},"pages/part-40-hacking-hello-world!.html":{"url":"pages/part-40-hacking-hello-world!.html","title":"Part 40 - Hacking Hello World!","keywords":"","body":"Part 40 - Hacking Hello World!\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOk it is time we look at the most basic C program, debug it and hack it. If we are to have mastery we must create and destroy in a single-step so that we have mastery over the domain.\n\n\nLet us fire up VIM and type out the following. We include our standard library and create a main function to which we use the library function of printf to echo a string of chars and since the type of main is int meaning integer we return 0.\nLet us compile and see what happens when we run:\n\n\nAs we see like we did in our C++ example we see 'Hello World!' echoed successfully.\nLet's debug in Radare:\n\n\nThis is simple, we use aaa to analyze the binary and seek to main with s sym.main.\nLet's look at the assembly and analyze:\n\n\nAssembly! The definition of raw sexy!\nI went over this in detail in the previous lessons on Assembly but let us review.\n1)We push rbp which means we push the value currently in the base pointer onto the stack.\n2)We lea rdi, qword str.Hello_World which means we load the effective address of the quad word of our string into the rdi register. So far should be simple for you to follow along.\n3)We then call sym.imp.puts um wait! We used printf what the hell! Well our compiler optimizes our code and the compiler chose the puts function in the stdio library to echo the string to our terminal. Again easy enough.\n4)We clean out eax and then pop the original value in the rbp register back into rbp. If you are confused by this review the earlier part of the series please.\nWe know our string 'Hello World!' lives at a pretty house in Arlington, VA at the address of 0x2004 well ok, it's not Arlington, VA but it is in mapped memory (since we are not technically debugging we are messing with mapped code meaning the same values on disk).\n\n\nTo confirm we see the value at 0x2004 is 'Hello World!' Let's hack that value to anything we want with the w command and write directly to that mapped memory address.\n\n\nLet us re-examine who NOW lives in our Arlington, VA house!\n\n\nSuccess! We hacked the value and when we exit our debugger we see:\n\n\nWe have successfully altered the binary.\nThis is alot to digest here. If you are stumped ask questions in the comments PLEASE! Do not continue as I am here to help. It is CRITICAL you understand these most basic things before we continue!\n"},"pages/part-41-hacking-variables!.html":{"url":"pages/part-41-hacking-variables!.html","title":"Part 41 - Hacking Variables!","keywords":"","body":"Part 41 - Hacking Variables!\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn C we have several data types to which we can create variables. I will use a few simple examples:\n\n\nLet's compile and run:\n\n\nOk as we can see we have a character an integer and a double. These are some of the most basic data types in C to which we have created a series of variables as shown above.\nLet us load the binary into Radare:\n\n\nLet's disassemble at main:\n\n\nOk very simply we see 3 variable declarations defined up at the top in reverse order as they are local_1h which is our char a, local_8h which is our int b and local_10h which is our double c. You can also see the rbp base pointer allocating space for these variables. This is nice pseudo code that the debugger shows you up top.\nOk stay with me!\nWithin memory at 0x0000113d we see the instructions mov byte [local1_h], 0x61 which is in our ascii table a lowercase 'a'. We know that [local1_h] is not real code however what is going on under the hood is the fact that these variables are pushed onto the stack in reverse order as we can see above. Therefore, if we were to hack our code to something like mov byte [rbp-0x1], 0x62 what do you think might happen? Very simple, we know that in reality the code at the mapped memory address of 0x0000113d what is really going on is mov byte [rbp-0x1], 0x61. Quite simply what we have just done is hack our value of 'a' to 'b'. This should hopefully make sense to you.\n\n\nNow let us re-examine our binary:\n\n\nAs we can clearly see at memory address 0x0000113d we in fact see 'b'. We have successfully hacked this portion.\n\n\nWe exit out of Radare and re-run the binary and we can see we have successfully hacked the value.\nHOMEWORK TIME! I want you to with this knowledge now hack the int and the double. I want you to put your results in the comment sections below. It is VERY important that you type all of this out and actually explore the exercises so I am looking forward to seeing your hacks in the comments!\n"},"pages/part-42-hacking-branches!.html":{"url":"pages/part-42-hacking-branches!.html","title":"Part 42 - Hacking Branches!","keywords":"","body":"Part 42 - Hacking Branches!\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's take a look at some branching logic:\n\n\nAs we can plainly see we init an int to 1 and if the variable is equal to 1 the first if statement prints a response to standard output.\nLet's compile:\n\n\nLet's run:\n\n\nAs we can logically see the first branch is taken. Let's take it into Radare and look around at the assembly:\n\n\nWe can see the branching logic with the aqua colored arrows. At 0x0000114a we see our first branch being loaded into rdi. Take note at 0x00001148 we see a jne 0x1158. At 0x00001158 we see our second branch being loaded into rdi.\nThe jne means jump if not equal. This means if what is being compared in 0x00001144 is not equal to 1 (we see 1 being compared to what is in local_4h which we know is pseudo code for what is actually in rbp-0x4. This should make sense as I went over this in detail last week if you are confused please revisit our last lesson.\nTo hack we simply make the jne statement to je which is jump if equal which we know the cmp or comparison is equal so it will now branch to \"A is NOT 1!\".\n\n\nWhen we exit Radare we can see we have hacked the binary successfully:\n\n\nStay tuned!\n"},"pages/part-43-hacking-pointers!.html":{"url":"pages/part-43-hacking-pointers!.html","title":"Part 43 - Hacking Pointers!","keywords":"","body":"Part 43 - Hacking Pointers!\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe are at the end of the road. This is the final video in the x64 series. The final topic is that of pointers.\nWhat are pointers? Let us start with an example.\n\n\nA pointer is nothing more than a memory address. When we compile we will clearly see where lottery_number lives in mapped memory (this is a running example unlike our unmapped Radare examples).\n\n\nLet's add a true pointer to the example:\n\n\nWe see the same value:\n\n\nLet us experiment more:\n\n\nWe see the pointer address point to a new address:\n\n\nRemember pointers are memory addresses of other variables. Let's look at it another way:\n\n\nLet us compile:\n\n\nWe deference by doing the following:\n\n\nThen we compile:\n\n\nWe can see the deference pointer is equal to 777.\n\n\nWe can see the example with an array:\n\n\nLet's debug:\n\n\nThen we disassemble:\n\n\nLet's hack!\n\n\nLet's re-examine the binary:\n\n\nWe can see we hacked the value of 3 with 6.\n\n\nWe can see we have made the successful hack.\nI hope over the years through the literal hundreds of x86, ARM and x64 tutorials you have a basic knowledge of how to do GOOD to protect critical infrastructures from malicious hands by understanding how the enemy works. Go and do GOOD work!\n"},"pages/arm-64-course.html":{"url":"pages/arm-64-course.html","title":"ARM-64 Course","keywords":"","body":"\n    The 64-bit ARM Architecture\n\n\n    Let's dive in rightaway!\n"},"pages/part-2-development-setup.html":{"url":"pages/part-2-development-setup.html","title":"Part 2 - Development Setup","keywords":"","body":"Part 2 - Development Setup\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to set up our development environment. We will need the following:\nRaspberry Pi 4\n64GB MicroSD Card\nMicro SD Card Reader/Writer\nDownload 64-bit Kali Linux ARM Image\nDownload balenaEtcher\nFlash Kali Linux ARM Image\nOPTIONAL: Video [Load Kali RPI 4]\nHow To Install VIM\nGit Clone & Build Radare2 Software\n\n\n\n\nRaspberry Pi 4\nhttps://www.adafruit.com/product/4292\n64GB MicroSD Card\nhttps://www.sparkfun.com/products/16498\nMicro SD Card Reader/Writer\nhttps://www.walmart.com/ip/Iogear-GFR204SD-SD-MicroSD-MMC-Card-Reader-and-Writer/15522266\nDownload 64-bit Kali Linux ARM Image\nKali Linux RaspberryPi 2 (v1.2), 3 and 4 (64-Bit) (img.xz) \nhttps://www.offensive-security.com/kali-linux-arm-images\nDownload balenaEtcher\nhttps://www.balena.io/etcher\nFlash Kali ARM Image\nOPTIONAL: Video [Load Kali RPI 4]\nhttps://youtu.be/Jquf9BDm4iU\nHow To Install VIM\nhttps://www.simplified.guide/ubuntu/install-vim \nAfter obtaining all the necessary devices and software please watch the video on how to set up your environment as Null Byte did an amazing job with a step-by-step tutorial which will get you set-up in minutes.\nThe next step is to git clone and build the Radare2 software as this will we want the latest version as the standard version built into Kali will not be sufficient for our needs.\nGit Clone & Build Radare2 Software\nhttps://github.com/radareorg/radare2\ncd Documents\ngit clone https://github.com/radareorg/radare2.git\nsys/install.sh\n\n\nFinally we will be using a text editor to build our code. Kali has both the VIM and Nano text editors built-in. We will be using VIM but you are free to use whatever one you are comfortable with.\nIn our next lesson we will write our first C++ program which will be \"Hello World!\".\n"},"pages/part-3-hello-world.html":{"url":"pages/part-3-hello-world.html","title":"Part 3 - \"Hello World\"","keywords":"","body":"Part 3 - \"Hello World\"\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to start at the beginning and take a very simple C++ program that does nothing more than use the stream insertion operator to send a string literal to the stdout and then use the end line manipulator to flush the output buffer.\nLet's start by creating a file 0x01_asm64_helloworld.cpp and type the following into it.\n#include \n\nint main()\n{\n    std::cout \n\nLet's compile and link.\ng++ -o 0x01_asm64_helloworld 0x01_asm64_helloworld.cpp\n\n\nLet's run.\n./0x01_asm64_helloworld\n\n\nWe see the simple result.\nHello World!\n\n\nThese lessons are deliberately intended to be SHORT an SIMPLE. I know a number of you are more advanced however I really want to make this course as beginner friendly as possible.\nIn our next lesson we will debug this very simple binary using our dev build of Radare2.\n"},"pages/part-4-debugging-hello-world.html":{"url":"pages/part-4-debugging-hello-world.html","title":"Part 4 - Debugging \"Hello World\"","keywords":"","body":"Part 4 - Debugging \"Hello World\"\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our first program utilizing our dev build of Radare2.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x01_asm_64_helloworld\n\n\nLet's take advantage of Radare2's auto analysis feature.\naaa\n\n\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.\nood\n\n\nNow that we have a running instance we can seek to the main entry point of the binary.\ns main\n\n\nLet us take an initial examination by doing the following.\nv\n\n\nThe output from Radare2 is entirely too large to display in this course however as you follow along in your own environment you will be able to follow along. We will keep this convention throughout this course for better readability of the document.\nRemember there is a difference between an executable on disk and what resides when it is mapped. When it is on disk it is referred to as unmapped. We will look at that at the end of the lesson. For now we are looking at a mapped version as you see it is an offset of the mapped code we will examine later.\nDo you notice that as your mapped memory values are different than mine? That is because of ALSR.\nAddress Space Layout Randomization (ASLR) is a security technique used in operating systems, first implemented in 2001. The current versions of all major operating systems (iOS, Android, Windows, macOS, and Linux) feature ASLR protection.\nASLR is primarily used to protect against buffer overflow attacks. In a buffer overflow, attackers feed a function as much junk data as it can handle, followed by a malicious payload.\nWe notice in my mapped memory that at address 0x55629cab48 we see our string \"Hello World!\". You will have a different offset as we discussed but will find the same result.\nLet us get back to a console window by doing the following.\nq\n\n\nLet's verify our initial analysis.\n[0x55629ca9e4]> ps @0x55629cab48\nHello World!\n[0x55629ca9e4]>\n\n\nWe can see that it is in fact true that at the mapped memory address of 0x55629cab48 we see the string \"Hello World!\".\nLet's also look at the hex view so we can see and better understand what is going on at the machine code level.\npx @0x55629cab48\n\n\n\n\nWe see our \"Hello World!\" string and we can again see that it exists starting at the mapped memory address of 0x55629cab48.\nWe see that our machine code instructions are 16 bytes long or 64-bits long as we can see the first column start at 48 and end with 00.\nIt is VERY important we understand a few key things. First is the fact that a single hex digit is 4-bits wide or a nibble or a half of a byte. In our case 4 is a half of a byte and 8 is the other half of the byte. Together they form a byte and in our case a valid ascii char code.\nLet's visit the online ascii table.\nhttp://www.asciitable.com\nSecond, we need to understand what the machine code translates to. Let's look up what 48 is in hex. We see that it is a capital 'H'. That maps perfectly as you see in the right hand column of the image above we see a 0 and below it the letter H.\nObviously 65 hex is 'e' and so on and so forth. You can extrapolate the rest for yourself now that you have a basic understanding of what you are looking at.\nLet's now define a breakpoint on main and execute this binary to verify in fact that when we continue on from main it will print \"Hello World\" to the stdout.\n[0x55629ca9e4]> db 0x55629ca9e4\n[0x55629ca9e4]>\n\n\nLet us continue and verify our hypothesis. First we continue and break on main.\n[0x55629ca9e4]> dc\nhit breakpoint at: 0x55629ca9e4\n[0x55629ca9e4]>\n\n\nNow we step again and since there are no other breakpoints we will conclude the execution and verify our result in stdout.\n[0x55629ca9e4]> dc\nHello World!\n(59575) Process exited with status=0x0\n[0x7fb146cb8c]>\n\n\nLet's exit Radare2.\nq\ny\ny\n\n\nLet us rerun Radare2 again and this time not run the binary and simply look at the unmapped binary that is on disk.\nradare2 ./0x01_asm_64_helloworld\n\n\nLet's auto analyze.\naaa\n\n\nLet's seek to main.\ns main\n\n\nThen view.\nv\n\n\nNotice that we have \"Hello World!\" this time at the unmapped memory address of 0xb48. You notice that when you ran the binary the executable had an offset to this value but the LSB were 48 hex.\nI hope this lesson helps you to understand the basics of 64-bit ARM assembly and how to reverse it properly.\nIn our next lesson we will hack the value.\n"},"pages/part-5-hacking-hello-world.html":{"url":"pages/part-5-hacking-hello-world.html","title":"Part 5 - Hacking \"Hello World\"","keywords":"","body":"Part 5 - Hacking \"Hello World\"\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nIn the last lesson we spent a good deal of time really understanding what is going on inside our binary. This laid the groundwork for an easy hack.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x01_asm_64_helloworld\n\n\nLet's auto analyze.\naaa\n\n\nSeek to main.\ns main\n\n\nView disassembly.\nv\n\n\nWe see the memory addresses as they are on disk as we are not running the binary as we discussed in the last lesson.\nWe see that at 0xb48 we very easily find our string.\nLet's get back to the terminal view.\nq\n\n\nLet's verify the string.\n[0x000009e4]> ps @0xb48\nHello World!\n[0x000009e4]>\n\n\n\nLet's hack the string.\n[0x000009e4]> w Hacked World @0xb48\n\n\nLet's verify the hack.\n[0x000009e4]> ps @0xb48\nHacked World\n[0x000009e4]>\n\n\nLet's quit radare2.\nq\n\n\nNow let's run our binary again!\n./0x01_asm_64_helloworld\nHacked World\n\n\nWe see that we very easily hacked the binary. These lessons will help you understand how an attacker creates a workflow so you can learn how to anticipate and better reverse engineer.\nIn our next lesson we will work with simple I/O.\n"},"pages/part-6-basic-io.html":{"url":"pages/part-6-basic-io.html","title":"Part 6 - Basic I/O","keywords":"","body":"Part 6 - Basic I/O\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to look at a basic I/O C++ program that has some minimal validation.\nBefore I get into the brief lecture as I try to keep these short, I wanted to explain why I am not using the textbook straight cin examples that you see across the globe.\nThe cin, standard input stream, which takes input from the keyboard is referred to as our stdin.\nWhat cin does is use whitespace, tab and newline as a terminator to the input stream. For example if you input 'abc' and hit a tab or put a whitespace or newline by hitting return the data to the right of it will be ignored.\nThe problem is if you read from cin again it will pick up the remaining data in the stream if you do not flush the input buffer.\nIf you had for example:\nstd::cin >> val1;\nstd::cin >> val2;\n\n\nIf the user enters 1 and then leaves a space and then 2 and presses enter, you have no issue. 1 will be assigned into val1 and 2 will be assigned to val2 as they are chained.\nThe problem is what if you enter 'Hey Jude' instead of an integer? What happens is it tries to read an integer and it goes into a failed state and from that point everything else it is extracting is unreliable.\nI did not mean to be long winded but I really wanted to emphasize why you would NEVER use cin by itself and I mean NEVER!\nLet's take a look at our basic i/o program that we will debug in the next lesson with a very basic C++ program that validates input.\n#include \n#include \n#include \n\nint main()\n{\n    int age = 0;\n    bool valid = false;\n    char null = '\\0';\n\n    while (!valid)\n    {\n        std::cout > age) || (is >> std::ws && is.get(null)) || age >= 100 || age \n\nWe start by importing iostream, sstream and string. So far nothing tricky.\nWe then prompt the user to enter their age. We then create a string object called line and take advantage of C++ getline() which is a standard C++ library function that is used to read a string or a line from an input stream properly.\nWe then take advantage of the stringstream as it associates a string object with a stream allowing you to read from the string as if it were a stream like we would do with raw cin. In this simple example we create an is object which is short for input stringstream and connect it with our line object.\nThen before we echo data to stdout we do a little validation. We first check to see if age is the type it was defined as which is an int OR is there a white space in the stream after a given integer OR is age greater than 100 or less than 0. Very simply it provides a response if the input does not meet this criteria.\nFinally if all is well it echoes out a simple cout.\nLet's compile and link.\ng++ -o 0x02_asm64_basicio 0x02_asm64_basicio.cpp\n\n\nLet's run.\n./0x02_asm64_basicio\n\n\nDepending on what you enter it will validate as appropriate as described above. PLEASE try this example and manipulate the source to get a full understanding of what is going on here.\nIn our next lesson we will debug this very simple binary using our dev build of Radare2.\n"},"pages/part-7-debugging-basic-io.html":{"url":"pages/part-7-debugging-basic-io.html","title":"Part 7 - Debugging Basic I/O","keywords":"","body":"Part 7 - Debugging Basic I/O\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very basic input validation program from last lecture.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x02_asm_64_basicio\n\n\nLet's take advantage of Radare2's auto analysis feature.\naaa\n\n\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.\nood\n\n\nNow that we have a running instance we can seek to the main entry point of the binary.\ns main\n\n\nLet us take an initial examination by doing the following.\nv\n\n\nA couple things to note we see at 0x5566be00cc the output of \"Enter Age: \" and at 0x5566be017c a call to istream which is going to capture the values from stdin to which we identify a failure condition at 0x5566be01d0 where we find \"Dude be real!\" and we see the results of a proper input validation starting at 0x5566be0218 _where we say \"You are \" and then we see a call to the output stream at _0x5566be0238 and then the continuation of the validation string at 0x5566be0244 where we say \" years old, seems legit!\".\nThe next step is to look at the binary with a visual graph.\nq\nVV\nppppp\n\n\nThis is our zoomed out visual graph. We can see how the program moves from function to function. You will notice there are a series of tags such as [ol] or [ok] and you can literally type the following:\np\nol\n\n\nNow we are inside that function.\nThen to go back to main.\nqq\ns main\nVV\n\n\nThis will take us to an expanded graph that we can also use our arrow keys to look around.\nLet's set a breakpoint at 0x5566be00c4 where we bne 0x5566be0214 which is where we see the success route of our binary.\n[0x5566be0194]> db 0x5566be00c4\n[0x5566be0194]> dc\nhit breakpoint at: 0x5566be00c4\nEnter Age: 33\nhit breakpoint at: 0x5566be00c4\n[0x5566be0194]> dc\nYour are 33 years old, seems legit!\n(2215) Process exited with status=0x0\n\n\nAs you can see we cycled the loop and entered in a correct validation and was able to get our success return.\nIn our next lesson we will hack the validation.\n"},"pages/part-8-hacking-basic-io.html":{"url":"pages/part-8-hacking-basic-io.html","title":"Part 8 - Hacking Basic I/O","keywords":"","body":"Part 8 - Hacking Basic I/O\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the input validation from our last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x02_asm_64_basicio\n\n\nLet's auto analyze.\naaa\n\n\nSeek to main.\ns main\n\n\nView disassembly.\nv\n\n\nLet's get back to the terminal view.\nq\n\n\nLet's look at the visual graph and begin with the first b.ne which under the proper expected conditions it will only accept a valid integer between 0 and 100 as we demonstrated in the last lecture.\nThe b.ne meaning branch if not equal. The assembly before it simply does not matter in this case as we know if we leave b.ne as is the input validation will be in tact.\nWe need to disable this input validation by changing that instruction to a b.eq or branch if equal.\nLet's look at that code block.\n\n\nWe see that it if it is true, meaning validation is correct and we have an integer between 0 and 100 we will follow the true green line to the next function.\nIf we fail the validation we will be sent to the false condition to obtain new input.\nLet's q to a terminal prompt.\nqq\n\n\nLet's seek to the statement we want to hack.\n[0x000010a4]> s 0x000010c4\n\n\nLet's now hack the branch as discussed.\n[0x000010c4]> wa b.eq 0x1214\nWritten 4 byte(s) (b.eq 0x1214) = wx 800a0054\n[0x000010c4]>\n\n\nLet's quit.\nq\n\n\nNow when we run the binary it will simply ignore any input at all let alone input validation and simply arrive at the desired point.\nkali@kali:~/Documents/0x02_asm_64_basicio$ ./0x02_asm_64_basicio\nYour are 0 years old, seems legit!\nkali@kali:~/Documents/0x02_asm_64_basicio$\n\n\nEven though 0 is valid it is simply an unstable value that happened to be in one of the registers that the program expected to be properly assigned during a normal program flow. Here we were able to change the binary permanently to accomplish our hack.\nThese are VERY simple examples however when you combine these as you progress you will literally be able to Reverse Engineer anything.\nIn our next lesson we will discuss the char primitive data type.\n"},"pages/part-9-character-primitive-datatype.html":{"url":"pages/part-9-character-primitive-datatype.html","title":"Part 9 - Character Primitive Datatype","keywords":"","body":"Part 9 - Character Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the first of the C++ primitive. The char dataype is used to store a single character and must be surrounded by single quotes.\nLet's look at our basic example.\n#include \n\nint main()\n{\n    char my_char = 'c';\n\n    std::cout \n\nExtremely simple. We are simply creating a char variable called my_char _and assigning it the character _c.\nWe then print it to stdout and nothing more.\nLet's compile and link.\ng++ -o 0x03_asm64_char_primitive_datatype 0x03_asm64_char_primitive_datatype.cpp\n\n\nLet's run.\n./0x03_asm64_char_primitive_datatype\n\n\nVery simply we see the following.\nc\n\n\nIt successfully echoed c to the terminal stdout. Very simple.\nNext week we will debug this very simple example.\n"},"pages/part-10-debugging-character-primitive-datatype.html":{"url":"pages/part-10-debugging-character-primitive-datatype.html","title":"Part 10 - Debugging Character Primitive Datatype","keywords":"","body":"Part 10 - Debugging Character Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple character primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x03_asm64_char_primitive_datatype\n\n\nLet's take advantage of Radare2's auto analysis feature.\naaa\n\n\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.\nood\n\n\nNow that we have a running instance we can seek to the main entry point of the binary.\ns main\n\n\nLet us take an initial examination by doing the following.\nv\n\n\nWe can see that at 0x5576bff9ec we are moving 0x63 or ascii 'c' into the w0 register. REMEMBER your address will be different due to ASLR.\nLet's set a breakpoint at 0x5576bff9ec and verify the contents.\n[0x5576bff9e4]> db 0x5576bff9ec\n[0x5576bff9e4]> dc\nhit breakpoint at: 0x5576bff9ec\n[0x5576bff9ec]> dr w0\n0x00000001\n[0x5576bff9ec]> ds\n[0x5576bff9ec]> dr w0\n0x00000063\n[0x5576bff9ec]>\n\n\n\nThis is very simple but let's break it down. We set our breakpoint and continued. We looked inside the register w0 and saw that the value is 0x01.\nWe then stepped once and looked again to see that 0x63 was successfully moved into w0 as now we see it does in fact contain 0x63.\nIf we dc again we see it echoed to the stdout as expected.\n[0x5576bff9ec]> dc\nc\n(10845) Process exited with status=0x0\n[0x7f9727503c]>\n\n\nIn our next lesson we will hack the char to another value of our choice.\n"},"pages/part-11-hacking-character-primitive-datatype.html":{"url":"pages/part-11-hacking-character-primitive-datatype.html","title":"Part 11 - Hacking Character Primitive Datatype","keywords":"","body":"Part 11 - Hacking Character Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the char from the last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x03_asm64_char_primitive_datatype\n\n\nLet's auto analyze.\naaa\n\n\nSeek to main.\ns main\n\n\nView disassembly.\nv\n\n\nLet's get back to the terminal view.\nq\n\n\nAll we have to do is write assembly to 0x000009ec and specify a new char of our choosing.\n[0x000009e4]> wa movz w0, 0x66 @ 0x000009ec\nWritten 4 byte(s) (movz w0, 0x66) = wx c00c8052\n[0x000009e4]>\n\n\nLet's quit and run the new binary from the terminal.\n[0x000009e4]> q\nkali@kali:~/Documents/0x03_asm64_char_primitive_datatype$ ./0x03_asm64_char_primitive_datatype\nf\n\n\nAs you can see we successfully and permanently hacked the binary! It is very trivial but when you take the last series of lessons together with each new successive lesson you build a real skill-set!\nIn our next lesson we will work with the boolean primitive datatype.\n"},"pages/part-12-boolean-primitive-datatype.html":{"url":"pages/part-12-boolean-primitive-datatype.html","title":"Part 12 - Boolean Primitive Datatype","keywords":"","body":"Part 12 - Boolean Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the C++ boolean datatype that stores either a 0 or 1 to represent 0 for false _and _1 for anything true.\nThis kind of flag is used extensively in programming in general and we will look at another very basic program to understand its simple usage.\n#include \n\n    int main()\n    {\n        bool my_bool = true;\n\n        std::cout \n\nWe see that we are creating a bool and assigning it a _true _value or _1 _value and printing it.\nLet's compile and link.\ng++ -o 0x04_asm64_boolean_primitive_datatype 0x04_asm64_boolean_primitive_datatype.cpp\n\n\nLet's run.\n./0x04_asm64_boolean_primitive_datatype\n\n\nWe simply see the following.\n1\n\n\nIt successfully echoed 1 to the terminal stdout. Very simple.\nNext week we will debug this very simple example.\n"},"pages/part-13-debugging-boolean-primitive-datatype.html":{"url":"pages/part-13-debugging-boolean-primitive-datatype.html","title":"Part 13 - Debugging Boolean Primitive Datatype","keywords":"","body":"Part 13 - Debugging Boolean Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple boolean primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x04_asm64_boolean_primitive_datatype\n\n\nLet's take advantage of Radare2's auto analysis feature.\naaa\n\n\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.\nood\n\n\nNow that we have a running instance we can seek to the main entry point of the binary.\ns main\n\n\nLet us take an initial examination by doing the following.\nv\n\n\nWe see in 0x55718999bc movz w0, 0x1_or moving _0x1 into w0 which is our bool true. REMEMBER your address will be different due to ASLR.\nLet's set a breakpoint at 0x55718999bc and verify the contents.\n[0x55718999b4]> db 0x55718999bc\n[0x55718999b4]> dc\n\n\nhit breakpoint at: 0x55718999bc\n\n\n[0x55718999bc]> ds\n[0x55718999bc]> dr w0\n0x00000001\n[0x55718999bc]>\n\n\nVery simply we broke right before the value 0x1 was to be placed in w0 and then we stepped and saw that it was in fact 0x1 inside of w0 after the step. This means that our program successfully put a 1 _or _true into the w0 register which matches what our source code created.\nIf we dc again we see it echoed to the stdout as expected.\n[0x55718999bc]> dc\n1\n(96445) Process exited with status=0x0\n\n\n[0x7fac4f903c]>\n\n\nIn our next lesson we will hack the boolean to make it 0.\n"},"pages/part-14-hacking-boolean-primitive-datatype.html":{"url":"pages/part-14-hacking-boolean-primitive-datatype.html","title":"Part 14 - Hacking Boolean Primitive Datatype","keywords":"","body":"Part 14 - Hacking Boolean Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the boolean from the last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x04_asm64_boolean_primitive_datatype\n\n\nLet's auto analyze.\naaa\n\n\nSeek to main.\ns main\n\n\nView disassembly.\nv\n\n\nLet's get back to the terminal view.\nq\n\n\nAll we have to do is write assembly to 0x00000009bc and specify 0x0.\n[0x000009b4]> wa movz w0, 0x0 @ 0x00000009bc\nWritten 4 byte(s) (movz w0, 0x0) = wx 00008052\n\n\n[0x000009b4]>\n\n\nLet's quit and run the new binary from the terminal.\n[0x000009b4]> q\nkali@kali:~/Documents/0x04_asm64_boolean_primitive_datatype$ ./0x04_asm64_boolean_primitive_datatype\n\n\n0\n\n\nAs you can see we successfully and permanently hacked the binary! What was originally true or 1 is now false _or _0.\nIn our next lesson we will work with the integer primitive datatype.\n"},"pages/part-15-float-primitive-datatype.html":{"url":"pages/part-15-float-primitive-datatype.html","title":"Part 15 - Float Primitive Datatype","keywords":"","body":"Part 15 - Float Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the C++ float datatype that stores floating point values.\n#include \n\nint main()\n{\n    float my_float = 10.1;\n\n    std::cout \n\nVery simply we create a float and assign a simple value to it and print it.\nLet's compile and link.\ng++ -o 0x05_float_primitive_datatype 0x05_float_primitive_datatype.cpp\n\n\nLet's run.\n./0x05_float_primitive_datatype\n\n\nWe simply see the following.\n10.1\n\n\nIt successfully echoed 10.1 to the terminal stdout. Very simple.\nNext week we will debug this very simple example.\n"},"pages/part-16-debugging-float-primitive-datatype.html":{"url":"pages/part-16-debugging-float-primitive-datatype.html","title":"Part 16 - Debugging Float Primitive Datatype","keywords":"","body":"Part 16 - Debugging Float Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple float primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x05_asm64_float_primitive_datatype\n\n\nLet's take advantage of Radare2's auto analysis feature.\naaa\n\n\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.\nood\n\n\nNow that we have a running instance we can seek to the main entry point of the binary.\ns main\n\n\nLet us take an initial examination by doing the following.\nv\n\n\nWhen dealing with floating point numbers in ARM64 we have to understand that we want to locate where the fmov instruction occurs where we take a value from our w0 register and move it into the floating point s0 register. Here is where all the magic happens!\nLet us define a break point right below the fmov instruction. REMEMBER with ASLR your addresses will be different than this example.\n[0x557931c9b4]> db 0x557931c9c8\n[0x557931c9b4]> dc\n[0x557931c9b4]> hit breakpoint at: 0x557931c9c8\n[0x557931c9c8]> ds\n[0x557931c9c8]> dr w0\n0x4121999a\n[0x557931c9c8]>\n\n\nOK so we see this strange value which if you look at the code below, the lsl which is logical shift left, is moving the byte order of which we are using the movz and movk instructions which movz will move 0x999a into w0 and then the movk will move 0x4121, lsl 16 into w0 therefore putting 4121 at the higher order byte locations and the 999a at the lower order byte locations.\nmovz w0, 0x999a\nmovk w0, 0x4121, lsl 16\nfmov s0, w0\n\n\nWe move our w0 register into s0 so we HAVE to change these values here before letting it get into s0 otherwise it will be significantly harder to hack in the next lesson.\nLets continue to show our value.\n[0x557931c9c8]> dc\n10.1\n(237691) Process exited with status=0x0\n[0x7fb948407c]>\n\n\nIn our next lesson we will hack this value!\n"},"pages/part-17-hacking-float-primitive-datatype.html":{"url":"pages/part-17-hacking-float-primitive-datatype.html","title":"Part 17 - Hacking Float Primitive Datatype","keywords":"","body":"Part 17 - Hacking Float Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the float from the last lesson.\nFirst update our radare2 source code.\ncd radare2\ngit pull\nsys/user.sh\n\n\nIf you did not follow the instructions earlier you have to build radare2 from source for this to work as they rarely update releases.\nhttps://github.com/radareorg/radare2\nIf you do not have the repo, clone it and follow the instructions above.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x05_asm64_float_primitive_datatype\n\n\nLet's auto analyze.\naaa\n\n\nSeek to main.\ns main\n\n\nView disassembly.\nv\n\n\nLet's get back to the terminal view.\nq\n\n\n\nWe need to hack two instructions here. Let's examine two very specific instructions.\nmovz w0, 0x999a\nmovk w0, 0x4121, lsl 16\n\n\nRemember from last week that ultimately w0 is going to hold 0x4121999a as the lsl moves the bites in reverse byte order.\nCurrently this will produce a float of 10.1 as we have seen in the prior lessons. It is critical that you understand that in floating-point numbers there is a mantissa which in our case is 10 and an exponent which is the 1 to which they are separated by a . which ties them together.\nTherefore to get 10.2 we would need to write assembly and update these instructions.\n[0x000009b4]> wa movz w0, 0x3333 @0x000009bc\n[0x000009b4]> wa movk w0, 0x4123, lsl 16 @0x000009c0\nq\n\n\n\nNow run the binary!\nkali@kali:~/Documents/0x05_float_primitive_datatype$ ./0x05_float_primitive_datatype\n10.2\n\n\nI want you to take a close look at some examples I have put together for you so that you can understand how different values result in different results. Keep in mind these results are in an active debug session so the addresses will be different so your ASLR will have different values.\n[0x555e6c29c4]> dr w0 = 0x4122999a\n0x4121999a ->0x4122999a\n[0x555e6c29c4]> dc\nhit breakpoint at: 0x555e6c29c8\n[0x555e6c29c8]> dc\n10.1625\n(238252) Process exited with status=0x0\n\n[0x556215e9c4]> dr w0 = 0x41235555\n0x4121999a ->0x41235555\n[0x556215e9c4]> dc\nhit breakpoint at: 0x556215e9c8\n[0x556215e9c8]> dc\n10.2083\n(238258) Process exited with status=0x0\n\n[0x558216c9c4]> dr w0 = 0x4123599a\n0x4121999a ->0x4123599a\n[0x558216c9c4]> dc\nhit breakpoint at: 0x558216c9c8\n[0x558216c9c8]> dc\n10.2094\n(238257) Process exited with status=0x0\n\n[0x55868a79c4]> dr w0 = 0x4123999a\n0x4121999a ->0x4123999a\n[0x55868a79c4]> dc\nhit breakpoint at: 0x55868a79c8\n[0x55868a79c8]> dc\n10.225\n(238253) Process exited with status=0x0\n\n[0x55826479c4]> dr w0 = 0x41233333\n0x4121999a ->0x41233333\n[0x55826479c4]> dc\nhit breakpoint at: 0x55826479c8\n[0x55826479c8]> dc\n10.2\n(238259) Process exited with status=0x0\n\n[0x55716ab9c4]> dr w0 = 0x4125999a\n0x4121999a ->0x4125999a\n[0x55716ab9c4]> dc\nhit breakpoint at: 0x55716ab9c8\n[0x55716ab9c8]> dc\n10.35\n(238250) Process exited with status=0x0\n\n[0x55880169c4]> dr w0 = 0x412f999f\n0x4121999a ->0x412f999f\n[0x55880169c4]> dc\nhit breakpoint at: 0x55880169c8\n[0x55880169c8]> dc\n10.975\n(238245) Process exited with status=0x0\n\n[0x559130d9c4]> dr w0 = 0x412ff99e\n0x4121999a ->0x412ff99e\n[0x559130d9c4]> dc\nhit breakpoint at: 0x559130d9c8\n[0x559130d9c8]> dc\n10.9984\n(238246) Process exited with status=0x0\n\n[0x557b1b39c4]> dr w0 = 0x412fff9e\n0x4121999a ->0x412fff9e\n[0x557b1b39c4]> dc\nhit breakpoint at: 0x557b1b39c8\n[0x557b1b39c8]> dc\n10.9999\n(238247) Process exited with status=0x0\n\n[0x55931439c4]> dr w0 = 0x412ffffe\n0x4121999a ->0x412ffffe\n[0x55931439c4]> dc\nhit breakpoint at: 0x55931439c8\n[0x55931439c8]> dc\n11\n(238248) Process exited with status=0x0\n\n\nYou can start to see patterns here. TAKE THE TIME AND ACTUALLY TRY THESE OUT so you have a better understand of how these values ultimately go into the s0 register!\nNext lesson we will discuss doubles.\n"},"pages/part-18-double-primitive-datatype.html":{"url":"pages/part-18-double-primitive-datatype.html","title":"Part 18 - Double Primitive Datatype","keywords":"","body":"Part 18 - Double Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the C++ double datatype that stores double floating point values.\n#include \n\nint main()\n{\n    double my_double = 10.1;\n\n    std::cout \n\nVery simply we create a float and assign a simple value to it and print it.\nLet's compile and link.\ng++ -o 0x06_double_primitive_datatype 0x05_double_primitive_datatype.cpp\n\n\nLet's run.\n./0x06_double_primitive_datatype\n\n\nWe simply see the following.\n10.1\n\n\nIt successfully echoed 10.1 to the terminal stdout. Very simple.\nNext week we will debug this very simple example.\n"}}}