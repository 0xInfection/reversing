{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["&","32","64","architectures.","arm","bit","comprehens","cover","engin","introduct","revers","tutori","x64,","x86,"],"pages/part-1-goals.html":["1:","actual","addit","aforement","analysi","analysis,","analysis.","analysis.upon","antiviru","assembl","base","basic","begin","below","binari","break","brief","caus","chang","click","code","complet","complex","comput","concentr","concept","condit","contain","content","contrast","contrast,","corpor","cover.","creat","critic","deeper","detect","develop","discuss","doing.und","down","each","edit","educ","effect","engin","entri","examin","file","find","full","give","goal","goalsfor","graduat","harm","hidden","home","host","https://github.com/mytechnotalent/revers","identif","identifi","import","indic","infect","inform","intrusion.thi","it.upon","key","kind","kingdom","lan","language.th","learn","lesson","level","machine.","make","malici","malwar","media.in","migrat","modern","more","necessari","need","network","next","note","only!in","part","pleas","purpos","quit","refer","registry.","remov","requir","respect","respond","responsible!","revers","root","short","signatur","signature,","signatures,","signatures.to","speak","step","such","suspect","system","tabl","target","techniqu","throughout","tool","topic","traffic.","tutori","tutorialessenti","ultim","understand","up","us","util","wan","whether","wireshark"],"pages/part-2-techniques.html":["2:","abc","actual","addit","against","analysi","analysis.","analysis.stat","analyz","assembl","assembly,","assembly.","basic","be","below","better","binari","binaries.","bio","biochem","brief","bullet","c++,","c,","call","capston","ceo","chemic","click","code","compani","complet","content","control","convert","cover.","creat","debug","debugg","debugger.","decompil","design","disassembl","disassembler,","disassembler/debugg","discuss","door","dynam","each","employ","end","engin","etc","ethic","examin","execut","first","focu","give","go","hack","hopper","https://github.com/mytechnotalent/revers","ida","instead.dynam","instruct","lab","languag","lesson","look","make","malwar","malware.","mani","manipulate.revers","market","more","more.a","much","multi","next","ollydbg","on","order","part","platform,","pleas","popular","power","processor","project","proof","provid","real","revers","safer.in","scenario","secretli","sensit","series,","showcas","softwar","solut","static","such","tabl","task","techniqu","techniquesfor","test","threats.","today","tool","topic","tri","tutori","tutorialther","two","type","ultim","us","util","variou","veri","well","without","work","world","written"],"pages/part-3-types-of-malware.html":["3:","access","account","addit","allow","alter","amount","assembl","attack","author","back","backdoor","base","basic","begin","below","below.a","botnet","brief","briefli","build","categori","click","cloaking/hid","code","command","complet","comput","computer.a","computer.scarewar","computers.thi","content","control","copi","core","cover.","danger","deep","direct","directli","discuss","dive","download","each","emb","emerg","end","engin","execut","exist","exists.","extrem","fall","fals","final","find","first","form","form.ther","frequent","gain","gather","gener","give","go","goe","grabber","greater","hacker","hard","hide","host","https://github.com/mytechnotalent/revers","incom","increas","inform","initially.","instal","instruct","ip","it'","itself","journey","keylogg","kind","know","language.","later","launch","lesson","level.in","littl","local","locate.","long","machin","make","malici","malwar","malwarefor","manipul","month","more","need","never","next","non","noth","now","obtain","on","onc","onlin","option","order","over","part","password","pay","penetr","pleas","process","program","protect","purchas","purpos","real","receiv","regard","remot","remov","resid","respect","revers","road","rootkit","same","scan","sell","send","sensitive.ther","server","servic","sever","socket","softwar","software.","sometim","spam","standard","stay","such","system","system.on","system.w","tabl","take","target","techniqu","threat","time.a","topic","touch","tradit","trick","truli","tutorialmalwar","type","understand","unlimit","up.","upon","us","user","users.th","usual","variou","veri","viru","way","whatsoev","work","worm","x86"],"pages/part-4-x86-assembly-intro.html":["32","4:","64","8000","absolut","addit","aforement","ages!","analyz","answer","applications/malwar","architectur","assembl","assembly.x86","at&t","back","backward","basic","basics.th","befor","bell","below","between","binari","bit","boy","brief","c","capabl","cell","chang","children","choic","click","code","coffe","come","commerci","company,","compat","complet","complex","comput","confus","conjunct","content","context","contrast,","control","cover","cover.","cpu","cup","debug","demonstr","destin","detail","develop","devic","differ","directli","disassembl","discuss","do","document","domin","door","each","elf","embark","engin","environment,","environments.for","essenti","examin","execute.assembl","famili","first","focu","forever!ther","format","format.","free!w","freeli","gentlemen,","girls,","give","go","good","grab","hardwar","help","https://github.com/mytechnotalent/revers","import","infect","instruct","intel","intro","introfor","it!","journey","journey,","labs.","languag","larg","later","learn","lesson","life","linux","main","malwar","mani","materi","measure.","microprocessor","microprocessors.","microsoft,","million","mnemon","more","ms","need","next","normal","number","object","obtained.","on","open","oper","order","origin","os","own","part","patch","pe","perfectli","person","phone,","platform","pleas","point","possible.","processors.","produc","profession","program","provid","purposes,","quest.","question","regret","remember,","repres","respect","run","same","secur","see","seri","server.linux","servic","software,","sourc","source.","such","syntax","syntax,","syntax.","system","system.","systems.","tabl","throughout","time.w","topic","tutorial.befor","tutorial.th","tutorialladi","two","ubuntu","ultim","understand","unix","updates,","us","util","varieti","variou","vast","versions.","want","whether","window","work","world","world.in","written","x86"],"pages/part-5-binary-number-system.html":["(1","(5","+","0","1","1)","1.in","10)","10,","10.binari","1111.","15","2.","5","5:","9","=","above,","absent","addit","architectur","base","below","binari","binary,","bit","brief","click","column","complet","comput","computer.","confused,","content","core","cover.","decim","decimal,","deeper","defin","definit","design","digit","digits,","discuss","dive","each","electr","engin","excit","fashion","fear!","futur","get","give","go","happen","here!","here?hav","hexadecim","https://github.com/mytechnotalent/revers","illustrate:","import","instead","lesson","mean","mention","more","necessari","next","now","number","off.","part","pleas","plu","puzzl","refer","relat","repres","right","same","similar","simplest","simplifi","such.","such.in","system","system.","systemfor","tabl","technologies.","therefor","through","time","topic","turn","tutorialbinari","tutorials.","two","understand","us","valu","within","work","x"],"pages/part-6-hexadecimal-number-system.html":["'h'","(4","*","+","0","0)","0,","00","0010","01","1","1)","1)(2","1,","10","10,","10.","10.(2","1010","102","12","13","13c","15","16","16.","192","1921","1st","2","2,","20","24","240","2405","245","256","256f","2a","3","3,","32","320","3210","4","4,","40","4096","40rememb","42","42.grab","42in","5","5,","515","6","6,","61,440","61,44013","61,901addit","6:","7","7,","8","8,","80","9","=","=>","^","a,","abov","add","addit","anoth","answer","ask","assembl","assembly.let","b","b,","base","base.","becom","below","binari","binary,","bit","bit.","bits,","bits.","brief","byte","byte.","c","c,","call","case,","click","coffee,","column","combin","come","comment","compar","complet","content","conversion:d","convert","cover.","creat","critic","d,","deal","dealt","decim","decimal,","decimal.","decimal:2","decimal:to","decimalin","differ","discuss","e","each","ear","easier","emphas","engin","equal","equivalent.let","everyth","examin","exampl","except","excit","express","f","f1cd","f5","final","focu","follows.","follows:0","follows:5","formula","forward","fun","fundament","further","further.","give","go","guy","happi","help","help!in","here","hexadecim","hexadecimal,","hexadecimal.","hexadecimal:10","hexadecimalkeep","hexadecimallet","hexadecimalthi","https://github.com/mytechnotalent/revers","import","it'","keep","learn","lesson","let","let'","littl","long","look","low","mani","masters,","memory.","mind","more","much","need","next","next.","nibble.","now","number","number:","numbers.thi","ok","ok!","order","out","over","part","picture.it","pleas","point","possibl","power","probabl","proce","program","put","questions,","rang","re","reason","repres","represent","revers","right.","same","saying:10","see","sever","show","similar","simpl","smoke","spend","start","stuff!if","subdivid","subtraction:y","such:","such:w","switches,","symbols.let","system","system,","system.hexadecim","systemfor","systems!w","tabl","table:","tackl","take","therefor","therefore,","this!","time","togeth","top","topic","transistor","tutorialnow","understand","us","valu","want","way","way.","whole","with.","work","x","x86","yourself"],"pages/part-7-transistors-and-memory.html":["0","1","1,","2","3","3.","3.when","7:","abil","absenc","act","add","addit","allow","answer","appear","appli","ask","ask.","assembl","back","base","basic","becom","below","between","binari","bit","box,","brief","byte","calculators,","capacitor","cell","cell.","chang","choke","click","complet","comput","conjunct","consol","content","convers","core","cover.","crystal","current","day.i","debugg","deep","deeper","digit","diod","discuss","dive","do?","down","each","easili","effect","electr","emphas","engin","exampl","execut","field","first","first.","flow","focu","format","fulli","get.electron","give","go","go!when","grasp","great.","greatest","gui","here","hexadecim","hold","https://github.com/mytechnotalent/revers","ida","import","indic","input","is,","jump","keep","last","lesson","lesson,","lesson.","let","librari","linux","machin","made","malware.","manual","mean","memori","memoryfor","microscop","minimum","modern","much","never","next","now","number","off.in","on","oper","order","others.th","ourselv","out","output","part","patienc","persever","pin","pin,","pin.","pin.whi","pins.","pleas","portabl","presenc","pro","profession","program","properti","put","question","re","read","real","refer","remain","remov","respect","revers","right","see","select","server","set","short","silicon","similar","simple,","simpli","simply,","small","soap","state","step","stop","subtract","switch","switches.","system,","system.","tabl","taken","them.in","therefor","threat","togeth","took","topic","transistor","transistors.let'","tutorialin","understand","until","us","util","veri","voltag","way.a","week","win","window","without","words.","world","world,","zoom"],"pages/part-8-bytes-words-double-words-etc.html":["(32","(64","(hexadecimal)","(in","0","0.","0x","0xf7fac3dc","0xffffd040","0xffffd040,","255.everi","256","256.","2^8","32","4","40","6:","8","addit","address","address.","again,","alway","applic","architecture.","assembl","basic","begin","below","binari","bit","bit)","bit).a","bits.","break","breakpoint","brief","byte","bytes,","bytes.","call","click","comment","complet","comput","computer.below","content","cours","cover.","cpu","cpu.","critic","d040,","debugger:don't","design","digit","disassembl","discourag","discuss","discussing.","does.","don't","doubl","down","dozen","each","eight","engin","esp","etc...","etc...for","examin","exampl","example,","executing,","feel","fetch","ffffd040","finally,","finish","first","four","free","frustrat","function.","futur","gdb","give","go","hello","here.","hexadecim","hexadecimal),","hexadecimal.","hexadecimal.it","https://github.com/mytechnotalent/revers","import","insid","instruct","know","learn","length","length.","lesson","lessons.","let","let'","like:","linux","load","locat","long","long.","look","look.","machin","main","make","measur","memori","memory.","more","new","next","nibble.","noth","now","number","on","otherwis","part","peek","pleas","point","pointer.thos","power","program","quad","questions.in","read","regist","register.","review","right","row","see","sens","set","simpl","simpli","size","sneak","soon","start","step","store","system,","tabl","take","through","time","topic","tutori","tutorialmemori","two","understand","uniqu","us","util","valu","value.a","want","word","word.","words,","world","worri","x86","yet."],"pages/part-9-x86-basic-architecture.html":["(4","32","4","9:","addit","address","alter","applic","architectur","architecturefor","are:1)control","basic","begin","below","below.th","binari","bit","brief","bu","byte","call","click","clock","complet","comput","connect","consist","contain","content","control","cover.","cpu","cpu,","cpu.","data","deal","decod","deeper","detail","devic","direct","discuss","dive","do.","do.upon","doubl","each","eip","eip,","emit","engin","entir","event","execut","executed.w","fetch","first","flow","futur","gener","give","goe","https://github.com/mytechnotalent/revers","i/o","ia","immedi","indic","input/output","instruct","instruction,","intend","intern","intervals.in","length)","lesson","load","locat","look","machin","made","make","malwar","memori","memory.2)execut","next","number","occurs.3)regist","occurs.w","operates.th","oscil","part","pattern","pleas","point","pointer","popular","precis","procedur","process","program","puls","purpos","read","regist","register,","registers.","retriev","see","sequence.","simpli","specif","squar","storage.4)flag","store","system","tabl","techniqu","temporari","them.th","therefor","thing","ti","topic","tutori","tutorial,","tutoriala","uniqu","unit","up","upon","us","wave","way","within","word","x86"],"pages/part-10-general-purpose-registers.html":["(in","(or","1","10:","16","2","32","4","64","8","8080","abov","accumulator,","acquir","addit","addition","addition,","address","ah","ah,","al","al,","architectur","architecture.eax:","arithmet","array","ax","backward","base","below","below:eax","bh","bh,","bit","bits.","bits.esi,","bits.esi:","bl","bl,","bottom","bp","bp,","brief","broken","bx","byte","calculations.","ch","chip","chipset.gener","cl","click","code","compat","complet","comput","confus","content","continu","counter","cover.","creat","current","cx","data","data.edi:","destin","destination)","dh","di","di,","discuss","dl","down","dramat","ds","dx","each","each.in","eax","eax,","ebp","ebx","ebx,","ecx","ecx,","edi","edi,","edx","engin","equival","es","esi,","esp","evolv","extend","focu","follows:esi","frame.","function","further","gener","give","high","hold","https://github.com/mytechnotalent/revers","i/o","ia","illustr","impli","index","known","length","length.","lesson","let","local","loop","low","lower","main","mean","mind","name","new","next","number","offset","oper","operations.","operations.ebp:","operations.edx:","over","part","pleas","point","pointer","pointer.","previou","process","processor.","processors.","program.ecx:","programs.","purpos","purposes.each","read","refer","referenc","regist","register.","registers.","registersfor","repeated.","repres","result","return","review","same","segment","segment).","segment,","segment.","segment.in","si","si,","so.","someon","sourc","sp","sp.thi","specif","ss","stack","still","store","string","studi","subdivid","tabl","temporarili","time","today'","top","topic","true","tutori","tutorialth","type","us","util","valu","values.ebx:","variables.esp:","variables.keep","version","well.","write","x86"],"pages/part-11-segment-registers.html":["(.data","(.text","(eip)","(ss)","(x86","11:","16","32","4,294,967,296","4gb","access","access.ds:","access.es:","addit","address","appropri","architectur","area","arrang","assign","base","below","billion","bit","bit),","brief","cases.","chang","click","close","code","complet","computer,","consid","contain","content","continu","control","cover.","cs","data","default","defin","differ","directli","discuss","ds,","dure","each","element","engin","ensur","es,","except","explicitli","express","extra","flat","focu","follows:cs:","four","fs","function","give","gs","help","https://github.com/mytechnotalent/revers","ia","implicitli","individu","instruct","keep","larger","lesson","limit","load","locat","locations.","memori","memory.","method","mind","mode","model","more","new","next","offset","oper","operations.ss:","os","overlap.","part","pass","physic","pleas","point","pointer","pointer.fs:","potenti","procedur","processor","program","program.seg","protect","purposes.ther","read","receiv","refer","referenc","region","region.","regist","register.","register.each","register.gs:","registersfor","relev","retriev","run","section","section)","segment","segment.","segments.","separ","six","space","space.th","specif","stack","start","store","string","system","system.","tabl","task","this.in","those","three","topic","tutori","tutorialth","us","valu","value.th","variabl","within","work"],"pages/part-12-instruction-pointer-register.html":["0x0804843b","0x680cec83.let","12:","32","=>","addit","address","address.th","advantage!tada!","again","ahead","alter","anoth","applic","architectur","area","assembl","back","basic","befor","below","break","breakpoint","brief","c","call","click","code","code!w","code.","compil","complet","condit","consol","content","continu","control","control.don’t","cover.","deal","debugger.","detail","disabl","disassembl","discuss","dive","do","down","each","eip","eip,","engin","engineering.","examin","exampl","execut","execute.","executed.w","exit.","fact","flow","flow,","follow","forward","function","function.","functionality.","gdb","give","go","hack","hard","hello","here","hijack","https://github.com/mytechnotalent/revers","ia","ia32","idea","import","in.","instruct","instruction.","ip","is?","it.","jump","keep","kind","languag","later","learn","lengthi","lesson","let","look","main","main+17","make","malici","mani","memori","mind","more","much","never","next","normal","note","oper","originated.in","over","part","particularli","pay","pleas","point","pointer","potenti","power","print","proactiv","program","program!so","program.","program.let","purpos","question","ran","raw","regist","registerfor","registers.","revers","run","see","see:w","series.","set","show","simpl","simpli","sometim","start","stay","step","such","tabl","take","today,","topic","trace","track","tutori","tutorialth","under","understand","unreach","unreachablefunct","unreachablefunction.now","us","want","watch","whatev","work","world","world!","world!`","worri","write","‘hello"],"pages/part-13-control-registers.html":["(not","13:","32","access","addit","applic","architectur","below","bit","brief","can’t","capabl","chang","characterist","chip","click","complet","conjunct","content","continu","control","cover.","cpu","cr.","current","data","determin","directli","directori","discuss","each","enabl","engin","entri","examin","execut","fault","feather","featur","five","flag","flags.","follows:cr0:","gener","give","gp","host","https://github.com/mytechnotalent/revers","ia","implemented)cr2:","indic","information.cr3:","information.cr4:","lesson","level","low","made","memori","mode","modifi","move","next","normal","on","onc","oper","page","part","pleas","processor","processor.cr1:","processor.th","program","programm","purpos","queri","regist","register,","registers.","registersfor","requir","run","running.in","state","statu","system","tabl","task.","task.if","topic","tutori","tutorialtheir","us","usual","valu","value,","variou"],"pages/part-14-flags.html":["1","14:","3","32","8086","access","addit","address","adjust","align","answer","applic","application.tf:","arithmet","assembl","automat","away","becom","behavior","below","big","binari","bit","bit.","borrow","brief","bu","byte","c","calculation.th","call","carri","case","chain","check","checked,","clear","cleared,","clearer","click","code","complet","complex","complic","concept","condit","conjunct","contain","content","control","control,","correct","corrupt","cover.","cpuid","cr0","critic","current","data","deal","debug","debugging.th","decim","decrement","defin","denied.th","determin","df","direct","discuss","each","eflag","enabl","engin","engineering.","enter","equal","essenti","even","except","execut","execution.w","exist.","extern","extrem","fact","field","final","flag","flagac:","flagaf:","flagid:","flagif:","flagiopl:","flagnt:","flagof:","flagpf:","flagrf:","flags,","flags.statu","flagsf:","flagsfor","flagth","flagvif:","flagvip:","flagvm:","flagzf:","flow","follows:cf:","function","gener","give","group","handl","help","here","https://github.com/mytechnotalent/revers","i/o","id","identif","import","increment","indic","inform","information.ther","input","instead","instruct","instruction.","instruction.in","integ","interrupt","involv","kind","languag","language.what","less","lesson","level","link","map","math","mechan","memori","mode","mode.th","modifi","much","n","neg","negative.th","nest","never","next","not.flag","number","occur","occurs,","odd.","on","oper","operation.","operation.th","os","output","overflow","pariti","part","pend","pending.th","perform","phase","pleas","posit","previous","privileg","processor","processor.","program","protect","real","receiv","references.th","regist","register.","register.control","remain","replic","repres","request","requir","required,","respect","respond","result","resum","revers","run","set","set,","sign","signal","signific","singl","small","sources.th","space","space.","specif","stack.","statu","status,","step","string","string.","string.system","success","support","system","tabl","take","task","tasks.th","three","time,","topic","total","train","trap","tutori","tutorialth","unsign","us","util","valu","verifi","virtual","vm","wait","way","whether","zero","zero.th"],"pages/part-15-stack.html":["(esp),","0x00001000","0x00001000,","0xffffd030","0xffffd050.","12","15:","5","a,","abov","above.","above.y","absolut","abstract","access","activ","actual","ad","add","addit","addm","addme(int","address","address,","addresses.th","advantag","alloc","allow","alway","area","argument","around","around.","arrow","asid","assembl","attack","attempt","avail","b)","b),","b)’","b.","becom","befor","below","below,","better","bodi","both","bottom","breakpoint","brief","build","c","call","certain","chang","circumst","clear","click","closely.","code","code.when","comment","compil","complet","complete.","complic","comput","confus","consid","contain","content","contigu","continu","control","copi","corrupt","cours","cover.","cpu","creat","critic","data","deal","declar","deleted.","despit","develop","develop,","development.","diagram","discuss","done","downward","duplic","durat","each","effici","engin","esp","essenti","examin","exampl","example,","excess","execut","exist","exists,","exit","exits,","expect","fast.it","featur","find","finishes.onc","first","fix","forever.","forward.th","four","fp","frame","frame.","frame.in","frame.let’","framework.in","free","freed","freed,","function","function,","function.","functions.","fundament","futur","garbag","get","give","go","greater","grow","happen","happening.ther","head","heap.","help","here.","higher","https://github.com/mytechnotalent/revers","idea","implement","import","in,","includ","increas","insid","instruct","int","it.","keep","languag","larger","largest","last","learn","lesson","let","lifo","like:int","like:w","limit","list","local","local.","locat","logic","look","lost","lot","lower","main","main(void)","main,","main.","malwar","manag","manual","manually.","meantime,","memori","memory.","memory.in","memory.when","mind","mind,","minim","model.","modern","more","move","move,","multipl","need","never","new","next","normal","now","number","offset","on","onc","onto","oper","opposit","optim","organ","os","out","overflow","overflows.","overwhelming.","part","pass","perspective:th","place","pleas","point","pointer","pointer.","pointer.onc","pop","pop.","prevent","print","program","program,","protect","push","put","questions,","random","realiti","recent,","record.","refer","region","regist","registers,","reserv","restor","return","returns,","run","section","see","seri","set","sever","show","shown","shrink","simply,","size.","smaller","smallest","softwar","sp","space","special","specifi","spin","stack","stack,","stack.","stack.let","stack.th","stack.when","stack.you","stackfor","stage","start","store","structur","subtract","such","sum,","system.","tabl","take","task.","temporari","therefor","this,","this:veri","this:w","this:you","those","throughout","time","top","topic","tutori","tutorialfunct","tutorials.","two","under","understand","unreachablefunct","until","up","upward","upward.","us","usual","valid","valid.th","valu","value.","values.w","variabl","variables.","variables.i","variables.th","vary.","veri","want","way","well","whenev","work","you."],"pages/part-16-heap.html":["16:","access","addit","alloc","analysi","anywher","around","array","asid","assembl","automat","avail","basic","below","block","both","box","brief","built","c","calloc(),","chang","choos","click","complet","comprehens","comput","computer'","computer.","concept","content","cover.","cpu.","creat","current","de","demonstr","disassembl","dive","don't","don’t","downward","durat","dynam","each","effect","engin","engineering.i","environ","essenti","float","focus","forward","free","free()","function","function,","functions.","futur","give","global","globally,","good","grow","heap","heap,","heap.","heapfor","https://github.com/mytechnotalent/revers","import","instal","is,","it.unlik","keep","known","larg","larger","leak.","learn","lesson","limit","linux","look","malloc()","malloc(),","malwar","manag","manually.th","memori","memory.to","mind,","more.if","need","needed,","next","onc","part","physic","pleas","pointer","process","program","program.","progress","purpose.","read","realloc()","region","respons","restrict","revers","scope.if","section","see","seri","set","shrink","size","size.","skill","slightli","slower","softwar","someth","stack","stack,","step","step,","still","struct","such","tabl","take","thing","this.unlik","tightli","to,","tool.","topic","tutori","tutorialour","tutorials.th","understand","upward.","us","variabl","veri","very,","virtual","week","won't","written","you,"],"pages/part-17-how-to-install-linux.html":[".dmg",".iso",".iso,","108355","16.00","17","32","5.0.24","8.00",">_","abov","above,","account.","addit","addition,","amount","applic","apt","area","assembl","avail","available.","bar","begin","below","better","big","bit","blue","both","bottom","box","brief","button","button.ent","button.it","button.th","c","call","cancel","cd","check","chose","circle.in","click","close","code","coding!","cog","command","commands.","compil","complet","comput","content","continu","continue.at","continue.th","copi","corner","cover.","creat","create.it","create.th","create.then","current","date.","desktop","devic","dial","directori","disk","doubl","download","each","earlier","editor","engin","enter","enter.","enter.in","enter.next","environ","eras","examination,","examination.","execut","exist","field","file","file.","final","finished,","first","first,","folder","follow","forward","free","function","futur","gb","gcc","give","go","green","guest","household,","https://github.com/mytechnotalent/revers","icon","image…","import","inform","insert","instal","installed.http://www.ubuntu.com/download/desktop","it.aft","keep","keyboard","keyboard.","launcher","layout","learn","left","lesson","link","linux","linux!","linuxfor","locat","lock","login,","long","look","mac","mac,","mac.https://www.virtualbox.org/wiki/download","machin","mkdir","move","multilib","name","necessari","need","new","next","next.at","next.pleas","next.then","noroot","now.","now.th","onc","open","open.th","oper","order","out","out.congratulations!","overwhelm","packag","part","password","place","pleas","point","point,","power","press","process","program","progress","ram","re","resources.","restart","right","run","same","screen","screen.","screen:click","see","select","shown","simpli","slider","slider,","softwar","sourc","start","start.th","step","store","sudo","suggest","system.","tabl","take","termin","text","time","timezon","top","topic","tutori","tutorialif","tutorials.i","type","ubuntu","ubuntu.","ubuntu.th","up","up,","updat","upgrad","us","username.","veri","verif","version","vim","virtual","virtualbox","vm.thi","week","whatev","win.ex","window","window.in","window.y","with.","within","work","x","yellow","–"],"pages/part-18-vim-text-editor.html":["18","4","[copi","[delet","[move","[put","[quit","[save","[undo","addit","allow","arrow","assembl","awar","back","begin","begin,","below","better","between","brief","chang","changes]y","charact","character]0","character]l","clean.ther","click","code","code.","command","commands:j","common","complet","configured,","consist","content","copi","cover.","creat","current","cursor","cursor]u","debug","done","down","each","editor","editor.","editor]:q!","editorfor","end","engin","enter.congratulations!","essenti","exit","expandtab","file","file!","file]:w","file]:wq","first","format","forth","forward","functionality.","give","go","help","https://github.com/mytechnotalent/revers","import","indent","insert","instal","instead","it’","keep","key","key.","language.","last","learn","left","lesson","let","letter","line","line,","line]$","line]b","line]h","line]k","line]p","line]yi","linux,","look","mean","mind,","mode","mode.now","move","need","next","now","number","of.","on","on]d","open","order","part","per","perform.th","pleas","posit","preced","press","properli","rememb","right","rule","save","see","set","sever","shiftwidth","show","simpli","smartindent,","space","start","state","statement","tab","tabl","tabstop,","talk","termin","terminal.to","text","thing","time","topic","tutorialnow","type","type:onc","type:thi","typing,","typing.","up","us","version","vi","vim","vim.i","want","way","week","word]dd","work","‘:wq’","‘esc’","‘i’","‘i’."],"pages/part-19-why-learn-assembly.html":["18","19","32","64","abov","addit","affect","allow","although","analyst","anyth","application.th","archaic","ask","assembl","assembly.assembl","assemblyfor","attack","attack.th","author","basic","below","binari","binary.","bit","break","brief","brought","can’t","career","click","code","compil","complet","content","continu","control","convers","cover.","craft","crap?so","cyber","daily.when","damn","danger","deal","debug","debugg","demand","design","destruct","dinosaur","down","down,","each","eip","else,","encourag","engin","entir","everyth","exactli","examin","face","flow.most","focu","forward","game","gave","gdb,","give","go","goe","grab","great","greatest","grow","hacker","handling.","hardwar","hardware.","hell","high","higher","hot","https://github.com/mytechnotalent/revers","human","immedi","instruct","instruction,","java","job","knee","languag","language.when","language?","learn","lesson","let","level","login","look","low","machin","malwar","malware,","mani","manipul","middl","more","multitud","need","network","network.","new","next","noth","numer","offer","on","onc","open","order","os","over","part","path","peopl","people,","pid","pleas","pointer","possibl","prior","process","process.","profession","program","program.","properli","question","read","read,","readable.","revers","run","said,","secur","see","seri","series.i","significantli","singl","societi","someon","sourc","state","stated,","system","tabl","talk","termin","thing","this,","those","threat","threat.","time","time.understand","tool","topic","town.most","tri","true,","tutori","tutorials,","tutorialwhi","ultim","understand","us","useless","valu","wast","week","world,","write","written","written,","wrong","x86"],"pages/part-20-instruction-code-handling.html":["(8","0","0.","00","00.","00if","01","0x0","0x1in","1","12","15","20","3","32","4","80483de","=","abov","addit","address","addresses.","alreadi","appear","area","assembl","b8","basic","be:b8","below","between","bit","brief","byte","byte).","c","call","center","click","code","code.","command.","compil","complet","concept.each","concept.th","confus","contain","content","correspond","cover.","cpu","creat","data","defin","detail","differ","dive","do","don’t","down","each","eax","eax,","element","endian","endian?","engin","examin","exit","far","final","find","first","forward","function","function.","give","guid","handl","handlingfor","head","help","here","https://github.com/mytechnotalent/revers","ia","includ","inform","instruct","integ","intel","it.her","keep","languag","last","left","left.i","length","lesson","let","list","littl","look","lower","main","make","mean","memori","memory,","memory.","memory.keep","mind","mind,","more","mov","move","need","new","next","next.","notat","objdump","ok.","on","op","opcod","order","os.let","paramet","part","perform","performed.let","place","platform","pleas","pointer","pretend","process","processor","program","program.","program.let","read","regist","rememb","repres","representation.i","result","return","revers","review","right","right.","run","scenario","see","seri","set","simpl","simple,","simpli","snippet","special","specif","spoke","stack","stack,","stack.","start","started.al","store","stored.a","straight","sure","syntax","syntax.to","tabl","task","task.","test.c","therefor","tool","topic","track","tutorial.on","tutoriala","type","understand","uniqu","up","us","valu","veri","void","want","was:mov","week","wide","within","–"],"pages/part-21-how-to-compile-a-program.html":["%ebp","%esp,","./","./exit","0","0.","1,","2","21","3","32",":","[thi","abov","above.w","actual","addit","again","amount","area","assembl","assembly,","at&t","begin","below","below:in","below:let","biggest","binari","binary.","bit","breakpoint","brief","c","c,","call","capit","case","click","code","code!","code.","command","compar","compil","complet","content","convert","cover","cover.","creat","debugg","debugger.","debugger.th","deeper","destin","differ","disassembl","dive","each","ebp","ebp.]intel","engin","equival","esp","esp,","esp.]you","essenti","exactli","examin","examinations,","except","execut","executable.","exit","exit.","exit.o","far","fashion.","file","file.fin","file.if","file.to","final","first","focu","follow","forward","futur","ga","gdb","gener","give","gnu","go","good","happens.","https://github.com/mytechnotalent/revers","human","increas","instruct","intel","l,","languag","language.","last","later","lesson","let","let’","linker","linker:to","linux","list","look","m32","main","mean","mention","more","mov","move","movl","much","name","natur","need","next","noth","numer","o","o0","objdump,","object","optim","os.i","output","part","pleas","press","program","program.","programfor","pure","readabl","return.","reversed.at&t","review","run","s","same","saw","see","seri","set","set.","simpli","singl","so,","sourc","start","state","step","substitut","switch","switch.","syntax","syntax,","syntax:thi","tabl","take","tell","terminal:let’","thing","three","thu","time","topic","turn","tutori","tutorial.if","tutoriallet’","tutorials.throughout","type","type:thi","type:to","up.thi","us","util","valu","varianc","want","week"],"pages/part-22-asm-program-1-moving-immediate-data.html":["#","$0,","$0x80.","$0x80.line","$1,","%eax","%ebx","/usr/include/asm/unistd_32.hbelow","0","0,","0x80","0x80,","0x80.at","1","1,024","20","21","21,","22","255","256","3","3.","32","4","64","7,","[comment]a","[move","[operands]","_start","abil","abov","access","activ","actual","addit","addition,","address","advantag","allow","amount","analysi","answer","anyth","appreci","approach:1)program2)debug3)hackeach","apt","architectur","area","asm","assembl","assembler:to","at&t","attack","back","background","basic","be","befor","begin","begins.crit","below","between","bit","bottom","brief","buffer","byte","call","can’t","carri","chang","click","code","code,","code.start","come","command","command.our","comment","comments.","commun","compil","compiler.keep","complet","compon","compris","constant","constantli","contain","content","continu","control","convert","cornerston","correct","cover","cover.","creat","critic","danger","data","data]","data]for","debug","debug!","debugg","debugger.i","decim","declar","deeper.in","demonstr","develop","diagram","diagram:when","directli","discuss","dispatch","distinct","dive","divid","each","easi","eax","ebx","elf32","elf_i386","end","engin","ensur","enter","entir","entri","entries.","etc.2)bss","etc.keep","even","everyon","everyth","exactli","examin","execut","execution.keep","exist","exit","f","fault.","few","file","final","first","flow","flow.tak","focu","follow","following:to","follows:[label]","forth","forward","forward.","fulli","gate","gateway","gdb","give","global","gnu","go","gui","hack","heap","heck!","here,","high","hood.i","https://github.com/mytechnotalent/revers","ida","ignor","illustr","immedi","implement","includ","inform","initi","instal","instruct","instruction,","instruction’","int","intel","intern","interrupt","interrupt.","iret","keep","kernel","key","keystrokes,","know","languag","language.w","languages.","learn","lesson","let’","level","like.in","liking.","line","linux","linux,","littl","load","long","look","lookup","m","made","malwar","mani","manipul","manipulation.next","maximum","mean","memori","memory.","memory.let","middl","mind","mind,","mnemon","mode","modern","more","move","moving_immediate_data","moving_immediate_data.","moving_immediate_data.asmld","moving_immediate_data.o","moving_immediate_data.oto","moving_immediate_data.sld","movl","much","name","names,","nasm","nativ","natur","necessari","necessarili","need","netwid","new","next","none","number","o","occupi","offset","on","open","oper","operand","order","os","out","output!","paramet","part","patch","patient","per","perman","place","pleas","point","pop","portion","possible.","prior","pro","program","prompt","proper","properli","protect","purpos","question","regist","remov","repres","reserv","respect","return","routines.when","run","runtime.","sandbox","second","section","section:","sections:1)data","see","segment","semicolon","sequenti","seri","servi","servic","set","show","simple,","sizes,","snapshot","softwar","sort","space","space,","space.","space.th","specifi","stack","stack,","stack.","start","statement","static","step","structur","successfulli","such","sudo","symbol","syntax","syntax,","sys_exit","system","systems,","systems.th","tabl","table.at","take","taken","tell","termin","them.","them.for","there.","thing","third","this?","those","though","threat.w","three","through","time","tool","top","topic","track","tutori","tutoriali","tutorials.everi","tutorials.th","two","type","type:./moving_immediate_datai","type:./moving_immediate_dataok","type:a","type:nasm","typing:cat","under","understand","uniniti","up","upgrades.","us","user","util","valu","values,","variables.3)text","vector","veri","version","very,","vim","want","way","week","well","well.","whatev","whole","work","work,","written","wrong.","–","–32"],"pages/part-23-asm-debugging-1-moving-immediate-data.html":["/x","0x50","0x50.","0x50.we","0x64","0x8049090","0x90","1","100","2","23","[move","_start+0","_start+5","_start.w","abov","above.","addit","address","advanc","again","asm","assembl","at&t","b","back","befor","begin","below","between","binari","both.","breakpoint","brief","buffer","byte","case","clearli","click","code","comfort","command","comments.i","complet","comput","content","cover.","cpu","creat","data,","data]","data]for","deal","debug","decim","decimal.aft","deliber","demonstr","design","disas,","disas.w","disassembl","disassembly,","dive","do","each","eax","eax.","engin","examin","exampl","few","first","flavor","for.w","forth","forward","gdb","gdb.to","give","go","good","hack!","here","hex","hex.consequ","hit.","https://github.com/mytechnotalent/revers","immedi","inform","insid","instruct","instruction.","intel","it,","keep","label","last","leav","lesson","load","locat","look","mani","mean","mind","move","moving_immediate_datlet’","nativ","next","non","nop","now","on","opcod","oper","painfulli","part","perspect","pleas","practic","print","process.","program","programs.th","proper","properli","purpos","q","questions,","r","r.to","refer","regist","register.w","registers.","review","run","see","see.when","set","show","si","simpli","slide","sourc","space","start","state","step","stick","syntax","tabl","time","topic","tutori","tutoriallet’","type","type:gdb","us","valu","want","week","x/xb","yield"],"pages/part-24-asm-hacking-1-moving-immediate-data.html":["$eax","0x64","0x66","0x66.bam!","0x90","1","100","102","24","=","[move","_start.w","addit","asm","assembl","b","begin","below","binari","breakpoint","brief","clearli","click","code","complet","computer.","concept","content","cover.","creat","create,","data]","data]for","debug","decimal.","develop","disas.w","disassembly,","dive","each","eax","eax.w","engin","exampl","fact","first","forward","fun!","gdb","gdb.to","give","go!","good","greater","hack","here!","hijack","hit.","https://github.com/mytechnotalent/revers","immedi","learn","lesson","let","load","look","manipul","master","mean","move","moving_immediate_datalet’","next","nop","now","on","onc","opcod","oper","over","part","perspect","pleas","point","portion","power","practic","program","program!","programs.let","proper","properli","purpos","q","r","r.to","run","second","see","set","si","simpl","simpli","someth","start","tabl","topic","trivial","tutoriallet’","type","type:gdb","ultim","valu","veri","want.i","week","whatev"],"pages/part-25-asm-program-2-moving-data-between-registers.html":["16","2","22","25","32","[move","access","addit","advis","alway","anoth","asm","assembl","ax","below","between","bit","brief","can’t","click","complet","content","cover.","data","data.","debug","decim","demonstr","dive","dx","each","eax","eax.","eax.keep","edx","engin","fastest","forward","give","go","https://github.com/mytechnotalent/revers","immedi","initi","keep","know","lesson","look","mind","move","much","next","on","other.","part","pleas","program","program!","regist","registers.","registers]","registers]for","respectively.","second","see","similar","simpl","speed.specif","tabl","topic","tutorialin","ultim","valu","versa.i","vice","way","week"],"pages/part-26-asm-debugging-2-moving-data-between-registers.html":["0x16","2","22","26","[move","_start,","addit","again.a","asm","assembl","below","below:let","between","binari","break","brief","click","complet","content","cover.","data","debug","decim","disas:now","dive","each","eax.i","edx","engin","fire","forward","gdb","give","hack","https://github.com/mytechnotalent/revers","lesson","let","look","move","next","now","part","pleas","program","program!","r:a","registers]","registers]for","run","second","see","si","successfulli","successfully.","tabl","topic","tutoriallet’","twice","up","valu","week"],"pages/part-27-asm-hacking-2-moving-data-between-registers.html":["$edx","0x16","0x19","2","22","25","27","=","[move","_start,","addit","asm","assembl","assembly.i","below","below:let","between","binari","binary.w","bite","break","brief","click","complet","content","continu","control","cover.","data","decim","decimal.hopefulli","disas:now","dive","each","easili","edx","else.w","engin","everyon","exampl","example:a","fire","forward","gdb","give","go","goal","hack","here","https://github.com/mytechnotalent/revers","instruct","key","languag","last","lesson","let","look","manipul","move","next","now","over","pace","part","pattern","pleas","program","program!","programs.","r:a","registers]","registers]for","rest","run","second","see","set","si","simpl","size","small","snail","someth","successfully.","tabl","third","throughout","topic","tutori","tutoriallet’","twice","understand","up","valu","veri","week","write","x86"],"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":["10","28","3","[move","addit","asm","assembl","below","between","brief","click","complet","constant","content","cover.","data","debug","decim","demonstr","dive","each","ecx.keep","elf_i386","engin","file","forward","give","https://github.com/mytechnotalent/revers","insid","integ","lesson","link","look","m","memori","mind","move","moving_data_between_memory_and_regist","moving_data_between_memory_and_registers.o","moving_data_between_memory_and_registers.sto","next","o","object","part","pleas","program","program!","registers.","registers]","registers]for","see","specif","tabl","third","topic","tutorialin","type:a","type:ld","valu","week","–32"],"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":["0.after","0xa","10","29","3","[move","_start","above.a","addit","asm","assembl","below","between","break","brief","click","command","complet","constant","content","cover.","data","debug","debug!","decim","dive","each","ecx","ecx.w","engin","follow","forward","gdb","give","hack","hex.i","https://github.com/mytechnotalent/revers","info","insid","integ","lesson","look","memori","mode","move","next","now","open","part","pleas","program!","quiet","regist","registers]","registers]for","run","see","specif","step","tabl","third","topic","tutoriallet’","twice,","valu","week"],"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":["$ecx","0.","0x539","0xa","10","1337","3","30","=","[move","_start","above.","addit","anoth","asm","assembl","before.w","below","between","bite","break","brief","clearli","click","command","complet","constant","content","control.i","cover.","creat","data","decim","decimal.a","dive","each","ecx","else.let’","engin","exampl","follow","forward","fourth","gdb","give","hack","hack!","hard","hex","https://github.com/mytechnotalent/revers","info","insid","integ","lesson","let","let’","look","masteri","memori","mode","move","muscl","next","now","open","part","pleas","prior","processor","program!","quiet","r.a","regist","registers]","registers]for","run","see","series.","set","si","si.","situat","size","someth","specif","state","tabl","through","throughout","topic","tutoriallet’","ultim","valu","varieti","veri","week"],"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":[".bss",".data","0xa","10","31","4","777","[move","abov","absolut","academ","addit","anyth","asm","assembl","below","between","brief","call","chose","clearli","click","code","complet","constant","constant.","content","cover.","data","debug","decim","deliber","demonstr","dive","each","eax","eax.","elf_i386","engin","exercis","file","flexibl","form","forward","fourth","give","hex.thi","https://github.com/mytechnotalent/revers","immedi","initi","keep","language.keep","lesson","link","look","m","manipul","memori","memory.","memory]","memory]for","mind","move","moving_data_between_registers_and_memori","moving_data_between_registers_and_memory.o","moving_data_between_registers_and_memory.sto","next","normal","o","object","part","pleas","possibl","program","program!","pure","regist","runtime.","section","section.y","see","set","show","specif","stay","store","tabl","topic","tutorialin","type:a","type:ld","under","up","valu","variabl","want","week","–32"],"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":[".data","10","16","32","4","6","777","[move","abov","addit","anyth","asm","assembl","begin","below","between","brief","call","clearli","click","code","complet","constant","constant.i","content","cover.","data","debug","decim","demonstr","dive","each","eax","eax.","engin","forward","fourth","gdb","give","go","hack","https://github.com/mytechnotalent/revers","immedi","initi","keep","lesson","line","look","memori","memory.","memory]","memory]for","mind","move","next","part","pleas","program","program!","regist","replac","runtime.","section.a","see","set","specif","store","successfulli","tabl","topic","tutorial.w","tutorialin","up","valu","week"],"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":[".data","10","16","33","4","6","666.i","777","[move","abov","addit","again","anyth","asm","assembl","begin","below","between","brief","call","clearli","click","code","code.w","complet","constant","constant.now","content","cover.","creat","data","debug","decim","dive","each","eax","eax.","engin","examin","fifth","forward","gdb","give","go","hack","here","https://github.com/mytechnotalent/revers","immedi","initi","keep","last","lesson","lesson.","let","line","look","memori","memory]","memory]for","mind","move","next","part","pleas","program!","re","regist","replac","runtime.","section.a","see","set","sourc","step","store","successfulli","tabl","thing!w","time","took","topic","tutorial.w","tutoriallet’","up","valu","veri","week"],"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":["0.","1","11","2nd","34","4","5","[indirect","abov","above.","add","addit","address","address,","array","array.w","asm","assembl","base","below","brief","byte","bytes.w","case","click","code","complet","constant","contain","content","cover.","creat","data","debug","deeper","demonstr","determin","dive","each","ebx.w","edi","element","element,","elf_i386","engin","fifth","file","forward","give","go","goe","good","grasp","https://github.com/mytechnotalent/revers","index","indic","indirect","indirect_addressing_with_regist","indirect_addressing_with_registers.o","indirect_addressing_with_registers.sto","integ","lesson","link","locat","look","m","manipul","memori","memory.","mind","mode","more","move","next","o","object","occupi","offset","on","on.keep","part","past,","place","pleas","program","program!","registers.","registers]","registers]for","see","select.keep","separ","sequenti","seri","singl","size","start","studi","system","tabl","take","therefor","time","topic","tutorialin","type:a","type:ld","ultim","unit","us","util","valu","value.","values.thi","want","week","–32"],"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":["0","1","11","18","25","25.if","35","5","6","8","[indirect","_start,","_start.:","a24","abov","actual","addit","address","analyst","array","array.","arrays.in","asm","assembl","at&t","back","based.y","beginning!i","below","between","binari","both.let’","break","brief","chang","choos","click","code","code.objdump","comfort","compil","complet","complex","confus","constant","content","convert","cover.","critic","d","debug","decim","deliber","demonstr","differ","dive","each","easili","edi","edi.","engin","essenc","examin","explained.thi","few","fifth","first","flavor","forc","forth","forward","fun","gdb","gdb.","give","go","grep","hack","higher","https://github.com/mytechnotalent/revers","immedi","index","indirect","indirect_addressing_with_regist","insid","intel","introduct","it’","keep","label","label.w","language.","last","lesson","level","line","load","look","m","malwar","mani","manipul","manual","memori","mind","mind,","move","next","now","number","objdump","on","origin","overwrit","part","path","pleas","previou","prior","program","program!","program.let’","provid","question","recap.","registers.i","registers]","registers]for","regularli","revers","review","schedul","second","see","show","someday","sourc","start","step","such","syntax","syntax.","syntax.i","tabl","take","through","topic","tutorialin","understand","us","valu","value.","view","want","way","week","work","x86.","|"],"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":["*0x804909e","*0x804909e.","0x804909e","0x80490a2","0x80490a2.","32","36","4","5","66","8","8.if","[indirect","_start","_start.a","abov","above.","addit","address","address.in","advanc","again","array","array.thi","asm","assembl","below","below.i","binari","bit","break","brief","broke","byte","case","chang","click","command","comment","complet","constant","content","continu","cover.","data.","data.let’","decim","decimal.","dive","each","element","engin","examin","forth.","forward","gdb","give","hack","hack!aft","here","hold","https://github.com/mytechnotalent/revers","import","insid","instead","integ","label","leav","lesson","lesson.","load","locat","look","manipul","memori","more.let’","move","next","on","onc","part","pleas","pointer","print","prior","program","program!","put","questions,","ran,","reexamin","registers]","registers]for","rememb","respect","runtim","see","sixth","sourc","state","store","successfulli","tabl","them.","through","topic","tutoriallet’","ultim","understand","valu","veri","week","x86","yield"],"pages/part-37-asm-program-6-cmov-instructions.html":["%eax","%ebx,","0]cmov","0]cmova","0]cmovb","0]cmovl","0]cmovnc","0]cmovp","0]keep","14","1]cmovb","1]cmovc","1]cmove","1]cmovl","1]cmovn","1]cmovno","1]cmovnp","1]cmovo","21","22.","24","37","6","=","=0]there","[carri","[cmov","[overflow","[pariti","[sign","[zero","abov","addit","appropriately.","array","as:cmova","as:cmovg","ascii","asm","assembl","begin","below","between","binary.ther","brief","carri","cf,","click","cmov","cmov_instruct","cmov_instructions.o","cmov_instructions.sto","cmovb","cmovna","cmovnb","cmovng","cmovnl","cmovnz","cmovp","cmovpo","cmovz","cmp","code","code.ok","compar","comparison","complet","condit","content","convert","cover.","cycl","debug","demonstr","determin","differ","display","dive","each","eax","ebx","ebx.on","eflag","elf_i386","engin","equal","examin","exit","experienc","feed.keep","file","final","find","find_smallest_valu","first","flag","forward","function","give","greater","https://github.com/mytechnotalent/revers","indic","instruct","instructions.befor","instructions]","instructions]for","integ","is.","jmp","less","lesson","let","line","link","look","loop","lowest","m","mathemat","message,","mind","move","need","neg","new","next","noth","o","object","oper","operand","operands.if","operations.","origin","overflow","pariti","part","period","pf","pleas","point","posit","prevent","processor","program","program!","programm","refresh","regist","register.aft","relationship","reli","replac","respect","review","save","second","see","series.th","set","sf","sign","simpli","sixth","smaller","sourc","speed","statement","statement.","subtract","such","sys_writ","tabl","talk","therefor","three","through","topic","tutorialin","two","type:a","type:ld","ultimately.w","unsign","up","us","util","valu","week","work","xor","zero","zf","–32"],"pages/part-38-asm-debugging-6-cmov-instructions.html":["$ebx.","&answer.i","0x08048092","0x080480b1","31.","38","46.","6","7.ok","[cmov","addit","answer,","ascii","asm","assembl","below","break","brief","click","code.let","complet","content","convert","cover.","debug","dive","each","engin","equival","examin","forward","give","hack","https://github.com/mytechnotalent/revers","instructions]","instructions]for","lesson","let","line","look","next","now","order","part","pleas","print","printabl","program!","r","re","rememb","run","see","sixth","sourc","tabl","topic","tutoriallet","type","valu","week","x/1c","‘7’"],"pages/part-39-asm-hacking-6-cmov-instructions.html":["$eip","0x080480dd","39","6","7","=","[cmov","_start.","addit","anywher","asm","below","binari","binary.","bit","brief","bring","broke","bypass","choose.w","click","code","command","complet","content","cover.","debugger.i","each","engin","execut","exit","expected.","final","forward","gdb.let’","give","hack","https://github.com/mytechnotalent/revers","insid","instruct","instructions]","instructions]for","jump","lesson","look","next","nop","now","part","pleas","routine.","run","see","series.","set","smallest","tabl","teach","topic","tutori","tutoriallet’","up","us","valu","week","within","wrap"],"pages/part-40-conclusion.html":["40","addit","all.","allow","android","assembl","assembly,","bare","below","benefici","brief","c++","c,","career","click","complet","comput","conclus","conclusionfor","content","cover.","develop","development.if","devic","each","engin","engineering,","even","everyon","extens","forward","futur","give","higher","hopefulli","https://github.com/mytechnotalent/revers","impact","import","io","java,","join","languag","languages.i","lesson","level","look","make","malwar","matter","metal","more","natur","part","pleas","power","program","pursu","python","rapid","revers","second","seri","significantli","tabl","thank","today","tomorrow!","topic","tri","tutori","tutorialthi","understand","want","work","you."],"pages/part-1-the-meaning-of-life.html":["\"hello","&","(64","(img.xz)","(v1.2),","1","2","3","4","64","64gb","[https://www.offens","_arm64today","addit","amaz","arm","balenaetch","below","bit","bit)","both","brief","build","built","byte","c++","card","click","clone","code.","comfort","complet","content","cover.","develop","devic","document","download","each","editor","environ","environment.","final","first","flash","following:raspberri","free","git","give","go","https://github.com/mytechnotalent/hacking_c","https://github.com/radareorg/radare2.git","imag","images/]aft","in.","job","kali","latest","lesson","life","lifefor","linux","mean","micro","microsd","minutes.th","nano","necessari","need","needs.cd","next","null","obtain","on","part","pi","pleas","program","radare2","raspberrypi","reader/writ","sd","security.com/kali","set","softwar","standard","step","suffici","sys/install.sh","tabl","text","topic","tutori","up","us","version","video","vim","want","watch","whatev","with.in","world!\".","write","–"],"pages/part-2-number-systems.html":["(hex)","(off","(on","(technic","+","+5v","0","0).","0.2)can","0.6)can","0.7)can","0.8)can","0.when","0011","0011a","0101","0111","0:","0v","0v.we","0x","0x5f","1","1)","1,","10","1000","10103","1010it","1101","1111","120","120:","128","15","15therefor","16","16^0","16^1","2","2017,","24","24.4)can","24:","32","352","4","5","51111","56","56.3)can","56:","64","8","8.5)can","80","80f","850","8:","93","95","955","=","abov","above,","addit","addition!","address","applic","arm","as:0x3a","ask","assembl","assembly,","base","basic","bcm2837","begin","below","binari","binary,","binary.1)can","bit","bits.","bottom","brief","byte","byte.0101","byte.befor","c++,","c,","carri","check","click","code.i","column","combin","compar","complet","comput","conjunct","consid","content","convert","core","cover.","crap","creating,","data.","deal","debug","decim","decimal,","decimal.","decimal.ad","decimal.if","denot","digit","discuss","dive","down","each","each.","effect","engin","equal","even","everyth","examin","exampl","familiar","firm","fit","follow","following.","following:0x5f","ftherefor","get","give","go","goe","grasp","hack","happen","hard","hell","hex","hex.","hex.fin","hex.to","hex.w","hex.“whi","highest","hit","hold","https://github.com/mytechnotalent/revers","human","import","inform","insid","is,","it’","java,","javascript,","keep","know","languag","learn","length","length.to","lesson","let","let’","linux","liter","look","manipul","me!”if","mean","memor","microprocessor","microprocessor.","mind,","moment","new","next","nibbl","no,","notat","number","oper","operates.if","opposit","order","overflow","part","place","pleas","possibl","processor","processor.wheth","put","python,","question.th","r,","realiti","realli","regist","register).next","registers,","rel","remaind","repres","result","revers","row.","see","seri","seventeen.let’","simpl","simpli","singl","sizes.","so,","stay","street,","subtract","such","suggest","system","system.","systemsfor","tabl","table.let","take","therefor","thousand","time","togeth","top","topic","tuned!","tutorialat","two","ultim","understand","valu","veri","version","want","wast","week","wide","within","work","works,","x","yes,","–"],"pages/part-3-binary-addition.html":["(1)","(1)11000101","+","0","0100","01010101","0111","01110000","1","1011","11000101","11010101","11110000","3","3rd","4","8","8th","=","[one","addit","additionfor","below","binari","bit","bit.","brief","carri","click","complet","content","cover.","cpu","cpu.let’","differ","discuss","dive","each","engin","equal","examin","exampl","example:","fashions:0","flag","follow","four","gener","give","had:","here","https://github.com/mytechnotalent/revers","import","keep","later","lesson","mean","mind","nibbl","number:","obviou","occur","on","one]","overflow.let","part","pleas","plu","refer","see","simpli","stay","subtraction!","tabl","take","topic","trigger","true.","tuned!","tutorialbinari","tutorials.","understand.next","veri","week","within","zero,","–"],"pages/part-4-binary-subtraction.html":["(1)","+","0","1","1.let","2.00000010invert","2.we","4","4,","4.we","7","8","abov","ad","addit","ask,","below","binari","bit","bit.","bits.11111101let’","brief","carri","click","complet","compliment","concept","content","cover.","direct","dive","each","engin","examin","exampl","final","flag","flag.next","four","futur","give","https://github.com/mytechnotalent/revers","indic","invert","lengths!","lesson","more","move","neg","negative.th","noth","number","operation:so","overflow","part","pleas","point","posit","refer","repres","sign","start","stay","subtract","subtracted.","subtractionfor","tabl","topic","tuned!","tutori","tutorialbinari","two","util","valu","week","word","yield","zero","–"],"pages/part-5-word-lengths.html":["0x00000000","0x00000004","0x00000008","0x0000000c","0xffffffff.","16","31","32","4","4.","5","actual","addit","address","appreci","architectur","arm","assembl","assembly,","associ","basic","below","bit","bits.","block","boundari","brief","byte","bytes.","carri","chip","click","code","complet","concept","content","cover.","cpu","cpu.","critic","deal","defin","differ","differently.th","dive","divis","each","engin","everyon","exampl","execut","execution.befor","fashion","fetch","first","framework","gener","give","go","goe","hang","here","https://github.com/mytechnotalent/revers","important?","inform","instruct","lectur","length","lengthsfor","lesson","locat","lowest","make","memori","more","number","occur","operates.","over","overflow","part","pleas","prior","processor","proper","refer","registers!","rememb","see","signific","start","stay","system","tabl","there!next","there.th","therefor","topic","tuned!","tutori","tutorialth","understand","up","week","word","word.if","word:0x00000000","work","x86","–"],"pages/part-6-registers.html":["(gener","0x02","16","22","22,","32","6","8","@","[r10]","[r4]","access","addit","addition","aforement","apart","arm","assembl","bare","below","better","binari","bit","brief","build","byte","cell","chip","click","come","comment","compil","complet","content","counter","counter!","cover.","cpsr","cpsr.","critic","current","data","decim","detail","develop","device,","device.in","dive","do.next","down","dump","each","each.regist","engin","example:ldr,","extern","faster","few","focus","follow","gener","give","given","go","gpr","grasp","great","hack","hex","hex,","high","https://github.com/mytechnotalent/revers","ignored.th","illustrate.r0","in,","indic","inform","intern","known","languag","length","lesson","let","level","line","link","linux","load","locat","location.","look","machine.","make","manipul","matter","mean","memori","metal","microcontrol","microprocessor","mode","modes,","more","multi","need","needed.","next","oper","operation.th","os","part","phone","pleas","point","pointer","program","purpos","r0","r1","r10","r10,","r11","r12","r13","r14","r15","r2","r3","r4","r4,","r5","r6","r7","r8","r9","r9,","regist","register)","registersfor","revers","simpl","simpli","special","stack","statu","stay","storag","store","str,","such","suit","system","tabl","take","thumb.","time","topic","tuned!","tutorialour","two","ultim","understand","uniqu","us","user","valu","veri","way.","week","well","within","word","work","written","–"],"pages/part-7-program-counter.html":["0x00000000","15","7","addit","address","area","area.regard","arm","befor","begin","below","binary,","break","brief","call","care","caus","click","code","code:mov","come","complet","content","control","convent","counter","counter.","counterfor","cover.","cpsr!","cpu","crash","deal","design","direct","directli","discuss","dive","do.w","doing.next","down","each","easily.y","engin","essenti","exactli","execut","fault","fetch","firm","flow","follow","futur","give","go","hack","hold","https://github.com/mytechnotalent/revers","import","inform","instruct","learn","lesson","link","liter","make","mean","mode","more","next.","next.when","obtain","oper","order","os","over","param","part","pass","pc","place","pleas","processor,","program","put","quit","r0","r15","r15,","r3","refer","reg","regist","respons","return","returning.thi","revers","role","set","stack","standard","stay","subroutin","suggest","sure","tabl","test","think","thumb","topic","treat","tri","tuned!","tutorials.when","tutorialw","understand","valu","want","week","wrong","–"],"pages/part-8-cpsr.html":["(","(sign","(unsign","+","0,","1","28","29","30","31","32","4","8","=","@","addit","aforement","anoth","are:bit","as:cmp","assign","below","beq","bit","bits.ther","branch","brief","c","carri","click","cmn","cmn.","cmp","cmp,","code.regard","command","command,","compar","comparison","complet","concern","condit","content","cover.","cpsr","cpsrfor","deal","directli","dive","each","effect","engin","equal","equal,","example:cmn","fall","flag","flagbit","flags.ther","follow","give","goe","highest","https://github.com/mytechnotalent/revers","inform","instruct","label","lesson","link","logic","make","mean","more","n","neg","negat","notat","occurr","occurs,","on","operand","operation.","operations)bit","operations)when","overflow","part","particular","pleas","pre","program","r0","r0)","r1","r1,","regist","register!","register.","respect","respectively.next","result","same","scenarios.","second","set","stay","store","sub","subtract","such","tabl","test","topic","total","tuned!","tutorialth","two","updat","us","usual","v","week","within","z","zero","zero.","–"],"pages/part-9-link-register.html":["(branch","(program","9","addit","address","address.","allow","anoth","back","becom","below","bl","brief","call","call,","call.when","clear","click","code","compile:a","complet","consider","contain","content","continu","copi","counter","counter)","counter.th","cover.","creat","debugg","directli","discourag","dive","don’t","each","engin","essenti","everyth","exactli","exampl","execut","executed,","exit.it","exit.thi","explanatory.","few","final","finished,","function","fundament","gdb","get","give","happen","here","here.","hold","https://github.com/mytechnotalent/revers","insid","instruct","jump","ld","lesson","lessons.to","link","link)","load","locat","lr","lr_demo","lr_demo.","lr_demo.o","memori","my_funct","necessari","next","no_return","o","oper","over","part","pc","percentag","perform","pleas","point","pointer!","pretti","prior","proce","process.next","program","progress","r14,","r14.","r15","read","regist","register,","register.her","registerfor","repeat","requir","return","returns,","right","save","section.","see","self","sequenti","set","show","simpl","skip","small","source.cod","stack","start","stay","step","step:a","subroutin","subroutines.when","tabl","time","time!","topic","tuned!","tutorialth","understand","until","us","week","wrap_up","write"],"pages/part-10-stack-pointer.html":["(last","0x73fff3a0.pleas","0x7efff39c","0x7efff3a0","0x7efff3a0.when","0xefff39c.","10","16","30","4","48","abstract","addit","again","again,","again.https://media","again.w","analysi","answer","arm","around","ask!th","back","backward","be","becom","below","beneath","binari","bm0bxsu\"/>w","boot","brief","bytes.","ce","chang","change.befor","choosing.cod","clear","click","code","code,","compil","compile:a","complet","content","cover.","critic","data","debug","decim","discourag","dive","don’t","downward","downward.","each","engin","everyth","exampl","exp1.licdn.com/dms/image/c4e12aq","fact","few","firmwar","first","gdb","gdb.","give","go","goe","grow","happening.let","heck","here.","hex","https://github.com/mytechnotalent/revers","imagin","inline_imag","insid","kind.next","ld","lesson","lessons.to","let","lifo","link","load","look","malwar","memory.now","move","movement","new","next","notic","now","o","on","onc","onto","oper","other.origin","out","out).","over","part","place","plate","pleas","pointer","pointerfor","pop","procedures.","push","put","r7","r7.","regist","revers","revolv","see","seri","shrink_1000_1488/0/1520143279567?e=1614211200&v=beta&t=uuuio2c8cb629giybggjqwlyxaq3zfp","sp","sp.let","sp_demo.","sp_demo.o","spdemo","stack","stack,","step","tabl","take","therefor","through","time","time!","time.w","tiylbxjojq/articl","top","topic","truli","tutorialth","type","understand","valu","week","well"],"pages/part-11-arm-firmware-boot-procedures.html":["0","0x8000","0x8000,","0x8000.let","0x8001,","0x8002,","0x8003,","0xa","0xe","0xea","0xfe","0xff","1010offset","11","1110op","23","24:","27","28:","2i","3","31","31.a","32","8","abov","above!“i’m","above,","above.","addit","address","always2)op","architecture.","arm","around","ask","asked!","bare","basic","begin","below","better","bit","bits,","boot","boot.next","bootcode.bin","boots,","bored!","branch3)offset","break","brief","byte,","c2","cach","card","champagne!when","click","code","code.","command","complet","config.txt","content","content/uploads/2012/02/bcm2835","control","corner","cover.","cpu","crap","creat","critic","current","cut","danger","datasheet","datasheet!i","datasheet:https://www.raspberrypi.org/wp","device.a","dive","down","ea@","each","earth","easav","editor","effort","engin","entir","even","everyth","execut","exercis","far","ff","file","firmwar","firmware!","first","following:f","get","give","go","gpu","graphic","hack","happen","happen,","happens,","hard","held","hell","hex","https://github.com/mytechnotalent/revers","imag","infinit","it:1)condit","keep","kernel.img","kernel.onc","kit","know","learn","lesson","link","linux","load","loaded,","loaded.@","loaded.“so","loads.th","locationcondit","long","look","loop.review","lot","machin","malwar","matter?”glad","memori","memory.if","metal","mind","mod.","moment","move","neumann","never","noth","on","on?”thi","open","origin","os","out","over","painstak","part","particular","passion","peripherals.pdfth","pi","planet","pleas","power","power,","procedur","proceduresfor","process","processor","progress","ram","raspberri","reach","read","realli","reboot.","reboot.“ok","receiv","replac","research","reset","rest","review","rom","root","routin","run","sd","set","simpli","singl","size","someth","soon","start","start.elf","state","stated,","step","stuck","sucks!”actu","tabl","take","talk","thing","those","through","time","today","topic","total","truli","turn","tutoriallet’","understand","understanding.anyon","up","variety.","version","von","wanted,","week","within","word","wrap","write","–"],"pages/part-12-von-neumann-architecture.html":["(along","12","access","addit","architectur","architecturefor","arithmet","below","between","brief","bus.th","chip","click","complet","comput","content","control","cover.","cpu","data","data,","digit","dive","each","engin","form","give","hold","https://github.com/mytechnotalent/revers","instruct","instructions,","keep","lesson","load","local","locat","logic","machin","main","memori","memory)","motherboard.a","move","need","neumann","on","oper","out","part","pipeline.","pleas","program","ram","ram,","ram.next","random","read","regist","same","share","stick","store","tabl","themselv","topic","tutorialarm","unit","von","week","well","write,"],"pages/part-13-instruction-pipeline.html":["1","13","2","2,","3,","addit","again","are:1)fetch","arm","assembl","background","basi","basic","be","below","between","branch","brief","c++","capabl","click","complet","comput","configur","content","control","cover.","cycles.y","decod","dive","each","engin","execut","fetch","first","flows.next","flush","fresh","give","goe","grab","hardwar","https://github.com/mytechnotalent/revers","instruct","instruction.3)execut","lesson","load","memori","mind,","now","occurs,","operation.when","over","part","perform","phase","phase.","pipelin","pipelinefor","pleas","process","processor","program!","refer","regard","regist","register.2)decod","respect","result","separ","set","stage","stage.keep","start","store","strong","tabl","three","topic","tutorialth","unit","week","within","work","–"],"pages/part-14-add.html":["(add","(here)","(set","14","53","67","about:1)th","adc","add","add,","add.","add.let’","addfor","addit","addition,","allow","android.","approach","arm","assembl","assembly,","basic","basics.","be","behind","below","binari","bite","break","brief","briefli","care?\"thi","carry)","class.","click","code","code:","complet","content","cover.","critic","debug","debug:","debugg","decim","dive","does.","does.2)th","down","each","engin","exactli","exampl","extrem","few","final","first","flag).","flags.3)th","flow,","focu","gdb","give","go","goal","good","grasp","hack","hack:","handl","heck","help","https://github.com/mytechnotalent/revers","illustrate:her","instruct","iphon","it'","kind,","learn","lesson","look","make","malwar","minut","move","part","piec","pleas","program","put","r0.\"so","r1","r2","r2.","regist","result","revers","scenes.next","second","see","seri","small","speak","specif","spend","step","tabl","take","talk","though","three","topic","tutori","tutorialin","understand","unlik","valu","want!thi","week","whatev","work"],"pages/part-15-debugging-add.html":["(cpsr","(cpsr)","0x10).let’","0x10.a","0x43","0x78","120","15","53","67","_start,","add","add.","add.o","add.olet’","add.sld","addfor","addit","addw","again","b","below","below:again","break","brief","bring","click","compile:a","complet","content","cover.","cpsr","debug","debug:gdb","decim","decimal.","disassembly.","dive","each","engin","exampl","flag","gdb","give","hack","hex","hold","https://github.com/mytechnotalent/revers","info","instruct","lesson","move","notic","now","o","operation.next","part","place","pleas","put","q","r","r,","r0","r0.let’","r1","r1.","r2","r2.","regist","registers:w","remain","result","review","run","saw","see","start","step","successfulli","tabl","topic","tutoriallet’","unchang","week"],"pages/part-16-hacking-add.html":["119!thi","120.","16","66!now","67","=","abil","absolut","add","addfor","addit","adds.","again","applic","assembly.","back","be","below","below:let’","binari","brief","case","click","combin","complet","content","control","cover.","creat","debug","debug:w","decim","differ","dive","each","engin","exactli","exampl","experi","give","hack","hack!","hand","help","here","https://github.com/mytechnotalent/revers","instruct","it.thi","last","learn","lecture,","lesson","let","make","malwar","move","new","now","output.","over","part","pleas","power","program","program,","r0","r1","rememb","revers","review","see","seri","set","simpl","state","tabl","topic","tutoriallet’","understand","valu","veri","want!next","week"],"pages/part-17-adds.html":["(nzcv)","0110","100","17","20,","28","29","30","30,","31","31,","4,294,967,295","=","abov","accordingli","adc","adc.","adc.o","add","addit","adds.","addsfor","below","binari","binary.","bit","brief","by:a","c","carri","click","come","compil","compile,","complet","content","convert","cover.","cpsr","cpsr.","cpsr.let’","critic","debug","decim","dive","each","engin","exampl","except","exercis","flag","flagbit","flagtherefor","following:bit","gdb,","give","go","hack","here.next","hex","hex.","https://github.com/mytechnotalent/revers","illustrate:w","indic","ld","lesson","look","make","mean:neg","n","need","neg","o","order","overflow","part","place","pleas","r0.we","r1","r1,","r2","r2.","rememb","same","see","sens","set","set,","setcarri","setoverflow","setzero","start","tabl","topic","tutorialadd","tutorials.y","understand","v","valu","week","z","zero"],"pages/part-18-debugging-adds.html":["(nzcv)","0000","0001","0001.therefor","0010","0010:the","10","100","18","20,","20000010","28","29","30","30,","31","31,","32","4,294,967,295","4294967295","64","99","=","abov","ad","add","addit","addition.if","adds.","addsfor","again","answer","below","binari","binary.","bit","brief","c","carri","cf","chang","click","code","code:w","come","complet","content","convert","cover.","cpsr","cpsr.","deal","debug","debug:w","decim","dive","each","engin","examin","exampl","execut","expected.","flag","flagbit","flagw","focu","following:bit","gdb,","give","hack","hex","hex.","https://github.com/mytechnotalent/revers","indic","it’","larger","lesson","let","make","mean:neg","more.w","move","n","natur","need","neg","noth","notic","now","number","numbers.next","order","overflow","part","place","pleas","possible?","program:w","r0","r0.let","r1","r1,","r2","r2.","re","regist","register.","rememb","result","saved.","see","sens","set","set,","set.","set.let","setcarri","setoverflow","setw","setzero","sign","signific","simple,","start","state","step","tabl","that?th","therefor","through","together.","topic","transpir","tutoriallet’","tutorials.w","two","unsign","upon","v","valu","week","z","zero","–"],"pages/part-19-hacking-adds.html":["(nzcv)","0001","0001.therefor","0010","0x1","0x10","0xffffffff","1","10","100","101","19","20,","28","29","30","30,","31","31,","4,294,967,295","4294967295","=","action","adc.","add","addit","addsfor","again","again:w","befor","below","binari","binary.","bit","brief","c","carri","caus","chang","click","code:w","come","complet","content","convert","cover.","cpsr","cpsr.","debug","debug:w","decim","dive","each","engin","entirety.","examin","exampl","flag","flag.","flagbit","flagw","following:bit","gdb,","give","hack","hack:w","happen","hex","hex.","https://github.com/mytechnotalent/revers","import","indic","kept","know","last","lesson","lessons.next","let","look","make","mean","mean:neg","means:th","means:therefor","n","need","neg","not,","now","onc","order","overflow","part","place","pleas","r0","r0.let","r1","r1,","r2","r2.","re","rememb","review","see","sens","set","set,","setcarri","setoverflow","setthi","setzero","start","step","step.bam!","tabl","take","therefor","this,","time","topic","trigger","tutoriallet’","tutorials.w","two","understand","v","valu","week","went","z","zero","–"],"pages/part-20-adc.html":["1","100","20","4,294,967,295","abov","ad","adc","adc.","adc.let’","adc.o","adcfor","add","addit","again","ask","attent","below","binary.","brief","by:a","carri","click","come","compil","complet","content","convert","cover.","cpsr","cpsr.","debug","decim","decimal)","decimal)?","dive","each","engin","exampl","except","first","flag","gdb,","give","go","hack","happen","hex","hex.","https://github.com/mytechnotalent/revers","illustrate:w","keep","ld","lesson","look","make","mind","need","next","o","onc","order","part","particular","pay","place","pleas","r0","r1","r1,","r2","r2,","r3","r3(100","r4","r4(100","r4.","r5","r5.we","regist","rememb","result?","same","see","sens","sentenc","set","set,","set.","start","statu","tabl","think","topic","tutori","tutorial.next","tutorialadc","tutorials.y","valu","want","week","work","yourself","–"],"pages/part-21-debugging-adc.html":["(nzcv)","0010","0010.therefor","1","100","20,","20000010","201","21","28","29","30","30,","31","31,","4,294,967,295","=","abov","ad","adc","adc.","adc.let’","adcfor","add","addit","again","ask","attent","below","binari","binary.","bit","brief","broken?","c","carri","clearli","click","code:w","come","complet","content","convert","cover.","cpsr","cpsr.","cpsr.next","debug","decim","decimal)","decimal)?","digest","dive","each","effect","engin","exampl","except","extra","flag","flagbit","flagw","following:bit","gdb,","give","go","hack","happen","hex","hex.","hope","https://github.com/mytechnotalent/revers","indic","lesson","make","mean:neg","n","need","neg","onc","oper","order","overflow","part","particular","pay","place","pleas","question","r0","r1","r1,","r2","r2,","r3","r3(100","r4","r4(100","r4.","r5","r5!","r5.we","rais","recap,","regist","rememb","result?ok","review","same","see","sens","set","set,","set.","seta","setcarri","setoverflow","setzero","signific","simpl","someth","start","statu","tabl","therefor","think","togeth","topic","tutorials.last","tutorialto","understand","v","valu","veri","want","week","work","yourself","z","zero","–"],"pages/part-22-hacking-adc.html":["(nzcv)","0001","0001.therefor","1","10","100","20,","200","201?","22","28","29","30","30,","31","31,","4,294,967,295","=","adc","adc.let’","adcfor","add","addit","again","again,","attent","below","below.w","binari","bit","brief","c","carri","chang","clearli","click","code:w","comparison.next","complet","content","cover.","cpsr","cpsr.","decim","decimal.let’","digest","dive","each","effect","engin","examin","except","few","flag","flagbit","flagw","following:bit","give","hack","hex","hex.","hope","https://github.com/mytechnotalent/revers","indic","last","lesson","let’","mean:neg","more","move","n","need","neg","now","oper","overflow","part","particular","pay","place","pleas","program","r0","r1","r1,","r2","r2,","r2.","r3","r4","r4.","r5!","r5.we","recap","regist","rememb","review","run","same","see","set.","seta","setcarri","setoverflow","setzero","signific","simpl","statu","step","sub.","tabl","take","time","times:ok","togeth","topic","tutorialto","understand","v","valu","veri","week","work","z","zero","–"],"pages/part-23-sub.html":["23","53","67","add","addit","affect","arm","below","brief","click","compile:a","complet","content","cover.","debugging.","decim","dive","each","end","engin","enough","examin","exampl","firm","flag","flags.","four","give","grasp","https://github.com/mytechnotalent/revers","instruct","keep","ld","lesson","mind","move","now.let’","o","part","pleas","prior","put","r0.next","r1","r2","result","rsb","rsbs,","rsc.","rscs,","s","sbc,","sbcs,","simpli","spent","start","sub","sub,","sub.","sub.o","sub.pleas","sub:to","subfor","subs,","subtract","such","suffix","tabl","take","time","today","topic","tutorialsubtract","week","–"],"pages/part-24-debugging-sub.html":["14","24","53","67","abov","add","addit","affect","arm","becomes.a","below","brief","clear.","click","complet","content","cover.","debug","debug.a","decim","dive","each","end","engin","enough","examin","exampl","expected.next","firm","flag","flags.","four","give","grasp","hacking.","https://github.com/mytechnotalent/revers","instruct","keep","lesson","let","mind","move","now","now.let’","part","pleas","prior","put","r0","r0.let’","r1","r2","re","regist","result","rsb","rsbs,","rsc.","rscs,","s","sbc,","sbcs,","see","simpli","spent","start","stated,","step","sub","sub,","sub.pleas","sub:w","subfor","subs,","subtract","such","suffix","tabl","take","through","time","today","topic","tutoriala","valu","week","work","–"],"pages/part-25-hacking-sub.html":["17","25","50","53","53.i","67","abov","add","addit","affect","arm","assembl","assembly.","becom","believ","below","brief","clear.","click","complet","content","continu","cover.","decim","done","each","encourag","end","engin","engineers!","enough","examin","exampl","expect","firm","flag","flags.","forward","foundat","four","futur","give","grasp","hack","hack.a","hacking.a","https://github.com/mytechnotalent/revers","instead","instruct","journey","keep","learn","lesson","let","littl","look","mind","move","now","now.let’","part","pleas","prior","progress.thi","provid","purpos","put","r0","r0.let’","r1","r2","re","regist","result","revers","rsb","rsbs,","rsc.","rscs,","s","sbc,","sbcs,","see","seri","set","simpli","solid","spent","start","stated,","step","sub","sub,","sub.pleas","sub:w","subfor","subs,","subtract","such","suffix","tabl","take","thank","that.","through","time","today","topic","tutoriala","tutorial’","valu","want","work","–"],"pages/part-1-the-meaning-of-life-part-2.html":["$35","(pid)","1","1.2ghz","13","2","2for","3","3,","4x","a53,","abov","actual","addit","advanc","again","agil","alon","alway","amazon","android","anyth","applic","architectur","arm","arm,","assembl","assembly.","attach","attack","augment","avail","back","bare","base","base.und","based.arm","bcm2837","becom","befor","below","binari","binaries.i","bone","both","brief","bring","broadcom","c","c#","call","care","caus","cell","challeng","chip","chip.","choic","circuit","cisc","cisc,","cli","click","cloud","code","colleg","come","commerci","common","compar","compil","complet","complex","compon","compromise.","comput","concept","condit","consid","consumption.how","contain","content","continu","contrast","cortex","cover.","cpu","creat","critic","curb","day","debug","debugg","decim","develop","development,","devic","directli","disassembled.w","dive","dollar","done","don’t","each","earth","echo","educ","electron","embed","engin","engineering.","engineering.th","enorm","environ","environment,","everywher","exact","examin","exist","expans","fact","felt","firm","first","flavor","focu","focus","forward.","framework","function","gb","gdb","get","give","gnu","go","govern","graphic","grasp","grow","gui","hardcor","hardwar","harm","help","hexadecim","hood","hood.”i","https://github.com/mytechnotalent/revers","https://www.raspberrypi.org.w","ida","includ","increas","instruct","instructions.","integr","internet","iot","java","java,","javaee.","jessie,","keep","kind","know","lab","languag","learn","less.","lesson","librari","life","linux","look","low","lpddr2","machin","machine.","machines.","make","mani","market","mean","million","moment.","more","move","necessari","need","nice","not,","number","obviou","on","only!next","oper","origin","out","part","pass","pass,","phone","pi","pictur","pleas","power","pretti","primarili","pro","process","program","project","proper","purpos","put","python,","quot","race","ram.","rapid","raspberri","raspbian","re","react,","real","reality.","reality.thi","reduc","refer","reflect","responsible!","retailers.","revers","review","rf","risc","risc.","robust","run","running.th","second","sector,","seri","set","shell.","shrink","singl","smaller","smart","soc","softwar","sole","spring","ssh","start","started...“so","statement","statement.","such","system","system.","systems.“wel","tabl","take","termin","that’","thing","things?","things?”i","think","third","time","time.lik","today","today,","today?","today’","togeth","tool","toolkit","topic","toward","tradit","trend","tutori","tutorial.","tutorialwelcom","tv","typic","under","understand","unfortun","us","usual","util","veri","version","visit","vulner","want","want,","week","well.","windows,","work","world","worri","x86","x86/x64","–"],"pages/part-11-firmware-boot-procedures.html":["0","0x800.let","0x8000","0x8000,","0x8001,","0x8002,","0x8003,","0xa","0xe","0xea","0xfe","0xff","1010offset","11","1110op","23","24:","27","28:","2i","3","31","31.","32","8","abov","above!“i’m","above,","above.","addit","address","always2)op","architecture.","arm","around","ask","asked!","bare","basic","begin","below","better","bit","bits,","boot","boot.next","bootcode.bin","boots,","bored!","branch3)offset","break","brief","byte,","c2","cach","card","champagne!","click","code","code.","command","complet","config.txt","content","content/uploads/2012/02/bcm2835","control","corner","cover.","cpu","crap","creat","critic","current","cut","danger","datasheet","datasheet!i","datasheet:https://www.raspberrypi.org/wp","device.a","dive","down","ea@","each","earth","easav","editor","effort","engin","entir","even","everyth","execut","exercis","far","ff","file","firmwar","firmware!","first","following:f","get","give","go","gpu","graphic","hack","happen","happen,","happens,","hard","held","hell","hex","https://github.com/mytechnotalent/revers","imag","infinit","it:1)condit","keep","kernel.img","kernel.onc","kit","know","learn","lesson","link","linux","load","loaded,","loaded.@","loaded.“so","loads.th","locationcondit","long","look","loop.","lot","machin","malwar","matter?”glad","memori","memory.","metal","mind","mod.","moment","move","neumann","never","noth","on","on?”thi","open","origin","os","out","over","painstak","part","particular","passion","peripherals.pdfth","pi","planet","pleas","power","power,","procedur","proceduresfor","process","processor","progress","ram","raspberri","reach","read","realli","reboot.","reboot.“ok","receiv","replac","research","reset","rest","review","rom","root","routin","run","sd","set","simpli","singl","size","someth","soon","start","start.elf","state","stated,","step","stuck","sucks!”actu","tabl","take","talk","thing","those","through","time","today","topic","total","truli","turn","tutoriallet’","understand","understanding.anyon","up","variety.","version","von","wanted,","week","within","word","wrap","write","–"],"pages/part-14-hello-world.html":["#includ","()","(translat","0.","0;","11","14","abov","abstract","ad","addit","allow","appear","applic","applications.th","approach","architectur","arm","assembl","associ","basic","becom","befor","begin","below","better","binary.","bit","break","brief","c","c++","call","caus","clear","click","code","code.","collis","compil","complet","complex","concept","confus","console.th","constant","content","convers","convert","cout","cover.","cpp","cpu","creat","created.","data,","deal","debug","declar","device.#includ","discussed.","displayed.th","dive","down","each","endl","endl.","engin","entir","entri","essenti","everyth","exampl","example1","example1.cpp","executable.","execute.","exist","file","file.","file.compil","files,","files.","final","find","first","focu","format","function","function.","function.th","gain","generated.","get","give","goe","group","hack","happen","header","hello","https://github.com/mytechnotalent/revers","includ","indic","insid","instructions.onc","int","int,","integ","interact","intermedi","iostream","it.","it.th","journey","keyword","languag","language.","language.w","later","learn","lesson","let’","librari","libraries.y","line","line:#includ","link","logic","machin","main","main(void)","mani","master","mean","mechan","more","move","multipl","name","namespac","need","never","new","next","notic","now","o","obj","occur","on","opcod","oper","operator.","order","organ","output","overload","paramet","pars","part","pass","past","pleas","point","preprocessor","prevent","print","printf","prior","process","processor","processor.next","processor.th","program","program.","push","quit","refer","requir","respect","rest","return","save","section","see","seri","similar","simpli","singl","something.","sourc","stage","standard","start","statement","statement.","std","std::cout","std;","step","stick","string","success!","symbol","syntax","tabl","take","termin","terminal!let","text","thing","through","through.","togeth","topic","touch","tradit","translat","tree","tutorialtoday","type","type:./example1","type:g++","ultim","understand","units)","upon","us","util","variabl","veri","void","week","works.","world","world.","worldfor","world”","{","}","“hello"],"pages/part-15-debugging-hello-world.html":["0x10750","0x10848.","15","4","ad","addit","address","address.","address.voila!","advanc","allow","analysi","answer","arm","ask","assembl","assembly.","assembly.thi","attach","back","base","be","below","binari","binaries.","binary!","binary.understand","binary.w","bit","break","breakpoint","brief","c++","caus","childishli","click","code","complet","complex","comprehensive.next","comput","consuming.revers","content","continu","control","cours","cover.","day","debug","debug!","debugg","disassembl","dive","down","each","effect","engin","engineer,","engineering.","examin","exampl","final","fire","focu","foreign","form","fulli","gdb","give","gnu","go","graphic","hack","hack.i","hello","here","hours,","https://github.com/mytechnotalent/revers","ida","in,","insid","know","languag","last","learn","lesson","let’","level.","level.w","line","link","load","locat","look","low","luxuri","machin","main+16.let’","mani","manipul","match","matter","memori","method","more","need","nice","notic","now","origin","over","part","pleas","pointer","preserv","prior","probabl","process","profession","program","properli","purpos","r1","r1.","r11","r11.","refresher,","regist","resid","revers","review","routin","run","same","scari","see","seeing.","seri","series.y","set","simpl","simpli","sole","sophist","sourc","space","stack","stack.w","start","step","string","string.","tabl","take","techniqu","techniques.","text","those","through","time","tool","topic","train","truli","tutoriallet’","ultim","understand","up","us","usag","values.let’","veri","week","week.let’","world","world!”","world.","worldfor","yourself","“hello"],"pages/part-16-hacking-hello-world.html":["(load","0x10750","16","3x","absolut","addit","address","again","again.let’","ago.let’","amaz","anyth","assembl","back","begin","below","binari","brief","chang","clearli","click","code","come","complet","constants.","contains,","content","continu","control","cover.","debug","disassembly.let’","dive","each","echoed,","echo’","engin","entir","examin","exampl","execut","execution.","execution.woohoo!","first","flow","give","hack","hack!","hello","here","hijack","hold","https://github.com/mytechnotalent/revers","in.","insid","journey!next","languag","ldr","lesson","let","let’","main+12.let’","matter","memori","memory.","now","number","onc","out","output.let’","over","overwrit","part","pleas","procedur","program","program.a","purpose!","r1","r1.","regist","register)","revers","review","run","same","see","set","si","simpl","standard","step","string","string,","successfulli","such","such.let’","suit","tabl","termin","through","today","took","topic","tutoriallet’","two","understand","valu","veri","way","ways.","week","world","world!”","worldfor","written","“hack","“hello"],"pages/part-17-constants.html":["&lt;&lt;","(unless","0;","17","2017.we","2017;","=","ad","add","addit","architectur","assign","base.it","below","break","brief","c++","call","cap","chang","click","code","compil","complet","con","const","constant","constant.a","constant.w","constants.","constantsfor","content","cout","cover.","created,","debug","declar","device.#includ","dive","down","down:w","each","earli","echo","endl","engin","exampl","example2","example2.cpp","execut","expand","far","function","function.that’","futur","give","hack","hacked).","have","https://github.com/mytechnotalent/revers","indic","int","integ","it!","keyword","know","languag","lesson","let’","line","main(void)","new","o","on","output","part","place","pleas","practic","print","program","program.","redefin","referenc","return","save","second","see","simpl","simple.next","simpli","somewher","standard","start","std::cout","std::endl;","step","string","success!","such","tabl","termin","terminal!let’","terminal.","through","throughout","tint","topic","tutorialso","type:./example2","type:g++","updat","upon","us","util","valu","veri","week","works.","year","{","}","“2017”","“constant”"],"pages/part-18-debugging-constants.html":["(terminal)","0x10730","18","2017.","above.next","addit","address","assembl","below","branch","brief","clearli","click","code.let’","comfort","complet","constant","constants.","constantsfor","content","continu","cout","cover.","debug","debug!a","dive","do","each","engin","equal","feel","function","give","hack","https://github.com/mytechnotalent/revers","it.w","last","lesson","let’","littl","memori","more","move","output","part","pleas","print","r1","ran","review","see","stage","standard","tabl","terminal.","topic","tutoriallet’","understand","valu","veri","watch","week","week’","–"],"pages/part-19-hacking-constants.html":["0x10730","19","1981!","1981.","2017.","addit","address","below","breakpoint","breakpoint.let'","brief","chang","charact","click","code.let’","complet","constant","constantsfor","content","continu","cover.","dive","each","engin","equal","give","hack","hack!a","hack!let’","https://github.com/mytechnotalent/revers","lesson","let’","main+28","memori","next","origin","part","pleas","program","r1","re","review","second","see","set","start","success","successfulli","tabl","topic","turn","tutoriallet’","valu","variables.","watch","way!","week","–"],"pages/part-20-character-variables.html":["&lt;&lt;","0;","0x6e","110","20","4","8","=","actual","add","addit","ascii","assign","below","bit","break","brief","byte","c++","call","char","charact","click","code","come","compil","complet","content","cout","cover.","data,","data.keep","deal","dealt","debug","decimal.","deriv","device.#includ","digit","dive","down","down:w","each","endl","engin","example3.cpp","example3w","far,","function","function.that’","give","handi","hex","https://github.com/mytechnotalent/revers","indic","int","it!","journey","keyword","languag","length","length.","lesson","lesson.w","let’","line","liter","long.","main(void)","mind,","n","n.we","new","next","o","on","output","part","pleas","print","processor","program","program.","recap,","repres","respect","return","review","save","see","simple.next","simpli","stage","standard","start","std::cout","std::endl;","step","string","tabl","take","termin","terminal!let’","terminals.rememb","therefor","third","thu","topic","translat","tutorialth","two","type:./example3success!","type:g++","understands.","unlik","up","util","valu","value.","variabl","variables.","variablesfor","variable”","veri","week","works.","yes_no","{","}","–","‘n’;","“charact","“n”"],"pages/part-21-debugging-character-variables.html":["0x6e","110","21","addit","address","ascii","be","below","brief","byte","case","charact","character.let’","clear","click","code","code.let’","complet","confusing.","content","continue.w","cover.","data.","deal","debug","debug!woah!","decimal.","deriv","directli","dive","don’t","down","each","engin","expected.it","experi","few","give","hack","here.next","hex","https://github.com/mytechnotalent/revers","import","keep","last","lesson","let’","load","locat","main+12","manipul","memori","mind","n","notic","now","output","part","place","pleas","previou","print","process","processor","r3","r3.","regist","register.","rememb","respect","review","see","seen","singl","standard","step","string","tabl","time","topic","translat","tutoriallet’","understand","understands.","valu","value.w","variabl","variable.","variables.","variablesfor","week","–","‘n’","‘n’."],"pages/part-22-hacking-character-variables.html":["0x6e","22","4","addit","again","below","boolean","brief","chang","charact","clearli","click","code.let’","complet","content","continu","cover.","direct","dive","each","engin","give","hack","hack!w","https://github.com/mytechnotalent/revers","lesson","main+12","move","now","output.next","part","pleas","print","r3","r3.","reexamin","review","see","standard","step","successfulli","tabl","time","topic","tutoriallet’","valu","variabl","variables.","variablesfor","verifi","week","worked!","–","‘n’.after","‘n’.let’","‘y’","‘y’.a"],"pages/part-23-boolean-variables.html":["&lt;&lt;","+","./example4","0","0.","0;","1,","23","=","addit","assign","back","below","binari","bool","boolean","break","brief","call","clearli","click","code.#includ","compil","complet","comput","content","cover.","creat","debug","derived.","dive","down:w","each","echo","engin","examin","example4","example4.cpp","fals","false;","georg","give","goe","great","https://github.com/mytechnotalent/revers","int","ishack","journey","lesson","let’","level","lowest","main(void)","modern","name","next","o","output","output.next","part","pleas","print","return","run","scienc","see","simpli","stage","standard","std::cout","std::endl;","success!","successfulli","tabl","terminal!let’","topic","true,","tutorialth","type:g++","valu","variabl","variables.","variablesfor","week","{","}","–"],"pages/part-24-debugging-boolean-variables.html":["0","24","4","actual","addit","appreci","base","basic","below","boolean","break","brief","c++","clearli","click","code.i","code.let’","complet","components.","content","cover.","critic","debug","debug.let’","devic","disassemble.let’","dive","down","each","engin","examin","exampl","fals","flow.","give","hack","https://github.com/mytechnotalent/revers","ishack","know","lesson","logic","make","now","part","patienc","pi","pleas","process","proper","r3.a","raspberri","re","revers","see","seem","sens","sourc","step","tabl","take","thing","through","time","topic","trivial","tutoriallet’","valu","variabl","variables.","variablesfor","week","work","works.next","–"],"pages/part-25-hacking-boolean-variables.html":["0","1","25","addit","approach","below","boolean","break","brief","build","click","code","code.let’","complet","content","continu","control","cover.","disa","dive","each","elementari","engin","everyth","examin","exampl","execut","fals","folks!","four","give","hack","hack!let’","help","https://github.com/mytechnotalent/revers","integ","ishack","lesson","librari","main+12.veri","main,","matter","mental","move","notic","now","part","pleas","r3","re","run","see","set","simpl","simpli","step","tabl","take","times.","topic","true","true.it’","tutoriallet’","understand","variabl","variables.","variablesfor","week","what!next","–"],"pages/part-26-integer-variables.html":["&lt;&lt;","(2^31","(2^32","(unsigned)","(−2^31)","0","0;","1)","2,147,483,647","26","2^32","32","4","4,294,967,295","777","777;","=","access","addit","address","assign","below","binari","bit","break","brief","byte","c++","click","code.#includ","common","compil","complement.keep","complet","content","cout","cover.","debug","depend","differ","directli","dive","down:w","each","engin","examin","example5./example5success!","example5.cpp","function.next","gb","give","https://github.com/mytechnotalent/revers","int","integ","journey","lesson","main(void)","maximum","memori","memory.let’","mind","mynumb","next","number,","o","out","output","part","pleas","print","rang","regist","represent","representations,","return","see","simpli","stage","standard","std::cout","std::endl;","store","tabl","termin","terminal!let’","through","topic","tutorialth","two","two'","type:g++","used.","valu","values.","variabl","variables.","variablesfor","week","{","}","–","−","−2,147,483,648"],"pages/part-27-debugging-integer-variables.html":["#arm","#asm","#cplusplu","#reverseengineeringnext","(2^31","(2^32","(unsigned)","(−2^31)","0","0x10730","1)","2,147,483,647","27","2^32","32","4","4,294,967,295","777","access","addit","address","again","back","below","binari","bit","brief","byte","c++.#linux","clearli","click","closer","code.","common","complement.keep","complet","content","continu","cout","cover.","data","debug","debug!w","depend","differ","directli","dive","each","echo","emphas","engin","examin","function","gb","give","go","hack","https://github.com/mytechnotalent/revers","includ","inform","insid","integ","integers.a","last","lesson","let’","load","look.when","main+12","make","maximum","memori","memory.let’","mind","number,","part","pleas","present.","r3.","rang","regard","regist","represent","representations,","review","see","sens","store","tabl","take","termin","through","topic","tutoriallet’","two","two'","used.","util","valu","values.","variabl","variables.","variablesfor","want","week","week’","within","–","−","−2,147,483,648"],"pages/part-28-hacking-integer-variables.html":["0x10730","0x10730.a","28","666","777","addit","again","appear","below","brief","c++","clearli","click","code.","complet","content","continu","continue.success!","correspond","cout.let’","cover.","dive","each","echo","engin","float","function","give","hack","hack!let’","https://github.com/mytechnotalent/revers","insid","integ","lesson","let’","locat","look","memori","out","part","pleas","reexamin","review","see","set","stdout.next","tabl","take","termin","topic","tutoriallet’","valu","variabl","variables.","variablesfor","week","–"],"pages/part-29-float-variables.html":["&lt;&lt;","0;","1337.1","1337.1;","29","=","addit","arm","assembl","assign","attach","below","break","brief","c++","click","co","code.#includ","compil","complet","content","cout","cover.","debug","design","differ","directli","dive","down:w","each","engin","examin","example6./example6success!","example6.cpp","far","float","fraction","function.thu","give","good","https://github.com/mytechnotalent/revers","int","integ","introduc","journey","lesson","level,","main(void)","manipul","math","mynumb","next","now","number","o","out","output","part","period.let’","pleas","point","print","processor","regist","registers.next","return","see","simpli","stage","standard","std::cout","std::endl;","store","tabl","termin","terminal!let’","through","topic","tutorialth","type:g++","understand","up","valu","variabl","variables.","variablesfor","week","whole","within","work","{","}","–"],"pages/part-30-debugging-float-variables.html":["#8","&lt;&lt;","0;","1337.09998","1337.1","1337.1;","30","7","8.","=","addit","approxim","be","below","below.below","break","brief","c++","clearli","click","co","code.","code.#includ","command","complet","constant","content","continu","continue.w","cover.","debug","debug!let’","decim","digit","dive","doubl","each","element","engin","examin","exampl","float","forward.","give","go","hack","here","high","https://github.com/mytechnotalent/revers","info","insid","instruct","instruction.","int","keep","lesson","let’","load","main(void)","main+20","main+28","math","memory.let’","mind","move","mynumb","new","now","numbers.","origin","part","pleas","point","point.let’","precis","processor","r11","r11,","re","regist","rememb","return","roughli","s0.","s0.next","s0.we","s0?","see","seri","singl","special","std::cout","std::endl;","strang","such","tabl","topic","tutoriallet’","valu","variabl","variables.","variablesfor","vldr","week","within","work","{","}","–"],"pages/part-31-hacking-float-variables.html":["#8","&lt;&lt;","(less","0;","1337.09998","1337.1","1337.1;","31","6","7","8.","=","accur","addit","approxim","back","be","below","below.below","break","brief","c++","clearli","click","co","code.","code.#includ","command","complet","constant","content","continu","continue.w","cout","cover.","decim","digit","dive","doubl","each","echo","element","engin","examin","exampl","executes.next","float","forward.w","function","give","go","hack","hack!let’","here","high","https://github.com/mytechnotalent/revers","info","insid","instruct","instruction.","int","issu","keep","last","lesson","let’","load","look","main(void)","main+20","main+28","math","memory.let’","mind","move","mynumb","new","now","numbers.","origin","out","part","places)!fin","pleas","point","point.let’","precis","processor","r11","r11,","re","regist","rememb","return","review","roughli","s0.","s0.let’","s0.we","s0?","see","seri","singl","special","std::cout","std::endl;","strang","such","tabl","termin","topic","transpired.a","tutorial.let’","tutoriallet’","up","valu","variabl","variables.","variablesfor","vldr","week","week’","within","work","{","}","–"],"pages/part-32-double-variables.html":["&lt;&lt;","0;","1337.77","1337.77;","15","17","32","64","=","addit","assign","below","bit","break","brief","c++","click","code.#includ","compil","complet","content","cout","cover.","debug","differ","digit","directli","dive","doubl","down:w","each","engin","examin","example7./example7success!","example7.cpp","float","function.next","give","https://github.com/mytechnotalent/revers","int","journey","lesson","main(void)","mynumb","next","o","out","output","part","pleas","point","precis","precision.let’","print","return","see","signific","simpli","stage","standard","std::cout","std::endl;","tabl","termin","terminal!let’","topic","tutorialth","type:g++","variabl","variables.","variablesfor","week","wide","{","}","–"],"pages/part-33-debugging-double-variables.html":["#","&lt;&lt;","0;","0x7efff230","12","12]","1337.77","1337.77;","33","=","[r11,","addit","below","below.fin","breakpoint","brief","c++","click","co","code.int","complet","content","continu","continue.w","cout","cover.","d0","d0,","debug","debug!let’","dive","doubl","each","echo","engin","exactli","examin","execut","fulli","function.next","give","hack","https://github.com/mytechnotalent/revers","lesson","let’","load","locat","main(void)","main+24","math","mean","memory.let’","mynumb","now","offset","part","pleas","precis","print","processor","r11","r2,","r2.","regist","register.","resid","return","review","see","set","specif","std::cout","std::endl;","step","store","strd","tabl","terminal.","there.","topic","tutoriallet’","twice","understand","valu","variabl","variables.","variablesfor","vldr","voila!","watch","week","{","}","–"],"pages/part-34-hacking-double-variables.html":["#","&lt;&lt;","0;","0x7efff230","12","12]","1337.77","1337.77;","34","=","[r11,","addit","below","below.let’","breakpoint","brief","click","code.int","complet","content","continue.successfulli","continue.w","coprocessor","cover.","d0","d0,","d0.let’","debug!let’","dive","doubl","each","engin","exactli","examin","execut","fulli","give","hack","hacked!next","https://github.com/mytechnotalent/revers","insid","lesson","let’","load","locat","main(void)","main+24","math","mean","memory.let’","mynumb","now","offset","operator.","part","pleas","precis","print","r11","r2,","r2.","reexamin","regist","register!now","register.","resid","return","review","see","set","sizeof","specif","std::cout","std::endl;","step","store","strd","tabl","there.","topic","tutoriallet’","twice","understand","valu","variabl","variablesfor","vldr","voila!","week","{","}","–"],"pages/part-35-sizeof-operator.html":["&lt;&lt;","0;","16","16;","35","4","=","addit","anoth","below","break","brief","byte","click","code","code.#includ","compil","complet","content","cover.","creat","debug","dive","down:w","each","engin","examin","example8./example8w","example8.cpp","execut","give","hold","https://github.com/mytechnotalent/revers","indic","int","integ","journey","lesson","let’","main(void)","mynumb","mynumber.","mynumbers","next","o","oper","operator.","operatorfor","part","pleas","print","return","screen.let’","see","show","simpli","size","sizeof","sizeof(mynumber);","stage","std::cout","std::endl;","tabl","therefor","topic","tutorialth","type:g++","valu","variabl","week","wide.next","{","}","–"],"pages/part-36-debugging-sizeof-operator.html":["$r11","&lt;&lt;","0;","12","16","16.","16;","36","4","8","8.a","=","abov","addit","anoth","be","below","break","brief","byte","case","click","code","code.#includ","complet","content","continu","cover.","creat","debug","dive","each","echo","engin","examin","execut","exist","fact","give","go","hack","here","hold","https://github.com/mytechnotalent/revers","indic","insid","int","integ","lesson","main(void)","main+16","main+20","main.let’","make","move","mynumb","mynumber.","mynumbers","oper","operator.","operatorfor","origin","part","pleas","r3","r3.let’","re","rememb","repres","return","see","sens","show","size","sizeof","sizeof(mynumber);","std::cout","std::endl;","store","tabl","terminal.next","therefor","topic","tutoriallet’","valu","variabl","week","wide.fin","wide.let’","{","}","–"],"pages/part-37-hacking-sizeof-operator.html":["$r11","&lt;&lt;","0;","12","16","16.","16;","37","4","8","8.a","=","abov","addit","anoth","back","be","below","break","brief","byte","case","click","code","code.#includ","complet","content","continu","cover.","creat","debug","dive","each","echo","engin","examin","execut","exist","expected.w","fact","give","go","hack","hack!w","here","hold","https://github.com/mytechnotalent/revers","increment","indic","insid","int","integ","last","lesson","logic","machine!next","main(void)","main+16","main+20","main+28.w","main+36.w","main.let’","make","move","mynumb","mynumber.","mynumbers","oper","operator.","operatorfor","origin","part","pleas","pre","r1","r1!success!","r1.let’","r11","r3","r3.let’","re","rememb","repres","return","review","run","see","sens","show","size","sizeof","sizeof(mynumber);","start","std::cout","std::endl;","store","tabl","terminal.let’","therefor","topic","tutoriallet’","valu","variabl","week","week’","wide.fin","wide.let’","{","}","–"],"pages/part-38-pre-increment-operator.html":["&lt;&lt;","++mynumber;","0;","16","16;","17","17.next","17.when","38","=","addit","anoth","assign","be","befor","below","break","brief","click","code","code.#includ","compil","complet","content","cover.","creat","debug","dive","down:w","each","engin","examin","exampl","example9./example9w","example9.cpp","execut","get","give","https://github.com/mytechnotalent/revers","increment","int","journey","lesson","let’","main(void)","mynewnumb","mynumb","mynumber.","next","o","oper","operator.","operatorfor","part","pleas","pre","print","return","screen.let’","see","show","simpli","stage","std::cout","std::endl;","tabl","therefor","topic","tutorialth","type:g++","valu","variabl","variable.","week","{","}","–"],"pages/part-39-debugging-pre-increment-operator.html":["&lt;&lt;","++mynumber;","0;","1","16","16.","16;","17","17.","17.let’","17.we","17.when","39","8","=","addit","anoth","assign","back","be","befor","below","break","breakpoint","brief","click","code","code.#includ","compil","complet","content","continu","continue.a","cover.","creat","debug","debug.w","dive","down:w","each","echo","engin","evalu","examin","exampl","example9./example9w","example9.cpp","execut","expected.next","gdb","get","give","hack","https://github.com/mytechnotalent/revers","increment","int","lesson","main(void)","main+24","main+28","main.","move","mynewnumb","mynumb","mynumber.","normal","note","o","oper","operator.","operatorfor","origin","part","pleas","pre","print","r11","r3","r3.","re","rememb","return","screen.let’","see","set","show","simpli","stage","start","std::cout","std::endl;","store","success","successfulli","tabl","take","termin","therefor","through","topic","tutoriallet’","type:g++","valu","variabl","variable.","week","{","}","–"],"pages/part-40-hacking-pre-increment-operator.html":["++mynumber;","0;","1","16","16.","16;","17","17.","17.let’","17.we","17.when","40","8","=","addit","again","anoth","assign","back","be","befor","below","break","breakpoint","brief","click","code","code.#includ","compil","complet","content","continu","continue.a","cover.","creat","debug.w","dive","down:w","each","echo","else.success!","engin","evalu","examin","exampl","example9./example9w","example9.cpp","execut","expected.let’","gdb","get","give","hack","hack!","here","https://github.com/mytechnotalent/revers","increment","int","know","lesson","let’","main(void)","main+24","main+28","main.","move","mynewnumb","mynumb","mynumber.","normal","note","now","o","on","oper","operator.","operatorfor","origin","part","pleas","post","pre","print","program.let’","r11","r3","r3.","re","rememb","return","review","run","screen.let’","see","set","show","simpli","someth","stage","start","std::cout","store","success","successfulli","tabl","take","termin","terminal.next","therefor","through","topic","tutoriallet’","type:g++","valu","variabl","variable.","week","{","}","–"],"pages/part-41-post-increment-operator.html":["&lt;&lt;","++mynumber;","0;","16","16;","17","17.next","41","=","addit","anoth","assign","be","below","break","brief","click","code","code.#includ","compil","complet","content","cover.","creat","debug","dive","down:w","each","engin","exampl","example10./example10w","example10.cpp","execut","get","give","https://github.com/mytechnotalent/revers","increment","int","lesson","main(void)","mynewnumb","mynumb","mynumber.","o","oper","operator.","operator.when","operatorfor","part","pleas","post","print","return","screen.let’","see","show","simpli","std::cout","std::endl;","tabl","therefor","topic","tutoriallet’","type:g++","valu","variabl","variable.","week","{","}","–"],"pages/part-42-debugging-post-increment-operator.html":["&lt;&lt;","(standard","*main+12","*main+24","*main+28","++mynumber;","0;","1","16","16;","17","17.","17.let'","42","=","add","addit","anoth","assign","be","below","break","brief","c++","call","click","code","code.#includ","complet","content","continu","continue.a","cout","cover.","creat","debug","debug.let'","directli","dive","each","echo","engin","examin","exampl","execut","expected.next","function","get","give","hack","https://github.com/mytechnotalent/revers","increment","instruct","int","lesson","load","main(void)","memori","mov","mynewnumb","mynumb","mynumber.","oper","operator.","operator.when","operatorfor","out","output)","part","pleas","post","put","r2","r2.a","r3","re","regist","return","see","show","std::cout","std::endl;","tabl","termin","therefor","topic","tutoriallet’","valu","variabl","variable.","week","{","}","–"],"pages/part-43-hacking-post-increment-operator.html":["&lt;&lt;","*main+12","*main+24","*main+28","++mynumber;","0;","1","16","16;","17","17.","17.let'","43","=","add","addit","anoth","assign","baby!w","be","below","break","brief","c++","click","code","code.#includ","complet","content","continu","continue.a","cout","cover.","creat","debug.let'","decrement","desire!a","directli","dive","each","echo","engin","examin","exampl","execut","function","get","give","hack","heart'","https://github.com/mytechnotalent/revers","increment","instruct","int","know","lesson","load","main(void)","memori","mov","mynewnumb","mynumb","mynumber.","new","now","oper","operator.","operator.when","operatorfor","part","pleas","post","pre","put","r2","r2.let'","r3","re","regist","return","screen!next","see","set","show","std::cout","std::endl;","tabl","therefor","topic","tutoriallet’","valu","variabl","variable.","week","{","}","–"],"pages/part-44-pre-decrement-operator.html":["&lt;&lt;","0;","15","16","16;","44","=","action","addit","assign","assigned.let'","befor","below","brief","click","code.#includ","compil","complet","content","cover.","debuggin","decrement","dive","each","echo","engin","examin","example.","get","give","given","https://github.com/mytechnotalent/revers","int","lesson","look","main(void)","mynewnumb","mynewnumber.next","mynumb","mynumber;","new","oper","operator.","operatorfor","out","part","pleas","pre","return","run","see","std::cout","std::endl;","tabl","take","terminal.th","topic","tutoriallet'","valu","week","{","}","–"],"pages/part-45-debugging-pre-decrement-operator.html":["&lt;&lt;","0;","15","15.","15.let'","16;","45","=","abov","addit","area","below","both","break.a","brief","click","code","code.#includ","compil","complet","content","continu","cout","cover.","debug","debug.let'","decrement","dive","each","echo","engin","examin","expected.next","figur","final","function","give","hack","hold","https://github.com/mytechnotalent/revers","int","keep","lesson","main(void)","mind","mynewnumb","mynumb","mynumber;","next","oper","operator.","operatorfor","out.a","part","place","pleas","pre","r1","r3","re","rememb","return","see","statement.a","std::cout","std::endl;","stored.","tabl","topic","tutoriallet'","valu","week","well.","{","}","–"],"pages/part-46-hacking-pre-decrement-operator.html":["#includ","&lt;&lt;","0;","15","15.","16","16;","46",";","=","address","code.","compil","debug","decrement","dive","examin","hack","int","let'","main(void)","mynewnumb","mynumb","next","oper","operator.","operatorthi","out","part","post","pre","print","reduc","respectively.","return","scenario","see","std::cout","std::endl;","take","valu","week","{","}","–"],"pages/part-47-post-decrement-operator.html":["&lt;&lt;","0;","15","16;","47",";","=","abov","addit","anoth","assign","below","break","brief","c++","clear","clearli","click","code","code.#includ","complet","content","cover.","debug.it","decrement","decremented.","dive","do","each","engin","examin","fact","get","give","hack","hold","https://github.com/mytechnotalent/revers","init","int","lesson","let'","load","main(void)","main+68","main+72.w","more","mynewnumb","mynumb","noth","number","oper","operator.","operatorfor","origin","output","part","pleas","post","r1","re","return","see","simpl","std::cout","std::endl;","tabl","terminal.let'","topic","tutoriallet'","valu","value.next","variabl","veri","week","{","}","–"],"pages/part-48-debugging-post-decrement-operator.html":["&lt;&lt;","0;","15.","16;","48",";","=","addit","again","along","arm","below","better","bidding.","binary.i","bite","brief","chang","click","code.#includ","come","complet","conclud","content","continu","cover.","debug","debug.a","decrement","each","engin","execut","framework","give","grasp","hack!onc","here","hope","https://github.com/mytechnotalent/revers","int","interfac","journey!","last","lesson","let'","main(void)","main+68","manipul","mynewnumb","mynumb","onc","oper","operatorfor","part","pleas","post","processor","processor.","program","r1","return","review","see","seri","series.","size","solid","std::cout","std::endl;","tabl","thank","topic","tutoriallet'","understand","valu","week'","{","}","–"],"pages/part-49-hacking-post-decrement-operator.html":["\"the","(with","49","actual","addit","ai,","alon","archiv","arm","ask","assembl","assembly.","base","basic","below","better","brief","caus","charg","chip","chipset.","click","cloud","complet","comput","condit","content","course.","cover.","cyber","cyber.","decim","decrement","deep","devic","dive","do.","do.und","dove","down","drones,","each","educ","engag","engin","engineering?just","even","everyth","exceptions).","ey","few","forc","free","give","go","goe","hack","harm","here","https://github.com/mytechnotalent/revers","idea","impact","in!","includ","infrastructur","intent","iot","kind","languag","last","latest","learn","lesson","level.for","linkedin","live","mani","matter","microprocessor","minut","more","natur","networks,","notion","number","onc","only!let'","open","oper","operatorfor","opportun","part","peopl","phone,","pleas","possibl","post","privaci","profile.understand","public","publish","purpos","rare","realli","responsible!","revers","review","revolution\".thi","run","scienc","security.everyth","see","seri","server","simpli","skill","smart","support","system","system.today","tabl","tablet","take","time","today","topic","true","tutori","tutoriali","understand","up","us","varieti","veri","want","week","wonder","work","x64","x86","year","–"],"pages/part-1-the-cyber-revolution.html":["0.","1","addit","appli","architectur","architectures.next","attach","audienc","basic","below","binari","boolean","bootabl","brief","build","chang","charg","charge.","chip.aft","click","close","combin","complet","complex","complic","comput","concept","conduct","content","control","core","cours","cover.","cyber","deeper","deliber","discuss","dive","down","draw","each","electr","electrod","end","engin","entir","faucet","few","flow","gate","give","go","grasp","hexadecim","high","https://github.com/mytechnotalent/revers","introduct","journey","keep","kitchen","lack","largest","later","lesson","level","level.","logic","made","make","manipulated.","materi","material.","minut","modern","more","need","noth","number","off.","open","oper","part","pleas","possibl","processor","program","properli","quit","realli","relay","repres","resist","revolut","revolutionfor","semiconductor","semiconductor.","short","similar.quit","simpl","simpli","spend","start","stick","such","switch","system","system.","tabl","take","think","time","time.i","topic","touch","transistor","transistor.","tri","turn","tutorialto","two","understand","up","us","veri","water","week","wire","wire.","works.","–"],"pages/part-2-transistors.html":["0","0.","0.\"the","1","1.","1.the","2","addit","amount","and,","anoth","assembl","basic","below","below.in","binari","binary,","both","brief","briefli","build","built","charge.","click","code","combin","complet","complex","comput","concept","content","core","cover.","each","engin","engineer.stay","engineering?","equal","etc","fals","false.","form","four","gate","give","go","here","https://github.com/mytechnotalent/revers","import","importantli","infinit","input","instruct","instructions.","it.th","last","leav","lesson","liter","logic","more","negat","ok","on","oper","or,","order","output","over","part","pick","pleas","possibl","practic","processor","repres","revers","see","sequences.let’","shortly!","show","simpl","simpli","singl","spend","spoke","start","such","system","tabl","take","this?","togeth","topic","transistor","transistorsfor","true","tuned!","tutori","tutorialin","two","ultim","understand","up","valu","veri","well...","why...\"","xor","xor,","year"],"pages/part-3-logic-gates.html":["(off","(on","+","+5v","0","0).","0,","0.","0.2)can","0.6)can","0.7)can","0.8)can","0.when","0101","0111","0:","0v","0v.we","0x","0x5f","1","1)","1,","10","1000","1101","1111","120","120:","128","15","16","2","2017,","24","24.4)can","24:","3","32","352","4","56","56.3)can","56:","64","8","8.5)can","80","850","8:","93","95","=","above,","addit","addition!","amaz","anoth","answer","applic","as:it","ask","assembl","assembly,","base","basic","below","better","binari","binary!","binary,","binary.1)can","binary.whi","bit","bits.","break","brief","byte","byte.befor","byte.therefor","c++,","c,","call","carri","check","click","code","column","combin","compar","complet","comput","consid","content","convert","core","core.","cover.","crap","creating,","debug","decim","decimal,","decimal.","decimal.ad","decimal.if","denot","digit","discuss","dive","down","each","each.","engin","equal","even","everyth","evolv","examin","exampl","expand","familiar","fit","follow","following.","following:therefor","framework","futur","gate","gatesfor","give","go","goe","good","grasp","grow.i","hack","hell","help","here?","hex","hex.","hex.fin","hex.to","hex.“whi","hexadecimal!next","hexadecimal.","highest","hit","https://github.com/mytechnotalent/revers","human","import","includ","inform","insid","instruct","interpret","it’","java,","javascript,","jvm","keep","languag","learn","length","length.to","lesson","let'","let’","liter","logic","look","machin","master","matter","me!”a","mean","memor","memori","mention","microprocessor","microprocessor.","mind","mind,","need","new","next","nibbl","no,","notat","number","oper","operates.if","opposit","order","part","place","pleas","possibl","process","processor","processor.wheth","python,","r,","re","realli","regist","rel","relev","remaind","repres","result","revers","row.","see","seri","seventeen.let’","simpl","simple.","simpli","singl","so,","sophist","stay","street,","subtract","such","suggest","system","system.","systems?","tabl","table.let'","take","talk","therefor","thousand","time","tool","topic","truli","tuned!","tutorialit","two","ultim","understand","us","util","valu","veri","vital","want","wast","week","within","work","yes,","–"],"pages/part-4-number-systems.html":["(1)","1","3rd","4","8","8th","addit","below","binari","bit","bit.","brief","carri","click","complet","content","cover.","cpu","cpu.let’","differ","discuss","dive","each","engin","examin","exampl","example:w","fashions:keep","flag","follow","four","gener","give","had:her","https://github.com/mytechnotalent/revers","import","keep","later","lesson","mean","mind","nibbl","number","number:if","obviou","occur","on","overflow.let","part","pleas","refer","see","simpli","stay","subtraction!","system","systemsfor","tabl","take","topic","trigger","true.","tuned!","tutorialbinari","tutorials.","understand.next","veri","week","within"],"pages/part-5-binary-addition.html":["(1)","+","0","1","1.let","1.let’","2.invert","2.we","4,","4.we","5","7","8","abov","ad","addit","additionfor","ask,","below","binari","bit","bit.","bits.add","brief","carri","click","complet","compliment","concept","content","cover.","direct","dive","each","engin","examin","exampl","final","flag","flag.next","four","futur","give","https://github.com/mytechnotalent/revers","indic","invert","lengths!","lesson","more","move","neg","negative.th","noth","number","operation:so","overflow","part","pleas","point","posit","refer","repres","sign","start","stay","subtract","subtracted.","tabl","topic","tuned!","tutori","tutorialbinari","two","util","valu","week","word","yield","zero"],"pages/part-6-binary-subtraction.html":["\"littl","0xaabb.","0xbbaa","128","16","2","32","4","6","64","8","addit","addresses.","architectur","architecture!","below","binari","bit","bits.","both","brief","byte","byte.","call","click","complet","concept","confusing.keep","content","cover.","defin","digit.next","disk","dive","doubl","each","endian,\"","engin","equival","exampl","final","gener","give","goe","good","hex","hope","https://github.com/mytechnotalent/revers","intel","lesson","let","lower","make","mean","memori","mind,","nibbl","on","part","pleas","processor","processor.in","provid","quadword","quit","refer","signific","simpl","stay","store","structur","subtract","subtractionfor","tabl","talk","topic","tuned!","tutorialbefor","up","value.","variou","visual","week","within","word","x64","x86,"],"pages/part-7-word-lengths.html":["\"r\",","\"x64\"","(rip","(these","(thi","128","16","32","64","7","8","80","add","addit","address","addressable.","ah,","amd","architectur","assembl","automat","ax,","backward","begin","behavior).th","below","bh,","bit","bit,","bits,","both","break","brief","bx,","byte","call","ch,","click","compat","complet","content","conventions!","cover.","cx,","dh,","directli","distinction.oper","dive","dx","each","eax","eight","eip,","engin","entir","esi,","exampl","extend","extens","flag","float","follow","gener","give","here","high","https://github.com/mytechnotalent/revers","ident","includ","increas","inform","instruct","intel64.","languag","legaci","length","lengthsfor","lesson","linkedin.th","lower","mmx","mode,","mode.","more","name","new","oper","operands.","operands.th","origin","out","output","overlap","part","platform.","pleas","point","pointer,","portion","previous","processor","provid","purpos","r15.the","r8","rax.","regist","register.","registers,","registers.","registers.)th","registers.eight","registers.th","registers:eight","respectively)","review","rflags,","right","set","sever","similar.x64","sixteen.next","specifi","sse","stay","still","subregist","tabl","term","through","topic","tuned!","tutori","tutorialth","type","us","week","well.th","whose","word","x64","x86","x86'","x86,","x87","zero"],"pages/part-8-general-architecture.html":["(@)","(in","8","__fastcal","__fastcall.","a,","addit","appli","architectur","architecture.th","architecturefor","argument","b","b,","below","boolean","breakdown","brief","byte","c","c,","call","case","click","complet","content","convent","cover.","cx,","d","d,","decimal)","dive","dword","dx,","e","each","ecx","edx","engin","exampl","first","five","follow","found","function","function,","gener","give","go","https://github.com/mytechnotalent/revers","illustrate:if","instructions!","int","left","left.cal","length,","lesson","list","names.no","names;","number","paramet","part","pass","performed.her","pleas","pop","possible.","prefix","processor","qword,","r8w,","r9w","rcx","rdx.","refer","registers,","registers;","right","sign","simpl","smaller","specifi","stack","stack.at","stack.next","stay","suffix","tabl","topic","translat","tuned!","tutorialth","two","us","week","word","x","x64","x86","y"],"pages/part-9-calling-conventions.html":["0","0,","0.and","0.ex:","0.or","0.xor","0ex:———————ex:","0not","0or","0xor","1","1,","1.ex:","1.not","1.or","1.xor","1next","9","=","addit","advantag","and,","becom","below","bit","boolean","brief","briefli","call","click","complet","content","convent","conventionsfor","cover.","discuss","dive","down","each","earlier","engin","ex:","ex:———————ex:","exist","first","four","gate","give","https://github.com/mytechnotalent/revers","import","individu","instruct","lesson","level.and","logic","metal.","not.","number","or,","part","pleas","pointers!","result","revers","same","second","see","stay","tabl","throughout","took","topic","tuned!","tutori","tutorialther","understand","week","xor"],"pages/part-10-boolean-instructions.html":["0x10","0x10,","0x10.","0x10in","0x20","0x20.","0x66","0x66.thi","0x66thi","10","[rax]","[rax],","addit","address","address!","apparent.","array","assum","becom","below","boolean","brief","click","code","come","complet","confus","contain","content","cover.","derefer","dive","do:mov","each","effect","engin","exampl","example:mov","exist","flat","follow","give","hex","https://github.com/mytechnotalent/revers","insid","instruct","instructionsfor","know","larg","lesson","let’","load","locat","memori","memory.","model","month","more","move","new","next","noth","on","over","part","pleas","point","pointer","processor.","ptr","put","rax","rax,","rax.w","rbx,","rbx.if","regist","register.to","specif","stay","syntax:mov","tabl","take","therefor","topic","tuned!","tutorialx64","us","util","valu","week","within","word"],"pages/part-11-pointers.html":["0x20","11","16","2","[rax],","abov","actual","add","addit","address","addressable.","assembl","assum","below","binari","bit","boundari","brief","byte","bytes.","c++,","click","code","complet","content","cover.","data","dive","each","effect","engin","ensur","error.","example:lea","execut","find","forward","free","give","given","happen.next","hood","https://github.com/mytechnotalent/revers","increment","instruct","length","lesson","load","memori","memory.","move","my_var","my_varinc","my_varthi","non","on","os","part","place","pleas","pointer","pointersfor","ptr","ram","rax","rax,","raxmov","rbx,","rbx.","rbxlet’","result","same","see","segment","segment!","singl","someth","space","stay","tabl","thing.in","topic","tuned!","tutorialwhen","under","unmap","user","valu","variable.","week","word"],"pages/part-12-load-effective-address.html":["1","12","16","2","32","4","8","addit","address","addressfor","advanc","against","alloc","array","ask","assign","basic","below","binary.","bits.2)word","brief","build","byte","click","code","comment","complet","concept","content","cover.","cpu","critic","data","db","db,","dd","dd,","dive","doubl","down","down.","dq","dq,","dw","dw,","each","effect","engin","entir","float","following:1)real4","follows:1)byt","function","give","global","go","grow","heap","heap.th","high","hold","https://github.com/mytechnotalent/revers","known","last","length.3)doubl","lesson","load","local","long.2)real8","long.4)quad","long.5)xmm","long.6)ymm","long.fin","long.ther","lower","math","memori","more","multidimension","notat","number","obvious","oper","part","pleas","point","program.","question","regist","see","segment","separ","seri","shl!","singl","size","sse","stack","start","stay","system.next","tabl","think","throughout","topic","tuned!","tutorialth","understand","up.","us","var","variabl","veri","week","within","word","xmmword","ymmword","ymmword.w"],"pages/part-13-the-data-segment.html":["0001010100010101therefor","01010101b","13","2.","8","addit","al","al,","assum","be:10100000next","below","binari","bit","brief","click","command","complet","content","cover.","data","dive","each","engin","give","hold","https://github.com/mytechnotalent/revers","instruct","left.","left.let’","lesson","let’","move","new","part","pleas","regist","see","segment","segmentfor","shift","shl","shr!","stand","stay","tabl","topic","transpir","tuned!","tutorialth","two","valu","value.","week"],"pages/part-14-shl-instruction.html":["00010100","0001010000000101next","00010100b","14","2.","8","addit","al","al,","assum","below","binari","bit","brief","click","command","complet","content","cover.","dive","each","engin","give","hold","https://github.com/mytechnotalent/revers","instruct","instructionfor","left.","lesson","let’","move","part","pleas","regist","right.let’","rol!","see","shift","shl","shr","stand","stay","tabl","topic","transpir","tuned!","tutorialth","two","valu","value.","week"],"pages/part-15-shr-instruction.html":["00000001b.","00000010b","1","10b.you","15","abov","above.next","addit","al","becom","below","below.w","binari","bit","bit.th","brief","by:nasm","click","command","compil","complet","content","cover.","debugg","demonstr","dive","each","elf64","engin","exampl","f","first","give","goe","here","https://github.com/mytechnotalent/revers","instruct","instructionfor","left","left.in","lesson","link","linux","logic","machin","mov","o","part","pleas","remain","represent","rol","ror!","rotat","same","see","shr","simpl","simpli","stand","start","stay","tabl","test","test.asmld","test.o","test.ow","topic","tuned!","tutorialth","ubuntu","valu","week","well.","x64"],"pages/part-16-rol-instruction.html":["00000001b.","1","10000000b","10000000b.next","16","abov","addit","al","basics!","becom","below","below.w","binari","bit","bit.th","boot","brief","by:nasm","click","command","compil","complet","content","cover.","debugg","demonstr","dive","each","elf64","engin","exampl","f","first","give","goe","here","https://github.com/mytechnotalent/revers","instruct","instructionfor","lesson","link","linux","machin","mov","o","part","pleas","represent","right","right.in","rol","ror","rotat","sector","see","simpl","simpli","stand","start","stay","tabl","test","test.asmld","test.o","test.ow","topic","tuned!","tutorialth","ubuntu","valu","week","x64"],"pages/part-17-ror-instruction.html":["(hex)","0","0x200","16","17","512","addit","basic","below","bio","bios.next","bit","boot","bootstrap","brief","byte","choose.at","click","compat","complet","comput","content","convert","core","cover.","decimal.th","discuss","each","emul","emulator.","engin","exactli","few","first","focu","full","give","go","goe","hd","here","https://github.com/mytechnotalent/revers","immedi","input","instal","instruct","instructionfor","io","iso","lesson","load","loader","loader.","media","mode.","modern","more","next","older","oper","os","os.when","output","part","physic","pleas","processor","processors.","qemu","read","refer","ror","sector","sector.","sophist","switch","system","tabl","topic","tutori","tutorialov","uefi","ultim","us","veri","virtualbox","week","write","x86"],"pages/part-18-boot-sector-basics-part-1.html":["'esc'","'i'","'wq'","(a","16/","17/in","18","1]","1]for","4","[part","abov","above.thi","activ","ad","addit","addition","along","alot","applic","apt","assembl","assembly.","assum","back","basic","basics.next","below","below.","below.https://www.linkedin.com/pulse/assembl","better","bin","binari","binary.","bio","bit","boot","bootsector.asm.","both","brief","browser.https://www.linkedin.com/pulse/assembl","build","byte","byte).","bytes.","call","click","code","code.","codes.","command","compil","complet","content","copi","cover","cover.","creat","data","dataset","desktop","disk","down","each","eb","eb.","editor","editor.","effort","emb","end","endian","engin","examin","fe","file","file.","file.th","file.w","find","fire","first","focu","follow","following:rememb","full","futur","get","ghex","give","go","half","hex","https://github.com/mytechnotalent/revers","identifi","inc","increment","infinit","inform","insert","instal","instruct","integr","intel","itself","itself.","jmp","jump","keep","kevin","label","languag","lectures.w","lesson","letter","line","link","linux","liter","littl","look","loop","m","mac.","magic","make","malwar","mind","mode","more","more.","nasm","nasmnasm","need","new","nibbl","noth","number","one.","opcod","opcodes.","open","oper","order","os","page","part","past","pleas","prior","process","processor","provid","raw","read","real","reason","refer","referenc","repres","revers","review","run","save","sector","sector.","see","set","sever","simpl","simpli","stage","stand","start","step","such","suggest","syntax.","tabl","take","termin","terminal.","text","thoma","thousand","through","topic","translat","trigger","tutori","tutorialw","two","type","type:sudo","ubuntu","ultim","understand","up","upon","us","value.next","values.","vim","vim.","virtualbox","volumes:http://ref.x86asm.net/coder64.htmllet'","walk","week","well","window","within","works.if","world","x64"],"pages/part-19-boot-sector-basics-part-2.html":["1","10.","16.next","19","2","2]","2]for","3rd","[part","ad","add","addit","aim","along","apt","assembl","aw","azur","base","basic","below","better","binari","boot","brief","byte","call","click","cloud","cloud.th","code","code.","compile.","complet","content","correspond","cover.","data","debugg","decim","develop","each","eb","editor.","engin","ensur","examin","familiar","fe","follow","futur","gdb.","ghex","give","gnu","go","happen","hardwar","help","hex","hexadecim","https://github.com/mytechnotalent/revers","inc","inspection.","instal","instructions.","jmp","keep","last","learn","lecture.","lesson","line","linux","littl","loads.let'","look","machin","major","mani","match","nano.last","nasm","nasm.let'","next","notic","number","opcod","oper","os","part","piec","pleas","power","process","progress","re","read","rememb","review.","saw","sector","see","seem","series.","servic","sever","signific","slow","slowli","sourc","sudo","system","systems.","systems.let'","tabl","thorough","those","today","topic","tradit","tutorialfor","tutorials.w","type","ubuntu","unclear","understand","upon","us","util","valu","vast","veri","vim","week","weeks/month","well","x64"],"pages/part-20-boot-sector-basics-part-3.html":["0","1","11101011","20","3]","3]for","[part","abov","above.","add","addit","ascii","basic","basics.","below","better","binari","binary.homework:","boot","brief","characters.","characters.next","click","code","code:w","compile.let'","complet","concept.","content","continu","convers","correspond","cover.","down","each","eb","editor.clos","engin","everyth","examin","give","go","goe","googl","hex","https://github.com/mytechnotalent/revers","lesson","let'","letter","letter.","level.","next","now","number","numbers,","origin","part","pleas","proof","repres","research","review","sector","see","seen","select","seri","stay","string","tabl","take","those","topic","tuned!","tutorialtoday","ultim","understand","valu","week"],"pages/part-21-boot-sector-basics-part-4.html":[".bin",".iso","0","0'","0xaa55","200h","21","4]","4]for","512","55","7","[part","aa","aa.","above.","accomplish","ad","addit","algorithm","anticipated.","attempt","basic","begin","below","binari","binary.a","boot","boot.","brief","build","byte","chose","click","code","code.","complet","content","cover.","cpu","creat","critic","each","easili","editor.a","either.w","emul","end","endian","engin","examin","file","find","format.","give","goe","hex","https://github.com/mytechnotalent/revers","identifi","it'","it.w","launch","lazi","left","lesson","let'","line","liter","littl","look","magic","mani","map","more","new","noth","now","number","oper","order.","out","pad","part","pleas","port","processor","qemu","refer","remain","remaind","rememb","revers","sector","sector.","see","set","signatur","simpl","simpli","stay","subtract","success","system","system.","tabl","this.next","today","topic","tuned.","tutorialw","understand","up","us","veri","virtualbox","vmware","week","zeros."],"pages/part-22-boot-sector-basics-part-5.html":["(if","200h","22","5]","5]for","[part","abov","addit","address","architectures.next","basic","below","binary.y","boot","brief","byte","click","complet","content","cover.","create.it","detail","differ","discuss","each","emul","engin","exactli","first","focu","following.","give","https://github.com/mytechnotalent/revers","infinit","interest","jump","keep","last","lecture)","lesson","lessons.","look","loop","make","medium","memori","mind","new","noth","obtain","on","os","os.","os.typ","part","place","pleas","previou","process","qemu","review","sector","see","sens","set","signatur","simpl","simpli","specif","spoke","stack","successful.if","systems.run","tabl","topic","tutorialthi","up","us","week","within","x86"],"pages/part-23-boot-sector-basics-part-6.html":["(note:","0x7e00.","23","6]","6]for","=","[part","addit","alloc","area","base","basic","befor","below","bio","boot","boot.","boot.7)0xc0000","bootabl","bootload","bootsector.1)0x0","brief","buffer","call","click","code","complet","connect","content","cover.","creat","critic","data","develop","devic","device.3)0x7c00","discuss","disk","doing).4)0x7e00","each","engin","exist","exist.2)0x400","extend","file","firmwar","free","give","here","hold","https://github.com/mytechnotalent/revers","in.5)0x9fc00","in.thi","interrupt","laid","lesson","load","machin","map","memori","memory.","need","next","offici","os","out","part","pleas","point.","ram","rememb","resides.8)0x100000","run","sector","set","simpl","simpli","space","stack","state","store","system","tabl","topic","track","tutorialw","understand","up","variabl","vector","veri","video","yet.6)0xa0000"],"pages/part-24-boot-sector-basics-part-7.html":["0","0x30","0x39","0x7c00.","24","32","64","640x200","7]","7]for","9","9.","[part","absolut","accept","addit","address","allow","anyth","area","ascii","assembly.let","base","basic","basics.let'","befor","below","bit","boot","bridg","brief","call","charact","click","code","code:th","compil","complet","comput","concept","consol","console.","console:a","content","control","cover.","creat","critic","custom","detail","digit","discuss","do","each","editor.","engin","enter","examin","final","first","function","give","go","greyscal","here","hex","high","https://github.com/mytechnotalent/revers","identifi","input","instal","last","lesson","level","liter","mini","mode","mode.next","move","noth","numer","os","os.","part","piec","pleas","pointer","pointer.w","program","put","qemu","realli","review","run","run:w","sector","see","seri","set","show","simpli","stack","tabl","thing","time","together.","topic","tri","tutori","tutorials.tak","tutorialtoday","two","type","understand","up,","user","valu","video","week","write","yourself."],"pages/part-25-boot-sector-basics-part-8.html":["0","0xffffffffffffffff.thi","16","19","2","20","25","32","4","64","8]","8]for","[part","access","access.thi","actual","ad","addit","address","allow","alon","architectur","architectures,","assembl","assembly.","base","basic","below","bit","bits.long","block","boot","bridg","brief","briefli","byte","c++","click","code","combin","complet","comput","contain","content","control","cover.","descriptor","dive","each","earli","enabl","engin","enter","execut","explain","extend","extern","fact","familiar","far","final","follow","gdt","give","global","high","https://github.com/mytechnotalent/revers","information.","jump","lesson","level","line","line,","line.","long","memori","mode","mode.when","modern","month","need","number","offset","paging.i","part","pleas","point","power","process","processor","protect","refer","regist","revers","sector","segment","set","sever","shift","space","start","tabl","take","talk","through","took","topic","touch","tutori","tutorialbefor","understand","veri","want","week","work","x64"],"pages/part-26-boot-sector-basics-part-9.html":[".data",".text","10","16","26","60","64","9]","9]for","[part","_start","actual","addit","architecture.","back","basic","basics.","begin","below","bit","block.","block:w","boot","break","brief","case","click","code","comfort","compil","complet","content","cover.","creat","data","debug","debugg","decim","declar","each","eax","empty.th","engin","entri","exampl","exit","few","form","forward.now","gdb.the","gdb:let'","give","global","go","grasp","hard","hex","hold","https://github.com/mytechnotalent/revers","intel","intern","last","leav","lesson","let'","link:let'","lower","main.w","moment","move","next","oper","os.let'","over","part","piec","pleas","point","processor","program","rax","register.","registers.w","return","routin","section","sector","see","set","sever","simpl","simpli","spend","start","start:a","step","stores.","string","successfully.w","syntax","syscall.","tabl","topic","tutorialtoday","until","us","valu","veri","view","week","workings.","x64"],"pages/part-27-x64-assembly-part-1.html":["0x05","0x10","0x15","1]","1]for","21","27","[part","ad","addit","anoth","assembl","below","brief","carefulli","click","code","compil","complet","content","continu","cover.","debug.w","decim","disassemble.a","each","engin","exampl","example:a","expect","forward.","give","go","https://github.com/mytechnotalent/revers","lesson","let'","move","part","pleas","rax","rax.","rax.w","see","simpl","step","tabl","take","then...w","time","topic","tri","tutoriallet'","twice","veri","x64"],"pages/part-28-x64-assembly-part-2.html":["0x10","0xb","11","16","28","2]","2]for","5","[part","addit","assembl","below","brief","c++","click","code","code:let'","compil","complet","content","continu","cover.","debug","debugger:let'","decim","disassemble:a","each","eax","engin","examin","exampl","example.","expected.","futur","give","grasp","happen","hex","https://github.com/mytechnotalent/revers","import","instruction.w","lesson","let'","load","look","next","part","pleas","rax.a","result","run","see","simpl","sourc","start","step","subtract","tabl","topic","tri","tutori","tutorials.","tutorialtoday","twice","valu","veri","x64"],"pages/part-29-x64-assembly-part-3.html":["\"hello",".data","29","3]","3]for","[part","add","addit","assembl","assembly.w","below","below:a","brief","call","charact","click","code","compil","complet","content","cover.","creat","debug","each","echo","end","engin","gdb.","give","https://github.com/mytechnotalent/revers","interrupt","lesson","next","os'","out","output","part","perform","pleas","program","return","run","section","see","simpl","simple,","simpli","spit","standard","statement.","string","tabl","terminal.","terminal.w","topic","tutorialtoday","util","vector","week","world!\"","world\"","write","x64"],"pages/part-30-x64-assembly-part-4.html":["\"hello","&","'e'","'h'","(0",".text","0x48","0x65.","1","13","2","30","328","4","4]","4]for","64","8","=","[part","_start","a:.data","aaron","abov","actual","addit","address","again","allocation.text","argument","ascii","assembl","associ","base","basic","befor","below","below.","binari","bit","both","brief","byte","call","carefulli","case","charact","click","code","code.","code:let'","codein","comment","comments,","compil","complet","confus","consist","content","correspond","cover.","creat","critic","data","data.next","debug","debugger.","declar","definitions.bss","depend","describ","determin","differ","digit","digits.","discuss","each","editor","engin","entri","error","error).","exampl","exercis","file.it","final","find","firmli","firmwar","first","function","gdb.","give","global","googl","here.w","hex","hold","https://github.com/mytechnotalent/revers","id","illustrate.in","illustrate:pleas","import","input","inputs.","interrupt","keep","kernel","kernel.","key","label","last","lectur","lecture'","lectures.aaron","length","lesson","let'","linker","linux","list","load","locat","long.","longer","look","map","memori","memory.","mind","moment","more","move","nibbl","noth","number","on!in","oper","os","otherwis","out","output","part","pleas","point","practic","prior","program","rax","rdi","rdx.","realli","regist","registers.","registers:ther","replac","repres","request","respect","review","rsi","run:a","same","second","section","section.","see","seek","servic","set","show","simpl","slice","someth","specif","standard","string","successfulli","successfully.in","such","sys_exit","sys_exit.","sys_writ","syscal","syscall.","system","system.","tabl","table:in","take","takeaway","tell","temporari","text","there.","third","three","throw","time","topic","touch","tradit","tutorialthi","two","understand","upon","us","value.a","values.","variabl","vector","veri","vs","want","week","week'","works.","world\"","write","x64"],"pages/part-31-x64-assembly-part-5.html":["\"hello","0x6000d8.a","31","5]","5]for","[part","addit","address","assembl","below","bit","brief","charact","click","closer.","code.compile...debug...let'","complet","content","cover.","each","engin","evalu","examin","give","https://github.com/mytechnotalent/revers","insid","lesson","memori","move","part","pleas","register.next","return","review","rsi","see","tabl","topic","tutoriallet'","week","world\"","x64"],"pages/part-32-x64-assembly-part-6.html":["0x6000d8","32","6]","6]for",":)...here","[part","addit","address.","aforement","again","alter","and/or","assembl","attack","be","befor","below","binari","bit","brief","byte","career","char","click","code.let'","command","compile...a","complet","content","continu","cover.","debug","debugg","defend","demonstr","done","each","engin","environment.th","exampl","fun","function","give","gui","hack","help","hopefulli","https://github.com/mytechnotalent/revers","infrastructur","instructions.","it'","length","lesson","level.","line","look","memori","memory.","memory.w","more","motiv","move","need","new","now","operation.","part","pleas","power","produc","profession","provid","purpos","re'","real","redefin","revers","review","rsi.fin","rsi.just","run","see","seen","set","show","simpl","simpli","sourc","string","string.a","string.w","successfulli","such.","tabl","through","throughout","time.","tool","topic","toward","truli","tutori","tutoriallet'","understand","us","veri","verifi","world","x64"],"pages/part-33-x64-assembly-part-7.html":["\"hello","1","2","2.","33","7]","7]for","[part","addit","along.let'","applianc","approach","assembl","assembly.","below","break","brief","c++","click","code","come","compil","complet","content","cover.","creat","debug","debugg","down","download","each","echo","end","engin","examin","exampl","example:her","follow","forward","function","give","go","hand","https://github.com/mytechnotalent/revers","introduc","kali","language.","learn","lesson","let'","librari","line","link:let'","linux","look","main","major","malwar","month","new","output","over","part","pleas","radar","re","re.w","real","run","see","simpl","simpli","start","stream","successfulli","tabl","terminal.","terminal.next","terminal:a","text","through","topic","true","tutorialtoday","us","vast","virtualbox","walk","week","world\"","written","x64"],"pages/part-34-x64-c++-1-code-part-1.html":["'aaa'","'hello","'pdf'","'r2","'s","./1'","0x10","0x2005","1","16","1]","1]for","2","2.","34","[part","addit","addition,","address","analyz","anoth","assembl","back","base","basic","befor","begin","below","below.let'","binari","binary.","binary.ok,","binary.w","break","brief","byte","c++","call","choice.","clearli","click","code","code:compile:run:for","command","complet","content","cout","cover.","critic","debugg","decid","decim","disassembl","display","down.","each","encourag","engin","entri","examin","featur","first,","forward.w","free","gdb","give","go","hack","hard","here","here.","hex","highli","https://github.com/mytechnotalent/revers","imag","instal","introduc","iot","kali","keep","lesson","let'","librari","linux","liter","location:next","lot","main","make","memori","mode","modifi","more","move","much","next","none","onto","open","output","part","pleas","point.","pointer","prior","prologu","push","qword","radar","rbp","reason","refer","regist","reserv","review","robust","room","routin","rsp","run","safe","see","seek","sens","seri","series.","server","set.","simpli","stack","stack.","stay","still","stream","string","string.if","struggl","sym.main'","system","tabl","termin","terminal.let'","topic","tune","tutori","tutoriallet'","type","understand","up","us","valu","verifi","version","vim","virtualbox","vm","w","week","week!","well.ther","windows.i","world.","world\\n'","write","x64","year"],"pages/part-35-x64-c++-2-debug-part-2.html":["'aaa'","'hello","'pdf'","'r2","'s","./1'","0x10","0x2005","0x2005!boom!","16","2","2]","2]for","35","@","[part","abov","addit","address","against","analyz","assembl","back","base","basic","befor","begin","below","binari","binary!","binary.","binary.let'","binary.next","binary.ok,","binary.w","break","brief","byte","c","c++","call","clearli","click","code:compile:run:let'","command","compar","complet","content","continu","cout","cover.","critic","debug","decim","disassembl","display","down.","each","elementari","engin","engineering.","entri","examin","first,","forward.w","give","go","hack","hack!let'","here.","hex","https://github.com/mytechnotalent/revers","insid","journey","keep","lesson","let'","level","librari","like:now","line","location:now","lot","main","make","memori","mode","modifi","move","none","now","onto","open","output","part","pleas","point.","pointer","prologu","push","quit","qword","radar","rbp","refer","regist","rememb","reserv","revers","review","room","routin","rsp","safe","see","seek","sens","seri","simpli","someth","stack","stack.","step","stream","string","string.if","such.,a","sym.main'","tabl","terminal.let'","time","topic","tutori","tutoriallet'","type","understand","up","us","valu","veri","verifi","w","week","world\\n'","write","x64"],"pages/part-36-x64-c++-3-hacking-part-3.html":["\"hello","\"i","3","36","3]","3]for","[part","addit","agil","allow","basic","becom","begin","below","between","binari","brief","busi","c","c#","c++","c.","c.like","church","click","come","compil","complet","content","control","cours","cover.","cyber","design","details.\"","develop","differ","digit","each","einstein","engin","environ","environment.","environments.in","existence.when","father","first","focu","give","go","god'","hack","https://github.com/mytechnotalent/revers","java","know","languag","language.think","languages.","lesson","logic","master","masteri","modern","month","necessari","need","next","nonetheless","now","on","over","part","partial","pleas","portabl","prior","program","program.","python","rapid","religion","rememb","rest","revers","root","secular","server","sever","sit","spawn","systems!","tabl","teach","term","thoughts,","today'","topic","total","tutori","tutorialcongrat","us","varieti","want","web","word","work","world\"","wrote,","x64"],"pages/part-38-x64-networking-basics.html":["0100010100100100101010","010101000101001011","0x22","0x222323123,","0x45","0x90","38","abov","abstract","actual","addit","and/or","assembl","away","basic","basicsfor","below","binari","brief","c","click","code","commun","complet","comput","construct","content","cover.","creat","data.with","digit","each","easili","engin","etc...next","existence.c","first","give","grandfath","hardware.","hex","https://github.com/mytechnotalent/revers","instruct","languag","language,","lesson","level","machin","mani","modern","more","more...a","mov","network","part","pleas","program","program!","rax,","real","seri","server","small","tabl","topic","translat","tutorialso...","understand?","x64"],"pages/part-39-why-c?.html":["'hello","(sinc","0.let","0x2004","39","aaa","addit","address","address.let","again","along.3)w","alot","alter","analyz","analyze:assembly!","anyth","arlington,","ask","assembl","back","base","basic","befor","below","binari","binary.thi","brief","c","c++","c?","c?for","call","char","chose","clean","click","code","command","comment","compil","complet","confirm","confus","content","continu","continue!","cover.","creat","critic","current","debug","debugg","definit","destroy","detail","digest","directli","disk).to","domain.let","each","earlier","easi","eax","echo","effect","engin","enough.4)w","examin","exampl","exit","far","fire","follow","following.","function","give","hack","happen","hell!","help.","here","here.","hous","house!success!","https://github.com/mytechnotalent/revers","includ","int","integ","it'","it.","know","lea","lesson","let'","librari","live","load","look","main","map","masteri","mean","memori","mess","now","ok,","onto","optim","origin","out","over","part","pleas","please!","please.w","pointer","pop","pretti","previou","printf","program,","push","put","quad","question","qword","radare:thi","raw","rbp","rbp.","rdi","rdi,","re","regist","register.","return","review","review.1)w","run:a","s","same","see","see:w","seek","seri","sexy!i","simpl","simple,","singl","stack.2)w","standard","stdio","step","str.hello_world","string","stump","successfulli","successfully.let'","sym.imp.put","sym.main.let'","tabl","technic","terminal.","thing","time","topic","tutorialok","type","um","understand","up","us","va","valu","vim","w","wait!","want","well","went","word","world!'","write"],"pages/part-40-hacking-hello-world!.html":["'a'","'a'.","'b'.","0x0000113d","0x1],","0x61","0x61.","0x62","3","40","[local1_h]","[local1_h],","[rbp","a,","above.","above.let","actual","addit","address","alloc","ascii","b","base","basic","below","below.","binari","binary:a","brief","byte","c","c.","char","charact","clearli","click","code","comment","comments!","compil","complet","content","cover.","creat","data","debugg","declar","defin","disassembl","done","doubl","double.","each","engin","examin","examples:let'","exercis","exit","explor","fact","few","forward","give","go","hack","happen?","hello","hood","hopefulli","https://github.com/mytechnotalent/revers","import","instruct","int","integ","know","knowledg","lesson","load","local_10h","local_1h","local_8h","look","lowercas","main:ok","make","map","me!within","memori","mov","nice","now","onto","order","out","part","pleas","pointer","portion.w","pseudo","push","put","quit","radar","radare:let'","rbp","re","real","realiti","realli","result","revers","run","run:ok","section","see","sens","seri","sever","show","shown","simpl","simple,","simpli","someth","space","stack","stay","successfulli","tabl","therefore,","think","time!","top","top.ok","topic","tutorialin","type","under","up","us","valu","value.homework","variabl","variables.","veri","want","world!","world!for","you.now"],"pages/part-41-hacking-variables!.html":["\"a","(we","0x00001144","0x00001148","0x0000114a","0x00001158","0x1158.","0x4.","1","1!\".when","41","actual","addit","aqua","around","arrows.","assembly:w","be","below","binari","branch","brief","click","cmp","code","color","compar","comparison","compile:let'","complet","confus","content","cover.","detail","each","engin","equal","equal.","exit","first","give","hack","https://github.com/mytechnotalent/revers","init","int","je","jne","jump","know","last","lesson","lesson.to","let'","load","local_4h","logic","logic:a","look","make","mean","note","now","output.let'","over","part","plainli","pleas","print","pseudo","radar","rbp","rdi.","rdi.th","respons","revisit","run:a","second","see","sens","simpli","standard","statement","successfully:stay","tabl","take","taken.","topic","tuned!","tutoriallet'","variabl","variables!","variables!for","week","went"],"pages/part-42-hacking-branches!.html":["(thi","3","42","6.we","777.we","add","addit","address","address.","address:rememb","anoth","arm","array:let'","basic","below","binary:w","branches!","branches!for","brief","clearli","click","compil","compile:w","complet","content","cover.","critic","debug:then","defer","disassemble:let'","do","each","end","enemi","engin","equal","examin","exampl","example.a","example:w","examples).let'","experi","final","following:then","give","go","good","hack","hack!let'","hack.i","hand","hope","https://github.com/mytechnotalent/revers","hundr","infrastructur","knowledg","lesson","let'","liter","live","look","lottery_numb","made","malici","map","memori","more","more:w","new","noth","over","part","pleas","point","pointer","pointers.what","pointers?","protect","radar","re","road.","run","same","see","series.","start","success","tabl","through","topic","true","tutori","tutorialw","understand","unlik","unmap","valu","value:let","variables.","video","way:let","work!","works.","x64","x86,","year"],"pages/part-43-hacking-pointers!.html":["2,000","43","64","64.in","_arm64whi","addit","anoth","approach","architectur","arm","assembl","attack","autom","basic","below","brief","c++","c++?","catastroph","click","complet","comprehens","content","cours","cover.","crippl","day","develop","each","engin","environment.","environment.ther","execut","facet","few","full","fundament","further","give","go","hack","https://github.com/mytechnotalent/hacking_c","languag","learn","lesson","level","level.","low","next","over","part","pass","pleas","pointers!","pointers!for","primarili","profession","python","ransomwar","relat","revers","roughli","see","seri","set","societi","step","tabl","take","topic","truli","understand","up","veri","way.thi","wide","world"],"pages/part-2-development-setup.html":["0x01_asm64_helloworld","0x01_asm64_helloworld.cpp","2","_arm64today","addit","advanc","begin","beginn","below","binari","brief","buffer.let'","build","c++","click","compil","complet","content","cours","cover.","creat","debug","deliber","dev","develop","each","end","file","flush","follow","friendli","give","go","https://github.com/mytechnotalent/hacking_c","insert","int","intend","it.#includ","know","lesson","let'","line","link.g++","liter","main()","make","manipul","more","next","noth","number","o","oper","output","part","pleas","possible.in","program","radare2.","realli","result.hello","run../0x01_asm64_helloworld","see","send","setup","setupfor","short","simpl","simple.","start","std::cout","stdout","stream","string","tabl","take","topic","type","us","veri","want","world!","{"],"pages/part-3-\"hello-world\".html":["\"hello","'e'","'h'.","(59575)","(aslr)","(ios,","./0x01_asm_64_helloworld","0","00.it","0x55629ca9e4","0x55629cab48","0x55629cab48.w","0xb48.","16","2001.","3","4","48","64","65","8","@0x55629cab48","[0x55629ca9e4]>","[0x7fb146cb8c]>","_arm64today","abov","addit","address","advantag","again","against","alsr.address","analysi","analysis.[0x55629ca9e4]>","analyze.aaa","android,","arm","ascii","aslr","assembl","at.let'","at:","attack","attacks.","auto","back","basic","begin","below","better","between","binari","binary.","bit","break","breakpoint","brief","buffer","build","byte","byte.","capit","case","char","check","click","code","code.let'","column","complet","conclud","consol","content","continu","cover.","current","data","db","dc","debug","defin","dev","differ","digit","discuss","disk","disk.radare2","do","each","encourag","end","entri","examin","execut","exist","exit","expand","extrapol","fact","featur","feature.aaa","feed","few","find","fire","first","follow","following.q","following.v","form","forth.","function","give","go","h.obvious","hack","half","hand","handle,","hello","help","hex","hex.","hex.i","hit","hope","https://github.com/mytechnotalent/hacking_c","hypothesis.","imag","implement","import","initi","instanc","instruct","junk","key","later.do","layout","lesson","lesson.","lessons.to","let'","letter","level.px","linux)","logic","long","look","lsb","machin","macos,","main","main.","main.[0x55629ca9e4]>","major","malici","map","mapped.","memori","mine?","mode","much","need","new","next","nibbl","notic","now","offset","onlin","open","oper","out","overflow","overflow,","part","payload.w","perfectli","pleas","point","prepar","primarili","print","process","process.ood","program","properly.in","protect","protection.aslr","ps","radare2","radare2'","radare2.if","radare2.q","radare2.radare2","ran","random","raw","refer","rerun","resid","rest","result","result.let","revers","right","run","same","secur","see","seek","seri","simpli","singl","space","start","status=0x0","stdout.[0x55629ca9e4]>","step","string","system","systems,","tab","tabl","table.second,","take","techniqu","thing","things.","time","to.","togeth","topic","translat","true","understand","unmap","unmapped.","up","upcom","us","util","valid","valu","value.","veri","verifi","version","view","view.notic","view.rememb","view.v","visit","want","wide","window","windows,","work","world!","world!\"","world!\".","world!\".let'","world\"","world\"for","y","yourself"],"pages/part-4-debugging-\"hello-world\".html":["\"hello","./0x01_asm_64_helloworld","0xb48","4","@0xb48","[0x000009e4]>","_arm64in","addit","address","again!./0x01_asm_64_helloworld","analyze.aaa","anticip","attack","auto","back","below","better","binari","binary.","brief","click","complet","content","cover.","creat","deal","debug","disassembly.v","discuss","disk","each","easi","easili","engineer.in","expand","find","fire","give","go","good","groundwork","hack","hack.[0x000009e4]>","hack.let'","hello","help","https://github.com/mytechnotalent/hacking_c","i/o.","imag","insid","laid","last","learn","lesson","lesson.w","let'","main","main.","memori","mode.radare2","new","next","now","open","part","pleas","ps","quit","radare2","radare2.q","realli","revers","right","run","see","seek","simpl","spent","string.[0x000009e4]>","string.let'","tab","tabl","termin","time","topic","understand","up","veri","verifi","view","view.q","view.w","w","work","workflow","world","world!","world\"","world\"for","write"],"pages/part-5-hacking-\"hello-world\".html":["\"","\";","\"dude","\"enter","\"hello","\"your","&amp;&amp;","&gt;&gt;","&gt;=","&lt;&lt;","&lt;=","'\\0';","'abc'","'hey","(!(i","(!valid)","(i","//","0)","0.","0;","0x02_asm64_basicio","0x02_asm64_basicio.cpp","1","100","2","5",";","=",">>","_arm64today","above.","addit","advantag","ag","again","age)","age.","age:","allow","anoth","appropri","assign","associ","attempt","basic","befor","below","binari","bool","brief","buffer.if","build","c++","call","can't","chained.th","char","check","cin","cin,","cin.","click","compil","complet","connect","content","cout.let'","cover.","creat","criteria.fin","data","debug","defin","depend","describ","dev","dude","each","echo","emphas","enter","enter,","equal","everyth","exampl","example:std::cin","explain","extract","fail","false;","far","first","flush","full","function","getline()","getline(std::cin,","give","given","globe.th","go","goe","greater","hack","happen","here.in","hit","https://github.com/mytechnotalent/hacking_c","i/o","ignored.th","import","includ","init","input","input.#includ","instead","int","integ","integer?","iostream,","is(line);","is.get(null))","issue.","itself","jude'","keep","keyboard","leav","lectur","legit!\"","less","lesson","let'","librari","line","line);","line;","link.g++","littl","long","look","main()","make","manipul","mean","meet","minim","more","never","never!let'","newlin","next","noth","null","number","number,","o","object","object.then","old","old,","out","part","pick","pleas","point","press","problem","program","prompt","properly.w","provid","put","radare2.","raw","read","read,","real!\"","realli","refer","remain","respons","return","right","run../0x02_asm64_basicio","see","seem","short","short,","simpl","simpli","sourc","space","sstream","standard","start","state","std::cin","std::cout","std::endl;","std::string","std::stringstream","std::w","stdin.what","stdout","straight","stream","stream,","stream.","string","string.","stringstream","sure","tab","tabl","take","termin","textbook","topic","tri","tricky.w","true","type","understand","unreliable.i","up","us","user","val1","val1;","val2","val2;","valid","validation.","validation.befor","veri","want","well","white","whitespac","whitespace,","wind","world\"","world\"for","year","{","||","}"],"pages/part-6-basic-io.html":["\"","\"dude","\"enter","\"you","(2215)","./0x02_asm_64_basicio","0x5566be00c4","0x5566be00cc","0x5566be017c","0x5566be01d0","0x5566be0214","0x5566be0218","0x5566be0238","0x5566be0244","33","6","[0x5566be0194]>","[ok]","[ol]","_arm64today","addit","advantag","age:","analysi","around.let'","arrow","at:","auto","back","basic","begin","below","binari","binary.","binary.[0x5566be0194]>","bne","breakpoint","brief","call","captur","click","code","complet","condit","content","continu","correct","coupl","cover.","cycl","db","dc","debug","disk","do","each","enter","entri","examin","exit","expand","failur","feature.aaa","find","fire","following.v","following:p","following:thi","function","function.","function:then","give","go","graph","graph.","graph.q","hack","hit","https://github.com/mytechnotalent/hacking_c","i/o","i/ofor","identifi","imag","initi","input","insid","instanc","istream","key","last","lecture.to","legit!","legit!\".th","lesson","let'","liter","logic","look","loop","machin","main","main.qq","map","mode","move","new","next","note","notic","now","ol","old,","open","out","output","part","pleas","point","ppppp","process","process.ood","program","proper","radare2'","radare2.radare2","raw","real!\"","result","return.in","right","rout","run","s","see","seek","seem","seri","set","start","status=0x0","stdin","step","stream","string","success","such","tab","tabl","tag","take","thing","topic","type","up","us","valid","validation.","valu","veri","view.a","visual","vv","want","year","zoom"],"pages/part-7-debugging-basic-io.html":["(b.eq","./0x02_asm_64_basicio","0","0x000010c4","0x1214","0x1214)","100","4","7","800a0054","=","[0x000010c4]>","_arm64today","accept","accomplish","addit","alon","analyze.aaa","anything.in","arriv","assembl","assign","auto","b.eq","b.ne","back","basic","befor","begin","below","between","binari","block.w","branch","brief","byte(s)","case","chang","char","click","code","combin","complet","condit","content","correct","cover.","data","debug","demonstr","desir","disabl","disassembly.v","discuss","discussed.[0x000010c4]>","dure","each","engin","equal.","equal.let'","even","exampl","expand","expect","fail","fals","fire","first","flow.","follow","follows:y","function","give","graph","green","hack","hack.[0x000010a4]>","hack.thes","happen","here","https://github.com/mytechnotalent/hacking_c","i/o","i/ofor","ignor","imag","input","input:let'","instruct","integ","kali@kali:~/documents/0x02_asm_64_basicio$","know","last","leav","lecture.th","legit!","lesson","lesson.","let'","line","liter","look","main","main.","matter","mean","mode.radare2","need","new","next","normal","now","obtain","old,","on","open","part","perman","pleas","point.kali@kali:~/documents/0x02_asm_64_basicio$","primit","program","progress","prompt.qq","proper","properli","q","quit.q","radare2","regist","revers","right","run","s","see","seek","seem","sent","simpl","simpli","statement","tab","tabl","tact.w","termin","though","topic","true","true,","type.","under","unstabl","up","valid","valu","veri","view","view.if","view.let'","view.q","visual","w","wa","want","write","written","wx","year"],"pages/part-8-hacking-basic-io.html":["&lt;&lt;","'c';","0;","0x03_asm64_char_primitive_datatyp","0x03_asm64_char_primitive_datatype.cpp","8","=","_arm64today","addit","assign","basic","below","brief","c","c++","c.we","call","char","charact","click","compil","complet","content","cover.","creat","datayp","debug","each","echo","example.","example.#includ","extrem","first","following.c","give","go","hack","https://github.com/mytechnotalent/hacking_c","i/o","i/ofor","int","lesson","let'","link.g++","look","main()","more.let'","my_char","next","noth","o","part","pleas","primitive.","print","quotes.let'","return","run../0x03_asm64_char_primitive_datatyp","see","simpl","simple.","simpli","singl","std::cout","std::endl;","stdout","stdout.","store","successfulli","surround","tabl","talk","termin","topic","us","variabl","veri","week","{","}"],"pages/part-9-character-primitive-datatype.html":["'c'","(10845)","./0x03_asm64_char_primitive_datatyp","0x00000001","0x00000063","0x01.","0x5576bff9ec","0x63","0x63.if","9","[0x5576bff9e4]>","[0x5576bff9ec]>","[0x7f9727503c]>","_arm64today","addit","advantag","again","analysi","anoth","ascii","at:","auto","begin","below","binari","binary.","break","breakpoint","brief","c","char","charact","choice.","click","code","complet","contain","content","contents.[0x5576bff9e4]>","continued.","cover.","datatyp","datatype.to","datatypefor","db","dc","debug","disk","do","down.","dr","ds","each","echo","entri","examin","exit","expand","expected.[0x5576bff9ec]>","fact","feature.aaa","fire","following.v","give","go","hack","hit","https://github.com/mytechnotalent/hacking_c","imag","initi","insid","instanc","lesson","let'","logic","look","machin","main","map","mode","move","new","next","now","onc","open","part","pleas","point","primit","process","process.ood","program","radare2'","radare2.radare2","raw","regist","register.let'","right","run","saw","see","seek","set","simpl","status=0x0","stdout","step","successfulli","tab","tabl","take","thing","topic","up","valu","veri","verifi","view.w","w0","want"],"pages/part-10-debugging-character-primitive-datatype.html":["(movz","./0x03_asm64_char_primitive_datatyp","0x000009ec","0x66","0x66)","10","4","=","@","[0x000009e4]>","_arm64today","addit","analyze.aaa","assembl","auto","back","below","binari","binary!","boolean","brief","build","byte(s)","c00c8052","char","charact","choosing.[0x000009e4]>","click","complet","content","cover.","datatyp","datatype.","datatypefor","debug","disassembly.v","each","expand","f","fire","give","hack","https://github.com/mytechnotalent/hacking_c","imag","kali@kali:~/documents/0x03_asm64_char_primitive_datatype$","last","lesson","lesson.let'","let'","main","main.","mode.radare2","movz","new","next","open","part","perman","pleas","primit","q","quit","radare2","real","right","run","see","seek","seri","set!in","skill","specifi","success","successfulli","tab","tabl","take","termin","terminal.[0x000009e4]>","togeth","topic","trivial","up","veri","view","view.let'","view.q","w","w0,","wa","work","write","written","wx"]},"length":155},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"docs":{},"b":{"docs":{},".":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}},"docs":{}},"1":{"0":{"docs":{},"b":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.024096385542168676}}},"1":{"0":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"1":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}},"b":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}}}},"1":{"0":{"0":{"0":{"1":{"0":{"1":{"0":{"1":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.01680672268907563},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}}}}}}},"docs":{}},"1":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}},":":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}}}}}}}}}},"1":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}},"a":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.025936599423631124}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"i":{"docs":{},"t":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"i":{"docs":{},"f":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}},"1":{"0":{"0":{"0":{"1":{"0":{"1":{"0":{"0":{"1":{"0":{"0":{"1":{"0":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"1":{"0":{"1":{"0":{"0":{"0":{"1":{"0":{"1":{"0":{"0":{"1":{"0":{"1":{"1":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}},"b":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995}}},"docs":{}},"1":{"0":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}},"1":{"0":{"0":{"0":{"0":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.022429906542056073},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.010101010101010102},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.03816793893129771},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02912621359223301},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.011135857461024499},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.18450184501845018},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.01809954751131222}},")":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.02214022140221402}}},".":{"2":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"6":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"7":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"8":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.01107011070110701}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}},"e":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}},"x":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}},"1":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"4":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}},"8":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}},"docs":{},"c":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}},"6":{"3":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"docs":{}},"docs":{}},"9":{"docs":{},"e":{"docs":{},"c":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}}}}},"docs":{}},"1":{"0":{"0":{"0":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"docs":{}},"docs":{},"c":{"4":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}},"docs":{}}},"1":{"3":{"docs":{},"d":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709}}}},"4":{"4":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}},"8":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}},"docs":{},"a":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"5":{"8":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},".":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}},"2":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"5":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}},"8":{"0":{"4":{"8":{"0":{"9":{"2":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}},"docs":{}},"docs":{},"b":{"1":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}},"docs":{}},"d":{"docs":{},"d":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}},"4":{"3":{"docs":{},"b":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916}}},"1":{"0":{"7":{"3":{"0":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667}},".":{"docs":{},"a":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334}}}}},"docs":{}},"5":{"0":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904}}},"docs":{}},"docs":{}},"8":{"4":{"8":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}},"docs":{}},"docs":{}},"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.030534351145038167},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}}}},".":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}},"a":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}},",":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}},"i":{"docs":{},"n":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}},"1":{"5":{"8":{"docs":{},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"docs":{}},"docs":{}},"2":{"1":{"4":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},")":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},"docs":{}},"docs":{}},"5":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}},"6":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}},"9":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666}}},"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}},"i":{"docs":{},"n":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}},"]":{"docs":{},",":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473}}}}},"2":{"0":{"0":{"4":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356}}},"5":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581}},"!":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"!":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}}}},"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}},"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.022900763358778626},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818}},".":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}},"2":{"2":{"3":{"2":{"3":{"1":{"2":{"3":{"docs":{},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.024691358024691357}}},"docs":{}},"3":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}},"9":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}},"docs":{}},"4":{"3":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}},"5":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}},"8":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"docs":{},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"5":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}},"w":{"docs":{},"e":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}}},"3":{"9":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}},"docs":{}},"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}}},"docs":{}}},"docs":{},"b":{"4":{"8":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},".":{"docs":{},"w":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"6":{"docs":{},"b":{"docs":{},"e":{"0":{"0":{"docs":{},"c":{"4":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.01818181818181818}}},"docs":{},"c":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"1":{"7":{"docs":{},"c":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}},"docs":{},"d":{"0":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"docs":{}}},"2":{"1":{"4":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"8":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"docs":{}},"3":{"8":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"docs":{}},"4":{"4":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"7":{"6":{"docs":{},"b":{"docs":{},"f":{"docs":{},"f":{"9":{"docs":{},"e":{"docs":{},"c":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.024844720496894408}}}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}}}},"6":{"0":{"0":{"0":{"docs":{},"d":{"8":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},".":{"docs":{},"a":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}}}}},"docs":{}}},"docs":{}},"docs":{}},"1":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"2":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"3":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},".":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}},"4":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02}}},"5":{"docs":{},".":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"6":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"m":{"docs":{},"!":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}},")":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},"8":{"0":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"8":{"3":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{},"e":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521}}}},"7":{"3":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"3":{"docs":{},"a":{"0":{"docs":{},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}},"docs":{}}},"docs":{}}}}},"8":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}},"docs":{},"e":{"0":{"0":{"docs":{},".":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"2":{"3":{"0":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}},"docs":{}},"docs":{}},"3":{"9":{"docs":{},"c":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}},"docs":{},"a":{"0":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}},"docs":{}}},"docs":{}}}}},"c":{"0":{"0":{"docs":{},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}},"docs":{}},"docs":{}}},"8":{"0":{"0":{"0":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"1":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"2":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"3":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"4":{"9":{"0":{"9":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196}}},"docs":{},"e":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}},"docs":{},"a":{"2":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},".":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"docs":{}},"9":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}},"docs":{}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"f":{"7":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"3":{"docs":{},"d":{"docs":{},"c":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}},"docs":{}}}}},"docs":{},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285}},"f":{"docs":{},"f":{"docs":{},"d":{"0":{"3":{"0":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"docs":{}},"4":{"0":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007}},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},"docs":{}},"5":{"0":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"docs":{}},"docs":{}},"docs":{}},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}},".":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"a":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"a":{"5":{"5":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}},"docs":{}},"docs":{},"b":{"docs":{},"b":{"docs":{},".":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}},"e":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"f":{"docs":{},"f":{"docs":{},"f":{"3":{"9":{"docs":{},"c":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},"docs":{}},"docs":{}}}},"a":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"b":{"4":{"8":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"docs":{}},"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}},"b":{"docs":{},"a":{"docs":{},"a":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}},"]":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"a":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"b":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"n":{"docs":{},"c":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995}}},"v":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},".":{"docs":{},"w":{"docs":{},"e":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}},";":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}},"e":{"docs":{},"x":{"docs":{},":":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.01107011070110701}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}},"'":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}},"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"b":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.012048192771084338},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022727272727272728},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.022935779816513763},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.031914893617021274},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}}},"1":{"0":{"3":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}},"i":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}},"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}},"2":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},"8":{"3":{"5":{"5":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.014953271028037384},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0273972602739726},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.01694915254237288},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.5093457943925235},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.515267175572519},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6756756756756754}},")":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}}}}}},"(":{"2":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0026385224274406}}},"b":{"docs":{},".":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304}}}}}}}},"1":{"0":{"0":{"0":{"1":{"0":{"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"1":{"0":{"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}},"1":{"0":{"1":{"0":{"1":{"1":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"1":{"0":{"0":{"0":{"0":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}},"docs":{}},"9":{"docs":{},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}}}}},"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6697626418988647},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.003095975232198},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":3.3424242424242423},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.5034246575342465}}}},"2":{"0":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}}},".":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}},"8":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.011627906976744},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.005813953488372}},":":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0038022813688214}}},"]":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806}}}},"3":{"3":{"7":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.01694915254237288}},".":{"0":{"9":{"9":{"9":{"8":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},";":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}},"7":{"7":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806}},";":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.507936507936508},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.5172413793103448},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"c":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.506802721088435}}}},"4":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":3.340182648401826},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.502645502645503},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.517857142857143}},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":3.335425383542538}}}},"5":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.509009009009009},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.003831417624521},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.510869565217391}},":":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":3.3347417840375586}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}}}}}}},".":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}}}}}},"6":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.020560747663551402},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.026385224274406333},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.010101010101010102},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.50990099009901},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005952380952381},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.03636363636363636},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.028985507246376812},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.027972027972027972},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5121951219512195},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"0":{"0":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}},":":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":3.337482710926694}}},"^":{"0":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"1":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"docs":{}},";":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}},"/":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"7":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.0022522522522523},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":3.3405275779376495},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":3.3397435897435894},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.5084745762711864}},".":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}}},"e":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}},"'":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},"8":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.003846153846154},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.004016064257028},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0140845070422535},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4319047619047618}}},"9":{"2":{"1":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"8":{"1":{"docs":{},"!":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564}}},".":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564}}}},"docs":{}},"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.503610108303249},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.004201680672269},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0128205128205128},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.43431855500821},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.014953271028037384},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2554127198917455},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.253921568627451},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2566666666666666},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.006802721088435},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.05343511450381679},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.023809523809523808},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.433179723502304},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0118343195266273},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.026143790849673203},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.015590200445434299},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.16605166051660517},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.043478260869565216},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.04878048780487805},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2548076923076923},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.02962962962962963},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}},":":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":3.3386809269162208}}},")":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"(":{"2":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}}},".":{"2":{"docs":{},"g":{"docs":{},"h":{"docs":{},"z":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}},"i":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}},"’":{"docs":{"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}},"e":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007}}}},"x":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007}}}}}},",":{"0":{"2":{"4":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.02214022140221402}}},"s":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},"]":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4285714285714284},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.6666666666666665},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.25}},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"b":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"c":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"e":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}}},"!":{"docs":{},"\"":{"docs":{},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}}}}}},"2":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"docs":{},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"h":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}},"1":{"7":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},".":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564}},"w":{"docs":{},"e":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}},";":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}},"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}},"?":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.0028818443804033},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.507575757575758},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.00561797752809},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4386724386724385},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.031446540880503145}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}},"1":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.503030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0045871559633026},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6746666666666665},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4351503759398494},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"2":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2540595399188093},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.00531914893617},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68075117370892},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4388807069219438}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"3":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.253921568627451},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.511627906976744},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.0097087378640777},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4360341151385925}}},"4":{"0":{"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2566666666666666},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.00990099009901},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6790123456790123},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4348214285714285}},".":{"4":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"docs":{}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"5":{"5":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}}}},"6":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"f":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1202854230377166},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0068965517241377},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6796536796536794},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.434860736747529}},".":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}},"6":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.007751937984496},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.435238095238095}}},"7":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6741293532338306},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.6836158192090394}}},"8":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0142857142857142},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.02158273381294964},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.02100840336134454},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.68},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6803652968036529}},":":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"9":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.02158273381294964},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.02100840336134454},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.0081967213114753},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.681159420289855}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.024299065420560748},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1202854230377166},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.506060606060606},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.4285714285714284},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":3.3398692810457513},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.02727272727272727},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2658730158730158},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.5106382978723403},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}},":":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":3.3393574297188753}}},".":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"w":{"docs":{},"e":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}}}},",":{"0":{"0":{"0":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}},"docs":{}},"docs":{}},"1":{"4":{"7":{"docs":{},",":{"4":{"8":{"3":{"docs":{},",":{"6":{"4":{"7":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}},"a":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018}}},"^":{"3":{"2":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"docs":{}},"8":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}},"docs":{}},"n":{"docs":{},"d":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}},"i":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"]":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.4285714285714284},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6666666666666665},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.25}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}},"3":{"0":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6695736434108526}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}},"1":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0078125},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6722532588454375},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6904761904761902}},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"a":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.012048192771084338},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.01680672268907563},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425}}}},"2":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"1":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346}}},"docs":{}},"8":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.020512820512820513},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010554089709762533},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0136986301369863},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023255813953488372},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.022388059701492536},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0104166666666665},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6740740740740738}}},"3":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.675287356321839},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6759259259259258},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909}}},"4":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2561349693251533},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675438596491228},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2548076923076923}}},"5":{"2":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2546296296296295},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010752688172043},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2552910052910053}}},"6":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2565359477124183},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2564102564102564}}},"7":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4314954051796156},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6723163841807909}}},"8":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4424603174603172},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.6760124610591898},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.0123456790123457}}},"9":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4417293233082704},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":3.3374655647382916}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0142857142857142},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.5076335877862594},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.502227171492205},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2564102564102564},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":2.5023201856148494}},":":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.50390625}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}},"r":{"docs":{},"d":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}},"x":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}},"]":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4285714285714284},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6666666666666665},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.25}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}},"4":{"0":{"9":{"6":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":3.345238095238095},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4342211460855527},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0049261083743843}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}},"1":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.6757575757575756},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.5074074074074075}}},"2":{"9":{"4":{"9":{"6":{"7":{"2":{"9":{"5":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.011214953271028037},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4358178053830226},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5078740157480315}},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"3":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4355644355644355},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.510752688172043}}},"4":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6776556776556775}}},"5":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4383753501400558}}},"6":{"docs":{"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4439560439560437}},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}},"7":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.676190476190476}}},"8":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4389880952380951},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}}},"9":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4341894060995182}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.011214953271028037},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.017921146953405017},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.0196078431372549},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.51},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03225806451612903},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.04225352112676056},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.04519774011299435},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5224719101123596},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":2.0076335877862594},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},":":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0034843205574915}}},",":{"2":{"9":{"4":{"docs":{},",":{"9":{"6":{"7":{"docs":{},",":{"2":{"9":{"5":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"6":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}},"g":{"docs":{},"b":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0136986301369863}}}},".":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}},"w":{"docs":{},"e":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}},"x":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"]":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4285714285714284},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6666666666666665}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},"5":{"0":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"1":{"1":{"1":{"1":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"docs":{}},"docs":{}},"2":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105}}},"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}},"3":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}},".":{"docs":{},"i":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}},"5":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105}}},"6":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},".":{"3":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"docs":{}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2561349693251533},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2546296296296295},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2696078431372548},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5076335877862594},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.51},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":2.0025839793281652}},":":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.0067567567567566}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"0":{"docs":{},".":{"2":{"4":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}},"docs":{}},"docs":{}}},"docs":{}},"]":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4285714285714284},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6666666666666665}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}}}}}}},"6":{"0":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}},"1":{"docs":{},",":{"4":{"4":{"0":{"1":{"3":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}},"docs":{}},"9":{"0":{"1":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"4":{"0":{"docs":{},"x":{"2":{"0":{"0":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.04608294930875576},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.025157232704402517},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"g":{"docs":{},"b":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}},"5":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"6":{"6":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667}},".":{"docs":{},"i":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}}}},"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}},"!":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}}}}},"7":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4314954051796156},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4424603174603172},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4417293233082704},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":3.336734693877551},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.5088495575221237},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5045454545454544}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0018691588785047},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}},"]":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4285714285714284},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6666666666666665}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}},".":{"docs":{},"w":{"docs":{},"e":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},"7":{"7":{"7":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.02702702702702703},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.031496062992125984},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667}},";":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124}}},".":{"docs":{},"w":{"docs":{},"e":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5065359477124183},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5046082949308754},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004524886877828}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},":":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.5036363636363634}}},".":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}}},"]":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4285714285714284},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6666666666666665}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}}},"8":{"0":{"0":{"0":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"docs":{},"a":{"0":{"0":{"5":{"4":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"4":{"8":{"3":{"docs":{},"d":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}},"docs":{}},"docs":{}},"8":{"0":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},"6":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"5":{"0":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4464925755248335},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.026385224274406333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":3.3390151515151514},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.013363028953229399},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.027649769585253458},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.5076335877862594},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01744186046511628},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.010869565217391}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"0":{"0":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"docs":{}},"5":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},"i":{"docs":{},"f":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}},"a":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}},":":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"t":{"docs":{},"h":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}},"]":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4285714285714284}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}},"9":{"3":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}}},"5":{"5":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"9":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.505050505050505},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.503690036900369},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.0062111801242235}},":":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.005128205128205}}},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}},"]":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4285714285714284}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}},"docs":{},"&":{"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}}}}}}},"m":{"docs":{},"p":{"docs":{},";":{"docs":{},"&":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.021505376344086023},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014492753623188406},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.013986013986013986},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.04395604395604396},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0392156862745098},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.06153846153846154},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.0380952380952381},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.041666666666666664},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.01808785529715762},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.021739130434782608}}}}}},"=":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}}}}}},"=":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},"a":{"2":{"4":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"docs":{}},"5":{"3":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"docs":{}},"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01025641025641},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.011627906976744},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.5},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0625}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}}},",":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}},"e":{"docs":{},"a":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}},"!":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}}}}},"v":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"a":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}},"m":{"docs":{"./":{"ref":"./","tf":0.125},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.675954592363261},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.027586206896551724},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.02304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.03225806451612903},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"e":{"docs":{},":":{"1":{"docs":{},")":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}},"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}},"a":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.022388059701492536},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.023255813953488372}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.026143790849673203},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"w":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}},"n":{"docs":{},"g":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"o":{"docs":{},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.015384615384615385},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"s":{"docs":{},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"i":{"docs":{},"v":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.008450704225352112},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.03816793893129771},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.01744186046511628}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014534883720930232},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}},"i":{"docs":{},"v":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}},"o":{"docs":{},"n":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0234375},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259}},".":{"docs":{},"d":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}}},"p":{"docs":{},"t":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}}}}}},"r":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}}}}}},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":3.3470319634703194},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.536036036036036},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.51980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":3.362110311750599},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.0120481927710845},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.0126050420168067},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.05303030303030303},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.031914893617021274},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"i":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.015625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.515267175572519},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.025974025974025976},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.51},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}},"!":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}},".":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.013192612137203167},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.008450704225352112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009472259810554804},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.280674846625767},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2731481481481481},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2565359477124183},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.025252525252525252},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.015479876160990712},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.015479876160990712},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.017857142857142856},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.022388059701492536},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.02727272727272727},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.011627906976744},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.018867924528301886},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.009280742459396751},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"t":{"docs":{},"h":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}},"i":{"docs":{},"n":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"!":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}},"t":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}}},"!":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}}}}}}},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.016901408450704224}}}}}}}},",":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}},"o":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}}},"s":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}}},"w":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}},"s":{"docs":{},".":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"e":{"docs":{},"!":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}}}}}}},"c":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}},"i":{"docs":{},"s":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}}}},"c":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.507575757575758},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0091743119266057},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.00531914893617}},".":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}},"o":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.024096385542168676},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"s":{"docs":{},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}},"[":{"0":{"docs":{},"x":{"5":{"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}},"z":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"!":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"u":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},",":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014492753623188406},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.013986013986013986},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"y":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}},",":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},",":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0278745644599305},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.5288808664259927},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.02727272727272727},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010825439783491205},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.02857142857142857},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0234375},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.016129032258064516},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.018867924528301886},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.6836158192090394},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6803652968036529},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.681159420289855},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6753875968992247},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6904761904761902},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6814814814814814},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6759259259259258},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"y":{"docs":{},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}},"x":{"8":{"6":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"docs":{}},"docs":{}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}}},"i":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}},"w":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},":":{"docs":{},"w":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014492753623188406},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.013986013986013986},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"u":{"docs":{},"m":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.034482758620689655},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.03571428571428571},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}},"k":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},",":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2540595399188093},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.253921568627451},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2566666666666666},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1202854230377166},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0142857142857142},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2561349693251533},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2546296296296295},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2565359477124183},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4314954051796156},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4424603174603172},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4417293233082704}}},":":{"0":{"docs":{},"x":{"3":{"docs":{},"a":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"docs":{}}},"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"g":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}},"p":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.016853932584269662},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.024},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"l":{"docs":{},"r":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"b":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}},"c":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}},"o":{"docs":{},"v":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.01126126126126126},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011527377521613832},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.015151515151515152},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.024539877300613498},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"y":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"w":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"a":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}},"!":{"docs":{},"“":{"docs":{},"i":{"docs":{},"’":{"docs":{},"m":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}},"u":{"docs":{},"t":{"docs":{},":":{"1":{"docs":{},")":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}},"docs":{}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}}},"g":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.01808785529715762}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.02702702702702703},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.01680672268907563},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},"s":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}},".":{"docs":{},"a":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}}}}}}}},"w":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}},":":{"docs":{},"w":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}},"!":{"docs":{},".":{"docs":{},"/":{"0":{"docs":{},"x":{"0":{"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"e":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},")":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},".":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},":":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909}}}},"i":{"docs":{},"l":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}},"o":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.024390243902439025}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.029045643153526972},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}}}}}}}},".":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"s":{"2":{"docs":{},")":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}},"docs":{}}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"g":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},".":{"3":{"docs":{},")":{"docs":{},"w":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}}}}},"t":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}}}},"s":{"docs":{},"r":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}},"a":{"docs":{},"z":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"o":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576}}}}}},"d":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.015625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"s":{"docs":{},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"h":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}},"&":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.015151515151515152},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},":":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"o":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"m":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"a":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},"c":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},".":{"docs":{},"t":{"docs":{},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},":":{"1":{"docs":{},")":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"2":{"docs":{},")":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"3":{"docs":{},")":{"docs":{},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}}}}}},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.016901408450704224},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"w":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"a":{"docs":{},"y":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}}}},"i":{"docs":{},",":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}},"m":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}},"a":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"a":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},":":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"b":{"8":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.007476635514018692},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.013937282229965157},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.007476635514018692},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.025089605734767026},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.020512820512820513},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.05013192612137203},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.010273972602739725},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.01882845188284519},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.01444043321299639},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.03669724770642202},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.020202020202020204},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.030534351145038167},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.03},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.030534351145038167},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.017045454545454544},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.015479876160990712},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.024096385542168676},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.01680672268907563},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.015479876160990712},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023255813953488372},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.022388059701492536},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.011135857461024499},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.0449438202247191},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.03},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.04424778761061947},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.07834101382488479},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.034482758620689655},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.03571428571428571},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03260869565217391},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.050314465408805034},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}},"t":{"docs":{},"h":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152}}},".":{"1":{"1":{"1":{"1":{"1":{"1":{"0":{"1":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"docs":{},")":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.035398230088495575}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}}},")":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}},".":{"docs":{},"a":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"e":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"n":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.0337837837837838},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.011214953271028037},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.01818181818181818},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.013888888888888888},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02631578947368421},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.026262626262626262},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.515267175572519},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.53},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.02100840336134454},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.026143790849673203},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.028953229398663696},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.53},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.5088495575221237},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.015873015873015872},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.01160092807424594},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"y":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}}},".":{"1":{"docs":{},")":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"w":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"h":{"docs":{},"i":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"i":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}}}}}},"i":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},":":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}}}}}}}}},"a":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}},"y":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}},"o":{"docs":{},"k":{"docs":{},",":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}},"[":{"0":{"docs":{},"x":{"5":{"5":{"6":{"6":{"docs":{},"b":{"docs":{},"e":{"0":{"1":{"9":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"!":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},":":{"docs":{},"a":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"w":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.03731343283582089}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}}},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0213903743315508},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0136986301369863},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.019230769230769232},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}},"d":{"docs":{},".":{"docs":{},"y":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"i":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01025641025641},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.025423728813559324},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4385714285714284},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.43431855500821},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4386724386724385},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4351503759398494},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4491899852724592},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4360341151385925},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4348214285714285},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4411500449236296},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.4419047619047618},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5090909090909093},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004524886877828},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.0217391304347827}},"s":{"docs":{},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}},"t":{"docs":{},"h":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}}},"!":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.014018691588785047},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"d":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}}},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"e":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"!":{"docs":{},"w":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}},"e":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.02054794520547945},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01675977653631285},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.02962962962962963}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"n":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{},"i":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.012121212121212121},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.034482758620689655},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.03571428571428571},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"a":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"t":{"docs":{},"h":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"i":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}},"n":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.026143790849673203}}}},"w":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}},"'":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"e":{"docs":{},"a":{"docs":{},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}},"’":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802}}}}}},"a":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1478083588175332},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}},":":{"1":{"0":{"1":{"0":{"0":{"0":{"0":{"0":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"b":{"8":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},"docs":{}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}},"q":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.027777777777777776},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.022598870056497175},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.018633540372670808}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"l":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}},"n":{"docs":{},"g":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"d":{"docs":{},"g":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},"?":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"3":{"docs":{},")":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}},"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.044444444444444446},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013574660633484163}},"e":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}}}}}}},"u":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.0196078431372549},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}},"i":{"docs":{},"f":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}},"i":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}},"o":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}}}},"y":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"x":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.009009009009009009}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}},"d":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}}}},"o":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6697626418988647},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.003095975232198},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.059322033898305086},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.435238095238095},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.4458128078817731},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4487734487734485},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4614661654135337},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4594992636229747},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4434968017057568},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4598214285714284},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.4411500449236296},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.435238095238095}},".":{"7":{"docs":{},")":{"0":{"docs":{},"x":{"docs":{},"c":{"0":{"0":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"1":{"docs":{},")":{"0":{"docs":{},"x":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}}},"docs":{}}},"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358}}}}}}},"l":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.0388349514563107},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.691358024691358},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6926406926406925},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5076335877862594},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}},"n":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.03942652329749104},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.013192612137203167},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01729106628242075},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.0196078431372549},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.035398230088495575},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.046511627906976744},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.02631578947368421},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}},".":{"0":{"1":{"0":{"1":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4321556579621093}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"w":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}},")":{"docs":{},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}}},":":{"docs":{},"a":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}}},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}}}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.020202020202020204}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}},"w":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},":":{"docs":{},"w":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}},"u":{"docs":{},"e":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.009009009009009009}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},")":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.011267605633802818}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}}},"’":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"e":{"docs":{},"q":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}}}},"n":{"docs":{},"e":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013574660633484163}}}}},"c":{"docs":{},"m":{"2":{"8":{"3":{"7":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"m":{"0":{"docs":{},"b":{"docs":{},"x":{"docs":{},"s":{"docs":{},"u":{"docs":{},"\"":{"docs":{},"/":{"docs":{},">":{"docs":{},"w":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}}}},"docs":{}},"n":{"docs":{},"e":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"c":{"0":{"0":{"docs":{},"c":{"8":{"0":{"5":{"2":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"2":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.02074688796680498},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.03205128205128205},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.037037037037037035},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"o":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414}},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}}}},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.01694915254237288},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"x":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}}},"u":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01953125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.014545454545454545},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009216589861751152},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}},"a":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}},"'":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},"y":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.521212121212121},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.018518518518518517},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.018518518518518517},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},":":{"docs":{},"a":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"w":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992}}}},",":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}}}},".":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.015384615384615385},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"s":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},":":{"docs":{},"j":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"i":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}},",":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"!":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}},"u":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02054794520547945},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.031700288184438},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.024242424242424242},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009472259810554804},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.02702702702702703},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.023622047244094488},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.025252525252525252},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0273972602739726},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.018518518518518517},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.03205128205128205},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.025974025974025976},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.01694915254237288},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.02631578947368421},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014534883720930232},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.027777777777777776},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2548076923076923},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.024691358024691357},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.019704433497536946},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.01160092807424594},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"!":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"w":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}}},"k":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}},"’":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}},"'":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"i":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}},"n":{"docs":{},"t":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}},":":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}},"w":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}},"t":{"docs":{},"h":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"i":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}},"n":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}},"p":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}}},"r":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":3.333333333333333}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}}}}}},"d":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0136986301369863},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"s":{"docs":{},",":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.017006802721088437},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.013227513227513227},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"2":{"0":{"1":{"2":{"docs":{},"/":{"0":{"2":{"docs":{},"/":{"docs":{},"b":{"docs":{},"c":{"docs":{},"m":{"2":{"8":{"3":{"5":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"[":{"0":{"docs":{},"x":{"5":{"5":{"7":{"6":{"docs":{},"b":{"docs":{},"f":{"docs":{},"f":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}},"x":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578}}}}}},"o":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.015209125475285171},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.561224489795918},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.02092050209205021},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.023255813953488372},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}},"i":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.023809523809523808},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.05128205128205128},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757}}}},"w":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}}}}}}}}}},"!":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}},"d":{"docs":{},".":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}}},"g":{"docs":{},"u":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.013363028953229399},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}},"s":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.5}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}},".":{"docs":{},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.01875}},"t":{"docs":{},"h":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}},":":{"docs":{},"a":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186}}}},"d":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"e":{"docs":{},"r":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}},"t":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.03125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.036036036036036036},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.03937007874015748},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":3.3589743589743586},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},"l":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},".":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}},"i":{"docs":{"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}}}},"a":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}},"w":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}},"s":{"docs":{},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}},".":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011527377521613832},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}}}}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"p":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}},"e":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}}}}},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"i":{"docs":{},"s":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}},"e":{"docs":{},".":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5065359477124183},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}},"!":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},".":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602}},"t":{"docs":{},"h":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}},")":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334}}},"'":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}},"p":{"docs":{},"l":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"g":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"l":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.015209125475285171},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.011267605633802818},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.013531799729364006},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.015873015873015872},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.503690036900369},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}}}}}}},",":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}}}}}}},"p":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"s":{"docs":{},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"'":{"docs":{},"t":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.061068702290076333},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.012048192771084338},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.01834862385321101},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.07865168539325842},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}},"y":{"docs":{},")":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}},"e":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}},"?":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"d":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"c":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}},"e":{"docs":{},"s":{"docs":{},"]":{"docs":{},"y":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}}}},"r":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.03260869565217391},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.044943820224719},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.7146666666666666},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68075117370892},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.021739130434782608},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.012422360248447},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6756756756756754}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}}},"]":{"0":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"docs":{},"l":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}}}}}}}}}}},"g":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}},"e":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"!":{"docs":{"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}}}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"e":{"docs":{},".":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}},"k":{"docs":{},"e":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}},"o":{"docs":{},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"e":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}},"a":{"docs":{},"t":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"s":{"docs":{},"e":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"c":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.06981981981981981},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013574660633484163},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}}}}},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"s":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"r":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}},".":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}}}}}},"n":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612}}}},"u":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"l":{"docs":{},"i":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.02702702702702703},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.023622047244094488},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.028169014084507043},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}},".":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}},"n":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}}},"r":{"0":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.009009009009009009},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.02727272727272727},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010582010582010581},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.021505376344086023},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014492753623188406},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.013986013986013986},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.037037037037037035},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"e":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}},",":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}},",":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}},"p":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"?":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}},"s":{"docs":{},"h":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}},"+":{"docs":{},"+":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.015873015873015872},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.037037037037037035},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2596153846153846},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2658730158730158},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2628205128205128},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}},".":{"docs":{},"#":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}}}},"?":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"e":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},"l":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}}},"p":{"docs":{},"u":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.041025641025641026},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01729106628242075},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}}}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}},"i":{"docs":{},"d":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"s":{"docs":{},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":3.356060606060606},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.029411764705882353},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.01834862385321101},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.02127659574468085}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}}}}},"!":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}}},"p":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}},"u":{"docs":{},"p":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.027210884353741496},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.038461538461538464}},"]":{"docs":{},"u":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}},"b":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.010273972602739725}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}},"s":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615}},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},".":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}},"y":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}},".":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}},"c":{"docs":{},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"y":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}},"f":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}},",":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.017543859649122806}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}}}}}}}}}}}},"b":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}},"n":{"docs":{},"a":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}},"b":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}},"g":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}},"l":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"z":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"z":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}},".":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}},"#":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}},".":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"w":{"docs":{},"e":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}},"?":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":3.333333333333333}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.018072289156626505},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.013824884792626729},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01532567049808429},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.037037037037037035},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.02564102564102564},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"i":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},"t":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},",":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}},"?":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}}}},"s":{"docs":{},"!":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}},",":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"i":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757}},"i":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}}}}}}}}}}}}},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"d":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},"?":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},",":{"docs":{},"\"":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}},"l":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"t":{"docs":{},"h":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"e":{"docs":{},"r":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}},".":{"4":{"docs":{},")":{"docs":{},"w":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"docs":{}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.007476635514018692},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014336917562724014},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.027522935779816515},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.01694915254237288},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.013605442176870748},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.02054794520547945},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.019801980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.02247191011235955},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.024},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.01744186046511628},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"i":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}}}}}}}},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}},"l":{"docs":{},"i":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"s":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},"e":{"docs":{},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346}}}},"l":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083}}},"y":{"docs":{},".":{"docs":{},"y":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}}},"a":{"docs":{},"v":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375}}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}},"w":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}}}},"i":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406}}}}},"@":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"d":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}},"o":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.0153846153846153},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}}}},"a":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}},"]":{"docs":{},":":{"docs":{},"q":{"docs":{},"!":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}},"u":{"docs":{},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.027522935779816515},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.028985507246376812},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.005813953488372},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.027777777777777776},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.03},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.024691358024691357},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.028169014084507043},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.022598870056497175},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.030303030303030304},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"s":{"docs":{},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022727272727272728},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.025974025974025976},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"1":{"0":{"docs":{},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"1":{"0":{"docs":{},"w":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909}}}},"docs":{}},"docs":{}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909}}}}}}},"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}}}},"2":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282}}}}}}},"3":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775}}}}}},"w":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}},"4":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}}}}}},"5":{"docs":{},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"5":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124}}}}}}}}}}},"docs":{}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124}}}}}}},"6":{"docs":{},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"6":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}}}}}}}}},"docs":{}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}}}}},"7":{"docs":{},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"7":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}}}}}}}}}},"docs":{}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}}}}}},"8":{"docs":{},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"8":{"docs":{},"w":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012}}}},"docs":{}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012}}}}}}},"9":{"docs":{},".":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"9":{"docs":{},"w":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}},"docs":{}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}}}}},"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},":":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}},"a":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}},"e":{"docs":{},"a":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818}}}}},"c":{"docs":{},"m":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}},"w":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},".":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"a":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"l":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.02564102564102564},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.021212121212121213},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009472259810554804},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.026143790849673203},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.023809523809523808},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.025974025974025976},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.009280742459396751}},"e":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}}}},"d":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}},",":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102}}}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},"w":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}},"o":{"docs":{},"o":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"!":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"s":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},".":{"2":{"docs":{},")":{"0":{"docs":{},"x":{"4":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"c":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}}}},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061}},"o":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061}}},"i":{"docs":{},"t":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}},"a":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.010273972602739725},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.018433179723502304},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}},"s":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152}}}},"r":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"p":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"d":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"d":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"4":{"docs":{},"e":{"1":{"2":{"docs":{},"a":{"docs":{},"q":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}}},"w":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}}}},"[":{"0":{"docs":{},"x":{"5":{"5":{"7":{"6":{"docs":{},"b":{"docs":{},"f":{"docs":{},"f":{"9":{"docs":{},"e":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"s":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},":":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.01107011070110701}},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}}},"b":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"u":{"docs":{},"l":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.030927835051546393}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}},".":{"2":{"docs":{},")":{"docs":{},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"docs":{},".":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4285714285714284}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}},"l":{"docs":{},"f":{"3":{"2":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"docs":{}},"6":{"4":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}},"docs":{}},"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}},"_":{"docs":{},"i":{"3":{"8":{"6":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"docs":{}},"docs":{}},"docs":{}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.03550295857988166}},"o":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"d":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},",":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},".":{"docs":{},"w":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}}}}}}}}}}}},"s":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}},"c":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}},"p":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},".":{"docs":{},"]":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}},"i":{"docs":{},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.017543859649122806},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.02962962962962963},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"p":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.034220532319391636},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}}}},"b":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061}},".":{"docs":{},"]":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}}},".":{"docs":{},"w":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}},"o":{"docs":{},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"c":{"docs":{},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0273972602739726},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.03389830508474576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285}}}}}},"w":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863}}}}},"h":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}},")":{"docs":{},".":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"y":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.04507042253521127},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03225806451612903},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.028037383177570093},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.01694915254237288},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.02727272727272727},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.021739130434782608},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02097902097902098},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.03296703296703297},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.029411764705882353},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.046153846153846156},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.0380952380952381},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.03125},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.05343511450381679},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"r":{"docs":{},"o":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"t":{"docs":{"./":{"ref":"./","tf":10},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}}}}}}},"e":{"docs":{},"l":{"6":{"4":{"docs":{},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"docs":{}},"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.017421602787456445},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.013888888888888888},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}},"n":{"docs":{},"d":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}},"t":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"r":{"docs":{},"n":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}},"e":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.016736401673640166},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.022388059701492536},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.046511627906977},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.7039800995024874},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6933333333333331},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}},"?":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},",":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012552301255230125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.03067484662576687},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"n":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"o":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.02702702702702703},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},"r":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}},"c":{"docs":{},"r":{"3":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"4":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"docs":{}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014336917562724014},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.035897435897435895},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0136986301369863},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0190114068441063},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.01444043321299639},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.031700288184438},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.008119079837618403},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.02046783625730994},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02631578947368421},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.6031746031746033},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.517857142857143},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.5},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.5},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},".":{"3":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}}},"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},"i":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"w":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}}}},"’":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"s":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"]":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4285714285714284},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4285714285714284},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4285714285714284}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}}},",":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}},"!":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.0337837837837838},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"u":{"docs":{},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.01616161616161616},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.017857142857142856},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.04},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.017817371937639197},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.05343511450381679},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.019230769230769232},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}}}}},"c":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"o":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.73208722741433},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4788858939802334},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4737691686844228},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.7393939393939393},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.486542443064182},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4775224775224773},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.023255813953488372},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.02262443438914027}},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},".":{"docs":{},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}}},".":{"5":{"docs":{},")":{"0":{"docs":{},"x":{"9":{"docs":{},"f":{"docs":{},"c":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{}}},"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}}}},"!":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"d":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},"i":{"docs":{},"f":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}},"a":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"a":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"?":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}},"l":{"docs":{},"i":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},"c":{"docs":{},"r":{"2":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"docs":{}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2540595399188093},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.261764705882353},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2566666666666666},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},"…":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"s":{"docs":{},"/":{"docs":{},"]":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}},"t":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}},"i":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}}},"w":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}}}}}},"'":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}},"!":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}},":":{"1":{"docs":{},")":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}},"docs":{}}},"p":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}},"w":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}}},"i":{"docs":{},"f":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},".":{"docs":{},"r":{"0":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},"docs":{}},"i":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"?":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02912621359223301},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}},"s":{"docs":{},"u":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},"e":{"docs":{},".":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"o":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}}},"/":{"docs":{},"o":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2}},".":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}},"a":{"3":{"2":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}},"docs":{}},"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"o":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010582010582010581}},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},"r":{"0":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.022727272727272728},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.019801980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862}},")":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}},".":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}},"’":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}},"w":{"docs":{},"e":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}}}}}}}},"1":{"0":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"1":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}},",":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}},"2":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306}}},"3":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374}}},"4":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}},",":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}},"5":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}},",":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}},"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.017045454545454544},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.0297029702970297},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.019801980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}},",":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}},".":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}}},"!":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}}}}}}}},"2":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.019801980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.020689655172413793},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}},"a":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}},",":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}},"3":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.04225352112676056},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.025974025974025976},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014492753623188406},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02097902097902098},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}},"(":{"1":{"0":{"0":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}},"a":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}}}},"4":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.013605442176870748},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374}}},"(":{"1":{"0":{"0":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}},"5":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}},".":{"docs":{},"w":{"docs":{},"e":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}},"!":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}},"6":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},"7":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.014018691588785047}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364}}}},"8":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},"w":{"docs":{},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}},"9":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},"w":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.125},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.018433179723502304},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01532567049808429},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.024691358024691357},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"&":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},".":{"1":{"docs":{},")":{"docs":{},"w":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}},"u":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.025423728813559324},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.018867924528301886},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"g":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0263852242744065},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.5547945205479454},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0190114068441063},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.568027210884354},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.016736401673640166},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.008450704225352112},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.03669724770642202},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":3.3741496598639453},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.0196078431372549},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.515151515151515},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.023255813953488372},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.019157088122605363},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.02459016393442623},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0273972602739726},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.027932960893854747},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.027649769585253458},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}},"e":{"docs":{},"r":{"docs":{},".":{"2":{"docs":{},")":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0158311345646438},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.010273972602739725},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"g":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}},"w":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}},"t":{"docs":{},"o":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}},"s":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"i":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}}}},")":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"w":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"]":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1111111111111112},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1111111111111112},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1111111111111112},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.25},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.25},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.25}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}}}},"!":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}},":":{"docs":{},"w":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},";":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}},")":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.04421768707482993},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}}}}},"!":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"d":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}}},")":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"!":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},"s":{"docs":{},".":{"8":{"docs":{},")":{"0":{"docs":{},"x":{"1":{"0":{"0":{"0":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012552301255230125},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.022727272727272728},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.04428044280442804},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"?":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}},"o":{"docs":{},"k":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204}}}}}},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"t":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"o":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.014545454545454545},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"y":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}},"i":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"!":{"docs":{},"\"":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616}}}}},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01440922190201729},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.03389830508474576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.015503875968992248}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},"e":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"t":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"a":{"docs":{},"p":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},",":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.026143790849673203},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023255813953488372},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.022388059701492536},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}},"s":{"docs":{},",":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"a":{"docs":{},"c":{"docs":{"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"l":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"a":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}}},"y":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"e":{"docs":{},"v":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015384615384615385},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.025252525252525252},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"s":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},"i":{"docs":{},"n":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"“":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}}},"'":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}},".":{"docs":{},"w":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125}}}}}},"m":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}},"a":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}},".":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}},"w":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"u":{"docs":{},"t":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"i":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},".":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}}}},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}},"l":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03260869565217391},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5121951219512195}},"e":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}},"!":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}}}},"m":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}},"r":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.024390243902439025},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.5084745762711864}},"!":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.043478260869565216},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.036585365853658534}}}}}},"u":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.015209125475285171},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.01444043321299639},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"t":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}},"e":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}}}}}},":":{"docs":{},"w":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}},"a":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}},"o":{"docs":{},"k":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}},".":{"docs":{},".":{"docs":{},"/":{"0":{"docs":{},"x":{"0":{"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"2":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"l":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.024390243902439025},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}}}}},"s":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009216589861751152}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"a":{"docs":{},"n":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"g":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},",":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}}}},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"m":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}},",":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}}}}},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.014423076923076924},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"e":{"2":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"i":{"docs":{},"f":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"q":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"2":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"docs":{}}}}}}}},"'":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}},"docs":{},":":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}},"i":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"i":{"docs":{},"s":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}},"c":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"r":{"docs":{},"e":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"x":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.030534351145038167},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}},"w":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}},"a":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}}}},",":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}},"a":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}},":":{"docs":{},"a":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"s":{"docs":{},"b":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}},"s":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}},"c":{"docs":{},".":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"s":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}},"i":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}}}},"p":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}},"f":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}},"c":{"docs":{},"x":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"d":{"docs":{},"x":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"i":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},",":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},"t":{"docs":{},"h":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}}},"b":{"docs":{},"x":{"docs":{},",":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}},".":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818}},"i":{"docs":{},"f":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}}},"p":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},".":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.015209125475285171},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02631578947368421},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}},"i":{"docs":{},"r":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}}},"i":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"o":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"o":{"docs":{},"n":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}},"i":{"docs":{},"f":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}},"w":{"docs":{"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}}},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}},"’":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}},"'":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}},"t":{"docs":{},"h":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}}}}},"a":{"docs":{},"k":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}},"i":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"w":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}},"y":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}}}}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}}}}}}}}},"o":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}},".":{"docs":{},".":{"docs":{},".":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"f":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"t":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},",":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}},"a":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"r":{"docs":{},"m":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}},"d":{"docs":{},"d":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}},"c":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"v":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}},"k":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"w":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"h":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"e":{"docs":{},"n":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"’":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"x":{"6":{"4":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"n":{"docs":{},"e":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"d":{"docs":{},"!":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}},"a":{"docs":{},"b":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.022388059701492536},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.028985507246376812},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}},"i":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},".":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}},"'":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}}},"t":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"s":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},".":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"i":{"docs":{},"f":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}},"k":{"docs":{},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.020689655172413793},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.011135857461024499},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.022222222222222223},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},".":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},"t":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}},"l":{"docs":{},"k":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}},"g":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":3.3393574297188753},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}},"c":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}},".":{"docs":{},"c":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}}}},"o":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}},"w":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"l":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"i":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.009009009009009009},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"t":{"docs":{},"o":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"h":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}},"'":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}},"w":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}},"a":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}},"!":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"’":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}}}}}},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.026923076923077},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}},"l":{"docs":{},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01532567049808429},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"w":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}},"s":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}},"w":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011527377521613832},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.020202020202020204},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0200445434298441},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083}},"e":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"t":{"docs":{},"h":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}}},"!":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}}}}}}},"m":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}},"i":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}},"t":{"docs":{},"h":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}}}},"n":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}}}}}}},"i":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"?":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}},"n":{"docs":{},"g":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"!":{"docs":{},"w":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}}},"s":{"docs":{},"?":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"”":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}},"k":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"r":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.02857142857142857},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}},"m":{"docs":{},"a":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}},"u":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}},"m":{"docs":{},"b":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}},"t":{"docs":{},"?":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}},".":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"’":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.018072289156626505},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.022222222222222223}},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"k":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}},"p":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"i":{"docs":{},"c":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},".":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},"'":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}},",":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"?":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"’":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},"w":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"!":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}}}}}},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.5145454545454546},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":3.333333333333333}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}},"k":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}}},"i":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}},"p":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124}},"c":{"docs":{},"k":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125}},"y":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}},"e":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}},".":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}},"i":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}},"n":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576}}}},"e":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}},"w":{"docs":{},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"'":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}},",":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.50390625},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.018018018018018018},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.023529411764705882},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02666666666666667},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.027777777777777776},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},":":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}},"o":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}},".":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"o":{"docs":{},"k":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}},"2":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}},"3":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}}}}}}},"docs":{}}}}}}}}}},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"g":{"docs":{},"d":{"docs":{},"b":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}},"+":{"docs":{},"+":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909}}}}},"l":{"docs":{},"d":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"s":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}},".":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},":":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"i":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}},"m":{"docs":{},"e":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.009859154929577466},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.024691358024691357},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},".":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"a":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"w":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"i":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"!":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"s":{"docs":{},":":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}},".":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},"y":{"docs":{},"l":{"docs":{},"b":{"docs":{},"x":{"docs":{},"j":{"docs":{},"o":{"docs":{},"j":{"docs":{},"q":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}},"v":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"x":{"6":{"4":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.02247191011235955},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.6836158192090394},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6803652968036529},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.6956521739130432},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6753875968992247},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6904761904761902},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6740740740740738},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6944444444444442},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2548076923076923},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2552910052910053},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2564102564102564},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.037037037037037},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992}},",":{"docs":{"./":{"ref":"./","tf":0.0625}}}},"docs":{}},"8":{"6":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0174216027874565},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01025641025641},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927}},",":{"docs":{"./":{"ref":"./","tf":0.0625},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"/":{"docs":{},"x":{"6":{"4":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"docs":{}},"docs":{}}},"'":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"7":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152}}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.029906542056074768},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083}},"/":{"1":{"docs":{},"c":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}},"docs":{},"x":{"docs":{},"b":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}},",":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}},"m":{"docs":{},"m":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186}}}}}}}}},"d":{"0":{"4":{"0":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},"docs":{}},"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806}},",":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}}},"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},"e":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}},"e":{"docs":{},"p":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},"e":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018404907975460124},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},"s":{"docs":{},".":{"docs":{},"\"":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}}}},"v":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.019230769230769232},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.5106382978723403}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"i":{"docs":{},"f":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009216589861751152},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.016853932584269662},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}},"e":{"docs":{},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},".":{"3":{"docs":{},")":{"0":{"docs":{},"x":{"7":{"docs":{},"c":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"a":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.261764705882353},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1400966183574879},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2546296296296295},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4424603174603172},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.509009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.02877697841726619},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.0120481927710845},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022727272727272728},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0137614678899083},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.00990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.0153256704980844},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0140845070422535},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6746666666666665},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6790123456790123},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6741293532338306},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.675287356321839},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.68075117370892},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4411500449236296},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4358178053830226},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4481792717086832},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4389880952380951},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2552910052910053},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":2.0076335877862594},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004524886877828},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6756756756756754}},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"t":{"docs":{},"h":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}},":":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}}}}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099}},"g":{"docs":{},".":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}},"!":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}},"a":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521}}},"w":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}},"o":{"docs":{},"a":{"docs":{},"h":{"docs":{},"!":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}},":":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}},"g":{"docs":{},"d":{"docs":{},"b":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}},"w":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}},".":{"docs":{},"a":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}},"'":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}}}},"w":{"docs":{"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}},"i":{"docs":{},"t":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}},"d":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872}}}},"i":{"docs":{},"m":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.018691588785046728},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0273972602739726},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.01694915254237288},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0234375},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.04504504504504504},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.03937007874015748},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.0196078431372549},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.012121212121212121},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.02702702702702703},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.020080321285140562},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.022727272727272728},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.027522935779816515},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.031914893617021274},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.0297029702970297},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.034482758620689655},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01675977653631285},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.013363028953229399},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"a":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}},"f":{"docs":{},"t":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}},"d":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}},":":{"2":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},")":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},"?":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}}}}}},"d":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.7326007326007324},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4481792717086832},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.49010989010989},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.7047619047619047},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4389880952380951},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4341894060995182}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}},"r":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"!":{"docs":{},"a":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"o":{"docs":{},"y":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}},"b":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.04424778761061947},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"i":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}},"r":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.012048192771084338},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}},"n":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}},"o":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015384615384615385},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"1":{"0":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}},"a":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.024096385542168676},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}}}}}},"d":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}}}}},"a":{"docs":{"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}}}},":":{"docs":{},"a":{"docs":{"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}},"y":{"docs":{},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},".":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}},"v":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}}}}},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}},".":{"docs":{},"w":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}}}}},"b":{"docs":{},"l":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"k":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"2":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"docs":{}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02}},"l":{"docs":{},"i":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757}}}}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}},"i":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"s":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.007476635514018692},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.016853932584269662},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.01875},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"s":{"docs":{},",":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}},".":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}},"o":{"docs":{},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},":":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}}},"l":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}}},"o":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}}},")":{"docs":{},".":{"4":{"docs":{},")":{"0":{"docs":{},"x":{"7":{"docs":{},"e":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"w":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.011135857461024499},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.015765765765765764},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},":":{"docs":{},"w":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909}}}},".":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}}}},"?":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},"e":{"docs":{},"s":{"docs":{},".":{"2":{"docs":{},")":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"’":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4500768049155144},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0520833333333335},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.7011494252873562},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.6929824561403508},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"e":{"docs":{},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473}}}}}}},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},"u":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}}},"w":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}},"y":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.021505376344086023}},".":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"t":{"docs":{},"a":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0158311345646438},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0273972602739726},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.020172910662824207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009472259810554804},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1478083588175332},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0234375},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.024539877300613498},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.03488372093023256},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01744186046511628},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.5172413793103448},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.022388059701492536},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.25},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.25},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.25}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}}}},",":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427}},"!":{"docs":{},"i":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},":":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"p":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}},"y":{"docs":{},"p":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6666666666666665}},"e":{"docs":{},".":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"t":{"docs":{},"o":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}}}}},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}}}},"m":{"docs":{},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}}},"r":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}},"w":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}},"s":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},",":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"x":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}},"a":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}}}}}},"m":{"docs":{},"p":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"d":{"docs":{},"e":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"f":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"w":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}},",":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}},"b":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},",":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}},"d":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},",":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}},"q":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},",":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}},"c":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.018633540372670808}}}},"f":{"1":{"docs":{},"c":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.009009009009009009},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.012121212121212121},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.026455026455026454},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}},"i":{"docs":{},"f":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"t":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"t":{"docs":{},"o":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"h":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}},"w":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"!":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"]":{"docs":{},":":{"docs":{},"w":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}},"q":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0213903743315508},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"d":{"docs":{},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.01238390092879257},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01238390092879257},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.05166051660516605},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.022222222222222223},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.013921113689095127},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}},"e":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"m":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6697626418988647},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.003095975232198},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"e":{"docs":{},"!":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"l":{"docs":{},"i":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"x":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}}},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259}}}}},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.01616161616161616},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.017817371937639197}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}}}}},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.028169014084507043},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011527377521613832},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.021164021164021163},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"t":{"docs":{},"h":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"a":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}},"u":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"s":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},":":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}}}}}}},"!":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010554089709762533},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.013937282229965157},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576}}}}},"r":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288}},"t":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"w":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},".":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},".":{"docs":{},"w":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}},"c":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"s":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},":":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"1":{"docs":{},")":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}},"5":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}},"c":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"r":{"0":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"docs":{}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"[":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}},"y":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"0":{"docs":{},"x":{"5":{"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"docs":{}}},"1":{"docs":{},")":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"4":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}},"docs":{}}}}}}},"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"n":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}},"i":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}},"p":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"q":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"v":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"c":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}},"k":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}},"u":{"docs":{},"r":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}},"t":{"docs":{},"h":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},"a":{"docs":{},"t":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},";":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}},"a":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"s":{"docs":{},":":{"0":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}}},"c":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}},"t":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"r":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},",":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"u":{"docs":{},"r":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"!":{"docs":{},"w":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"l":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"(":{"docs":{},")":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}}}}},"s":{"docs":{},"h":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.01267605633802817}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}}}}},"e":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"a":{"docs":{},"r":{"docs":{},"!":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}}},"u":{"docs":{},"r":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521}}},"d":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.03076923076923077},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872}}}}},"w":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"l":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}},",":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}},".":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.057377049180328},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.7009132420091322},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6890130353817503},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.041666666666666664},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}},"g":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.034013605442176874},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":3.3940027894002784},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.07017543859649122},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.022900763358778626},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.028409090909090908},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.050359712230215826},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.0642570281124498},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.06302521008403361},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.030303030303030304},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.031914893617021274},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.033707865168539325},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},"s":{"docs":{},".":{"3":{"docs":{},")":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}},"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"o":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}},"a":{"docs":{},"c":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"i":{"docs":{},"d":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"o":{"docs":{},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"p":{"docs":{},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"r":{"docs":{},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"p":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"m":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},"z":{"docs":{},"f":{"docs":{},":":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},".":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.02158273381294964},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.012048192771084338},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637}}}}},")":{"docs":{},".":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}},"w":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"s":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.01238390092879257},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01238390092879257}},"f":{"docs":{},"f":{"docs":{},"d":{"0":{"4":{"0":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}},"docs":{}},"docs":{}},"docs":{}}}}},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}},"p":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"n":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"r":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}},"t":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612}}}},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.01444043321299639},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0273972602739726},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.013824884792626729},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.022900763358778626},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"a":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":3.333333333333333},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}}},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.031746031746031744},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"o":{"docs":{},"d":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}},"g":{"docs":{},"l":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"!":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"d":{"docs":{},"'":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}},"b":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"s":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863}}}},"p":{"docs":{},"h":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"i":{"docs":{},"c":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}},".":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"q":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"s":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"e":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},"p":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"y":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}}}}},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.007042253521126761},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.023255813953488372}},".":{"docs":{},"i":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"a":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}},"e":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.023668639053254437},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.06535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.5},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"m":{"docs":{},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}},"v":{"docs":{},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0131926121372032},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.5076335877862594}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}}},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}}}},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}}}}},"u":{"docs":{},"y":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"d":{"docs":{},"b":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}},".":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"t":{"docs":{},"o":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},"h":{"docs":{},"e":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}}},"t":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}},"p":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748}},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.04421768707482993}}},"u":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}},"b":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"c":{"docs":{},"c":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}},"n":{"docs":{},"u":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.012121212121212121},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"e":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.019011406844106463},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.27},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1444444444444446},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0338983050847457},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.031496062992126},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.013888888888888888},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2696078431372548},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4417293233082704},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.5396039603960396},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.0210084033613445},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.0106382978723403},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.013793103448276},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.0238095238095237},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0384615384615383},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.708920187793427},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6796536796536794},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.7066666666666666},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6834264432029793},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.6842105263157894},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6836158192090394},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4455205811138012},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4495504495504494},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4439560439560437},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4398073836276082},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.022222222222222223},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.021164021164021163},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2628205128205128},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0344827586206895},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.522222222222222},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.515748031496063},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.532258064516129},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.03816793893129771},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":2.0025839793281652},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.010869565217391},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"d":{"docs":{},")":{"docs":{},".":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}},"!":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}}}}},"!":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}},"a":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282}},"f":{"docs":{},"t":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}},"'":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},"w":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}}}},":":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}},"w":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901}},"a":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}},".":{"docs":{},"a":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}},"docs":{}}},"docs":{}},"1":{"0":{"docs":{},"a":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}}},"?":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}},"i":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}}}},"e":{"docs":{},",":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"i":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}},"g":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}},"d":{"docs":{},":":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}},"l":{"docs":{},"f":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125}}}},"g":{"docs":{},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.013192612137203167},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}},"e":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}},"s":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"l":{"docs":{},"i":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},".":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}},"s":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}},"e":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}}}},"l":{"docs":{},"d":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0158311345646438},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.026143790849673203},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}}}},"u":{"docs":{},"s":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}},"!":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"o":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},".":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"”":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},"!":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},".":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"o":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.505291005291005},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.007662835249042},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005952380952381},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0049261083743843},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}},"!":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"d":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"r":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"!":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.013513513513513514},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},"?":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}}}}},"w":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"i":{"docs":{},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"x":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.01568627450980392},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.01694915254237288},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.010101010101010102},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.014018691588785047},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.028089887640449437},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.011135857461024499},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.04040404040404041},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.020560747663551},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"i":{"docs":{},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}},":":{"1":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}},"docs":{}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},")":{"docs":{},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},"!":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}}}}}}}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}}}}}},"i":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}}},"o":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"w":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},"“":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"a":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"e":{"docs":{},"r":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}},"p":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":3.370677731673582},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}},"t":{"docs":{},"h":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}},"!":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},"d":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}},".":{"docs":{},"o":{"docs":{},"b":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}}},"e":{"docs":{},"p":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.020172910662824207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010825439783491205},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}},".":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.021671826625386997},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.021671826625386997}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}},",":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}},"g":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}},"e":{"docs":{},"e":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.034013605442176874},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616}},"@":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},":":{"docs":{},"~":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"0":{"docs":{},"x":{"0":{"2":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"$":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"$":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.024390243902439025},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.036101083032490974},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.05128205128205128},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"e":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}},"t":{"docs":{},"h":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}},"w":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}},"e":{"docs":{},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}}}}}},"?":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"i":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}},",":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}}},"b":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"e":{"docs":{},"l":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014534883720930232}},".":{"docs":{},"w":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}},".":{"docs":{},"d":{"docs":{},"o":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},"e":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}},"r":{"docs":{},"g":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}},"e":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.028169014084507043},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}},"z":{"docs":{},"i":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}},"i":{"docs":{},"d":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}},"e":{"docs":{},"a":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"r":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.5252707581227436},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}},"k":{"docs":{},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"v":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},"s":{"docs":{},"s":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}},"o":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.018072289156626505},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.014545454545454545},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.028985507246376812},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.025},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.02857142857142857},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0273972602739726},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.03389830508474576},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018404907975460124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.027777777777777776},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.0196078431372549},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.027777777777777776},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02631578947368421},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.023255813953488372},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.03488372093023256},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.0297029702970297},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.020689655172413793},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.028169014084507043},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.028169014084507043},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.037037037037037035},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.025974025974025976},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.022388059701492536},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.021505376344086023},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.012578616352201259},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.011299435028248588},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.014492753623188406},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.013986013986013986},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.03125},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.034482758620689655},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.03571428571428571},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.024390243902439025},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.022988505747126436},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.022388059701492536},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.03389830508474576},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.028985507246376812},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.047619047619047616},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.02564102564102564},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.024691358024691357},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.015748031496062992},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.03225806451612903},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.0425531914893617},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.009280742459396751},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.03816793893129771},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013574660633484163},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.021739130434782608},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.018633540372670808},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.04504504504504504}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"w":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}},"t":{"docs":{},"o":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}},"t":{"docs":{},"o":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}}}}}}}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012552301255230125},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.018050541516245487},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}},"w":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}},"p":{"docs":{},"x":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},",":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}}}},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.028985507246376812},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.027777777777777776},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.018691588785046728},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787}},"'":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.02127659574468085},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.016241299303944315},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.04580152671755725},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.027149321266968326},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.018633540372670808},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}}}},"’":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01532567049808429},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.038461538461538464},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.034482758620689655},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.03508771929824561},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},".":{"3":{"docs":{},")":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}}}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}},"t":{"docs":{},"o":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},")":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}},"i":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}},"s":{"docs":{},"!":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}}},"f":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.03260869565217391},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},".":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856}},"i":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"n":{"docs":{"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},",":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}},"s":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}}},".":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"t":{"docs":{},"o":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"h":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},")":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}},"'":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152}}}}},"i":{"docs":{},"t":{"docs":{},"!":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"\"":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014336917562724014},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.009859154929577466},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.015151515151515152},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.017241379310344827},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019736842105263157},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.013921113689095127},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}},"u":{"docs":{},"p":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},".":{"docs":{"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.023255813953488372}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"_":{"1":{"0":{"docs":{},"h":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"docs":{},"h":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"4":{"docs":{},"h":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"8":{"docs":{},"h":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"docs":{}}},"t":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.017123287671232876},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"e":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315}}}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}},"o":{"docs":{},"w":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}}}}}},"k":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}},"n":{"docs":{},"g":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"2":{"docs":{},")":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"8":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}},"docs":{}}}}}}},"4":{"docs":{},")":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}}},"5":{"docs":{},")":{"docs":{},"x":{"docs":{},"m":{"docs":{},"m":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}},"6":{"docs":{},")":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.013192612137203167},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"e":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}}}}},"a":{"docs":{},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.015479876160990712},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.015479876160990712},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.024},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.02727272727272727},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.005813953488372},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},".":{"docs":{},"@":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427}}},"“":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"r":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.025423728813559324}},".":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.023255813953488372},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.502227171492205},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.007380073800738007},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},":":{"docs":{},"a":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}},"n":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"e":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"f":{"docs":{},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.430875576036866}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}},"o":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.020905923344947737},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.0112612612612613},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010825439783491205},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.027210884353741496},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.014423076923076924}},"!":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}}},")":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"k":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.5303030303030303},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334}},"e":{"docs":{},"r":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},":":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}}},")":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}}}},".":{"docs":{},"g":{"docs":{},"+":{"docs":{},"+":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010825439783491205},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.027777777777777776},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.015873015873015872},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}},"]":{"docs":{},"$":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"b":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"k":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"p":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}},"y":{"docs":{},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},":":{"docs":{},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}}}},".":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}},")":{"docs":{},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"y":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},":":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"v":{"docs":{},"e":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"d":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}},"r":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}},"r":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.015151515151515152}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}},"o":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"2":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"docs":{}}}}},"u":{"docs":{},"x":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}},"s":{"docs":{},"b":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"m":{"3":{"2":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"docs":{}},"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667}},"a":{"docs":{},"c":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015384615384615385},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.037037037037037035},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.009280742459396751},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"e":{"docs":{},".":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"s":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"!":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}}}}}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"k":{"docs":{},"i":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"k":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.016042780748663103},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01953125},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.058823529411764705},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.52734375},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.02527075812274368},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}},"e":{"docs":{},".":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}}}},"n":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}}}}},"d":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"t":{"docs":{},"h":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010582010582010581},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.01160092807424594},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"+":{"1":{"2":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}}}},"6":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}}},"7":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}},"docs":{}},"2":{"0":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}},"4":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}},"8":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}},".":{"docs":{},"w":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}},"docs":{}},"3":{"6":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}},"docs":{}},"6":{"8":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}},"docs":{}},"7":{"2":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525}}}}},"docs":{}},"docs":{}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.01267605633802817},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}}}}},")":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}},"w":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}},"[":{"0":{"docs":{},"x":{"5":{"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"q":{"docs":{},"q":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},":":{"docs":{},"o":{"docs":{},"k":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"?":{"docs":{},"”":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282}},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},"i":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356}}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}},"p":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.018561484918793503},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}},"u":{"docs":{},"m":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}},"e":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.012121212121212121},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.006802721088435},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.430875576036866},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.01652892561983471},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},":":{"docs":{},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}},"s":{"docs":{},":":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"y":{"docs":{},".":{"2":{"docs":{},")":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}}}}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"w":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"t":{"docs":{},"o":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"’":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},",":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},"]":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}}}}},")":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.5109090909090908},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.025089605734767026},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.035897435897435895},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.03767123287671233},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.018309859154929577},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.04979253112033195},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.020172910662824207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0169491525423728},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.03067484662576687},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.026143790849673203},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.03488372093023256},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01532567049808429},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.023809523809523808},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.028169014084507043},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.03816793893129771},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.029069767441860465},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.03731343283582089},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.023622047244094488},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.01160092807424594},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},".":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"s":{"docs":{},"s":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}},"!":{"docs":{},"”":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"a":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"i":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"d":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}},"i":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"u":{"docs":{},"m":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}},"u":{"docs":{},"t":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}},"e":{"docs":{},"?":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.023076923076923078},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.025157232704402517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"r":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}},"l":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"2":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"docs":{}}}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"r":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.01444043321299639},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.01152073732718894},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.02127659574468085},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"a":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},"i":{"docs":{},"f":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}},"'":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}},"w":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}},".":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}},":":{"docs":{},"w":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}},"v":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709}},"e":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.01568627450980392},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.05504587155963303},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.028985507246376812},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.02857142857142857},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0234375},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.036036036036036036},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.023622047244094488},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.019801980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.02054794520547945},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.01675977653631285},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.03389830508474576},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}},"l":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"o":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"t":{"docs":{},"o":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}}}}},"s":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.02857142857142857}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}},"y":{"docs":{},".":{"docs":{},"o":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}},"p":{"docs":{},"l":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}}}},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}}}}}}},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}}},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.03260869565217391}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.023255813953488372},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.02459016393442623},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.03125},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.021505376344086023},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.028037383177570093},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.025157232704402517},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.022598870056497175},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.045454545454545456},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.036231884057971016},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.03496503496503497},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.03296703296703297},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.06153846153846154},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.02857142857142857},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.03125}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}},"s":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03225806451612903},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288}}},";":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}}}}}},"e":{"docs":{},"w":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.037383177570093455},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.025157232704402517},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.01694915254237288},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.05454545454545454},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.043478260869565216},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.04195804195804196},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.046153846153846156},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}},"m":{"docs":{},"x":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"l":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.024896265560165973},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.023076923076923078},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},".":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"d":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.03208556149732621},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.0123456790123457}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"s":{"docs":{},",":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"x":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.015384615384615385},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.019011406844106463},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.012448132780082987},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.02702702702702703},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.0196078431372549},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.015151515151515152},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}},"a":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"!":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}},"w":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.010582010582010581},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.013574660633484163},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.036036036036036036}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}}}}}},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02}},"a":{"docs":{},"t":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.011627906976744},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}},".":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}},"i":{"docs":{},"c":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.036036036036036036},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"o":{"docs":{},"n":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},",":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}},"e":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}}}}}}},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.039473684210526314},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.023809523809523808},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.02586206896551724},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.02631578947368421},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.01160092807424594},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"p":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.081081081081081},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.02803738317757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.010752688172043012},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.518181818181818},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.0069124423963133645},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.022271714922048998},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5112359550561796},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.1033210332103321},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}},"i":{"docs":{},"f":{"docs":{"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}},"s":{"docs":{},".":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}}},",":{"docs":{"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}},",":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125}}}}},"l":{"docs":{},"l":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"e":{"docs":{},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729}},"s":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}},";":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}},"i":{"docs":{},"v":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}},"s":{"docs":{},"m":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}}},"n":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748}},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}}}},".":{"docs":{},"w":{"docs":{},"e":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}},"o":{"0":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.02857142857142857},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.024390243902439025},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.014545454545454545},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.019230769230769232},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018404907975460124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"l":{"docs":{},"y":{"docs":{},"!":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"c":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"t":{"docs":{},"o":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.007042253521126761},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"]":{"docs":{},"d":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}}}},"e":{"docs":{},"]":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"?":{"docs":{},"”":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}},"!":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"l":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"l":{"docs":{},"y":{"docs":{},"d":{"docs":{},"b":{"docs":{},"g":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}}},"d":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}},"e":{"docs":{},"r":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473}},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}},",":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}}},"j":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}},"s":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}}},"p":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}},"m":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"e":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.02092050209205021},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010752688172043},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6723163841807909},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.6666666666666665},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4342211460855527},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.6666666666666665},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4285714285714284},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4285714285714284},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6996336996336996},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4285714285714284},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4285714285714284},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.676190476190476},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4285714285714284},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4285714285714284},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}},"t":{"docs":{},"h":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"i":{"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.0079155672823219},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}},"d":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"s":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},")":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}}}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}}},":":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}}},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.021505376344086023},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385}}}}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364}},"s":{"docs":{},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},"i":{"docs":{},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"t":{"docs":{},"h":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01440922190201729},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.019230769230769232},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.014619883040935672},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"s":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}}},",":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"m":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}}}},"s":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}},"c":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}},".":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"'":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}},"i":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}},"'":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}}}},"w":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"f":{"docs":{},"f":{"docs":{},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},"i":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}}}}},"e":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}}}}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}},"k":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}},"!":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},",":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"u":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.02666666666666667},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.0196078431372549},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909}},"!":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},".":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}},"'":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}}}}}},")":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"!":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}},"a":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}},")":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},".":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}},"s":{"docs":{},".":{"3":{"docs":{},")":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}}}}}},"docs":{},"w":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}},"p":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}}}},"d":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":3.3386809269162208},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":3.3393574297188753},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":2.50390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":2.0034843205574915},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.0067567567567566},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0037383177570094},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":2.5036363636363634},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":1.4357398873527905},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":2.01025641025641},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.0026385224274406},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.506849315068493},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.0038022813688214},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":2.506802721088435},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":3.335425383542538},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":3.3347417840375586},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":3.337482710926694},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.0022522522522523},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.003846153846154},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":2.503610108303249},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":2.0086455331412103},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.503030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2581190798376185},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.253921568627451},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2566666666666666},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1202854230377166},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0142857142857142},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2561349693251533},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2546296296296295},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2565359477124183},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4344193817878026},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4424603174603172},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4548872180451127},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":3.345238095238095},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2.006802721088435},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.502020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":2.5076335877862594},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.51},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.5076335877862594},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":3.336734693877551},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5065359477124183},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":3.3390151515151514},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":2.51010101010101},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.5046728971962615},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6728586171310629},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.011627906976744},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.507936507936508},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":3.340182648401826},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":2.509009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":2.50990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":3.3405275779376495},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.004016064257028},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.004201680672269},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.507575757575758},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0045871559633026},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.00531914893617},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.511627906976744},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.00990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.0068965517241377},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":2.86405529953917},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2.0061919504643964},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.502645502645503},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2.003831417624521},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2.005952380952381},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":3.3397435897435894},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0140845070422535},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0128205128205128},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.00561797752809},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6746666666666665},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68075117370892},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.0097087378640777},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6790123456790123},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6796536796536794},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.007751937984496},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6741293532338306},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.68},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.0081967213114753},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6722532588454375},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0104166666666665},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.675287356321839},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675438596491228},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010752688172043},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6723163841807909},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.6760124610591898},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4342211460855527},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.6757575757575756},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4358178053830226},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4355644355644355},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6776556776556775},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4383753501400558},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4439560439560437},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.676190476190476},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4389880952380951},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4341894060995182},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":3.3398692810457513},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":2.502227171492205},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5112359550561796},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":2.51},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.5088495575221237},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5046082949308754},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":2.5076335877862594},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":2.503690036900369},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":2.5076335877862594},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":3.3424242424242423},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":2.011627906976744},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.5172413793103448},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.517857142857143},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.510869565217391},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":2.5121951219512195},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":2.5084745762711864},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4319047619047618},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.43431855500821},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4386724386724385},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4351503759398494},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4388807069219438},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4360341151385925},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4348214285714285},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.434860736747529},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.435238095238095},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.6836158192090394},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6803652968036529},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.681159420289855},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6695736434108526},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6904761904761902},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6740740740740738},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6759259259259258},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2548076923076923},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2552910052910053},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2564102564102564},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":2.0123456790123457},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":3.3415977961432506},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2.0049261083743843},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.5074074074074075},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":2.5078740157480315},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.510752688172043},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.5106382978723403},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":2.5023201856148494},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":2.0076335877862594},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":2.0025839793281652},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":2.5045454545454544},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":2.004524886877828},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":2.010869565217391},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.0062111801242235},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6756756756756754}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"l":{"docs":{},"i":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}}}},"a":{"docs":{},"l":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}}}},"a":{"docs":{},"m":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602}},"e":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.022900763358778626}}}}}},"s":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}},"s":{"docs":{},"s":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.03816793893129771},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},",":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}}}},"h":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}},"g":{"docs":{},"e":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"i":{"docs":{"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}},"e":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}},"d":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019736842105263157}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.008645533141210375},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.017241379310344827},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},"!":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}},".":{"docs":{},"w":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},".":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}},"e":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}},"c":{"docs":{},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.012269938650306749},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}},"s":{"docs":{},")":{"docs":{},"!":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}}},"u":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}}},"u":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":2.015831134564644},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.05782312925170068},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},".":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}}}},".":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},"!":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"e":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625}}},"s":{"docs":{},"u":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808}}}}},"z":{"docs":{},"z":{"docs":{},"l":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}}},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"l":{"docs":{},"s":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"s":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.011267605633802818},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775}}},"s":{"docs":{},"h":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}},"o":{"docs":{},"p":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.007042253521126761},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.014018691588785047},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.007476635514018692},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.013333333333333334},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815}},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010554089709762533},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.015209125475285171},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.03},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.03278688524590164},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.041666666666666664},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.03},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"e":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.013192612137203167},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02054794520547945},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":2.011406844106464},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.022535211267605635},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01729106628242075},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.514018691588785},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":3.351515151515151},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.03937007874015748}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}},"f":{"docs":{},"s":{"docs":{},":":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"w":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}},"!":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}},"s":{"docs":{},"!":{"docs":{"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":2.5}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}},"?":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},".":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"@":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},":":{"docs":{},"~":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"0":{"docs":{},"x":{"0":{"2":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"$":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}},"e":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},"i":{"docs":{},"n":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}},"?":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02}}}},"t":{"docs":{"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.712121212121212},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4648033126293993},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4565434565434563},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.7047619047619047},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4389880952380951},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4341894060995182}}}},"r":{"docs":{},"t":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},".":{"docs":{},"w":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}}},"r":{"docs":{},"o":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"c":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102}},"s":{"docs":{},"s":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.023809523809523808},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},"o":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.016736401673640166},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.047619047619047616},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}},"c":{"docs":{},"r":{"1":{"docs":{},":":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}},"docs":{}}},"t":{"docs":{},"h":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}},",":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}}}}},".":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}}}},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":1.6666666666666665},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":2},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"o":{"docs":{},"f":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02054794520547945},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.034220532319391636},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.011267605633802818},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.02074688796680498},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":2.515151515151515},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.277063599458728},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1386340468909277},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2622699386503067},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4344193817878026},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.017006802721088437},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":2.5392156862745097},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.023255813953488372},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.019230769230769232},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.02564102564102564},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.028985507246376812},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.038461538461538464},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.037037037037037035},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"e":{"docs":{},"c":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}},"’":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294}}}}}},"a":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}},"s":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}},"t":{"docs":{},"h":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}}}}},"!":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}},"s":{"docs":{},"o":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}},"m":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}},":":{"docs":{},"w":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"r":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"t":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}},"l":{"docs":{},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}},"y":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"w":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{},"q":{"docs":{},"q":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"u":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}},"e":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.7133956386292832},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.4600179694519315},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4511702986279256},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.7216117216117215},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4481792717086832},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4439560439560437}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},"t":{"docs":{},".":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}},"r":{"docs":{},"v":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}},"s":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.01126126126126126},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.02054794520547945},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0223463687150838},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"s":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}},"t":{"docs":{},"i":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.028169014084507043},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}}},"f":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356}}}}},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063}}}}}},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":2.012422360248447},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":1.6846846846846846}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}},"d":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}}},"r":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}}},"e":{"docs":{},"k":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},"e":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}}}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.03968253968253968}},".":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872}}}}}}},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}},"k":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01818181818181818}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"d":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":2.507936507936508}},"e":{"docs":{},".":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.019230769230769232},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}},"c":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.0392156862745098},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}},"t":{"docs":{},"r":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}},"s":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083}},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}}},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}},"q":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{},"q":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}}}},"a":{"docs":{},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787}}}}}}}},"o":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},",":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}}},"e":{"docs":{},"m":{"docs":{},"u":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.01875}}}}}},"s":{"0":{"docs":{},".":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315}}}}}},"w":{"docs":{},"e":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}}},"?":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}},"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"l":{"docs":{},"y":{"docs":{},"!":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.01568627450980392},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}},"r":{"docs":{"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.03571428571428571},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":2.510869565217391}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"_":{"1":{"0":{"0":{"0":{"docs":{},"_":{"1":{"4":{"8":{"8":{"docs":{},"/":{"0":{"docs":{},"/":{"1":{"5":{"2":{"0":{"1":{"4":{"3":{"2":{"7":{"9":{"5":{"6":{"7":{"docs":{},"?":{"docs":{},"e":{"docs":{},"=":{"1":{"6":{"1":{"4":{"2":{"1":{"1":{"2":{"0":{"0":{"docs":{},"&":{"docs":{},"v":{"docs":{},"=":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"&":{"docs":{},"t":{"docs":{},"=":{"docs":{},"u":{"docs":{},"u":{"docs":{},"u":{"docs":{},"i":{"docs":{},"o":{"2":{"docs":{},"c":{"8":{"docs":{},"c":{"docs":{},"b":{"6":{"2":{"9":{"docs":{},"g":{"docs":{},"i":{"docs":{},"y":{"docs":{},"b":{"docs":{},"g":{"docs":{},"g":{"docs":{},"j":{"docs":{},"q":{"docs":{},"w":{"docs":{},"l":{"docs":{},"y":{"docs":{},"x":{"docs":{},"a":{"docs":{},"q":{"3":{"docs":{},"z":{"docs":{},"f":{"docs":{},"p":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"!":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"l":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.034482758620689655},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":2.517857142857143}},"!":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.028985507246376812},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},"g":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.008368200836820083},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.014619883040935672},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0213903743315508},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}},"e":{"docs":{},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}},"s":{"docs":{},",":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}}}}},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}},"x":{"6":{"4":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"l":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.0196078431372549},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.020618556701030927},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.028985507246376812},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.031914893617021274},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},".":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.021739130434782608}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}}}},"i":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.013227513227513227},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019736842105263157},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.01809954751131222},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.021739130434782608}},"f":{"docs":{},"i":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}}},"y":{"docs":{},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273}}}}}}},"z":{"docs":{},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},"s":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},".":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}},"o":{"docs":{},"f":{"docs":{"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.043010752688172},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6948356807511735},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6836158192090394}},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},"x":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}},"t":{"docs":{},"h":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.021739130434782608}}}}},".":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}},"t":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}}}}},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.018691588785046728}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}},"n":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}},"t":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},"a":{"docs":{},"l":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}},"e":{"docs":{},"d":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"c":{"docs":{},"e":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"t":{"docs":{},"h":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"w":{"docs":{},"n":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"t":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},".":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}},"o":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.024896265560165973},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.02252252252252252},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.028037383177570093},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.01532567049808429},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.03225806451612903},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}},":":{"docs":{},"a":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"m":{"docs":{},"!":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"e":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.011764705882352941},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},".":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}},"a":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}}}}}}}},"d":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"u":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"s":{"docs":{},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}},"=":{"0":{"docs":{},"x":{"0":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"docs":{}}},"docs":{}}}}},"n":{"docs":{},"d":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.02564102564102564},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}}}}}}},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"r":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.02127659574468085},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.006191950464396285},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.006191950464396285}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}},".":{"docs":{},".":{"docs":{},"“":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}}}},":":{"docs":{},"a":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}},"c":{"docs":{},"k":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010554089709762533},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.02054794520547945},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":3.3995305164319247},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.011527377521613832},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.015151515151515152},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":2.5654205607476634},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01744186046511628},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.022388059701492536},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.01875},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},".":{"2":{"docs":{},")":{"docs":{},"w":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"t":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"w":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"a":{"docs":{},"t":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}}},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"g":{"docs":{},"e":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"!":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}},"d":{"docs":{},"i":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}},"c":{"docs":{},"k":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"m":{"docs":{},"p":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"o":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},"r":{"docs":{},"e":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.0136986301369863},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.013071895424836602},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.013605442176870748},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.03488372093023256},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.02654867256637168},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"d":{"docs":{},".":{"docs":{"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745}},"a":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}},"s":{"docs":{},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}},"e":{"docs":{},".":{"4":{"docs":{},")":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}}}},"docs":{}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}},"c":{"docs":{},"k":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.010554089709762533},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.017857142857142856},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.028985507246376812},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.02962962962962963},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.01652892561983471},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.01808785529715762},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},".":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}},"a":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}},"w":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}},"i":{"docs":{},"f":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}}},",":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.008298755186721992}},"u":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"n":{"docs":{},"g":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}},"a":{"docs":{},"m":{"docs":{"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.012919896640826873},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},".":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},",":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936}}}}},"d":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}}}}}}}}},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},";":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}}}},"w":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},";":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},".":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334}}}}}},"[":{"0":{"docs":{},"x":{"5":{"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}},"i":{"docs":{},"o":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}},"n":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.01775147928994083},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},".":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}},"i":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}},",":{"docs":{},"a":{"docs":{"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}},":":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"y":{"docs":{},".":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}},"w":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}},"i":{"docs":{},"n":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}}}}},".":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}}}},"!":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}}}}}},"k":{"docs":{},"s":{"docs":{},"!":{"docs":{},"”":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}},"b":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.5232558139534884},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.00990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.013192612137203167}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":2.52},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.019801980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":2.5},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},"y":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},"!":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.0196078431372549},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.03535353535353535}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152}}}}}}}},".":{"docs":{"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}},"o":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.023255813953488372}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}}},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},":":{"docs":{},"t":{"docs":{},"o":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186}}}},"w":{"docs":{"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}},"m":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}},"d":{"docs":{},"o":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}},"r":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}},"x":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":2.027027027027027},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":2.0093457943925235},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":2.502020202020202},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.013824884792626729},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":2.5},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.0423728813559322},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.017241379310344827},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014534883720930232},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"o":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}},"w":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"t":{"docs":{},"h":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"“":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}}}},"!":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}},"w":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}},"?":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814}},"l":{"docs":{},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.013937282229965157},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.01818181818181818},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.008119079837618403},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.01568627450980392},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"t":{"docs":{},"o":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}},"i":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}},":":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"'":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}}}},"m":{"docs":{},"e":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"1":{"0":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},"docs":{}},"docs":{}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01}},"d":{"docs":{},".":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}},"w":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385}},"s":{"docs":{},".":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}}}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"r":{"docs":{},"i":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"f":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909}}}}}}},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}},"!":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}}}}},"u":{"docs":{},"r":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"k":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.008119079837618403},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},")":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315}}},":":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015}}},"s":{"docs":{},":":{"1":{"docs":{},")":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"docs":{}}},".":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"y":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}},"a":{"docs":{"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496}}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.025423728813559324},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4319047619047618},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.4400656814449917},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4487734487734485},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4417293233082704},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4491899852724592},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4434968017057568},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4473214285714284},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.434860736747529},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.435238095238095}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},".":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.01834862385321101},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.028985507246376812},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.05166051660516605},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}},"n":{"docs":{},"s":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},"i":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}}}}}}}}},"d":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}},"t":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576}}}}}}},"r":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.020737327188940093},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}},".":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"t":{"docs":{},"h":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}},"y":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}}}},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"c":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}},"l":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.013513513513513514},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}}}}}}},"f":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}}}}}}}},"e":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.014336917562724014},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.026615969581749048},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.009859154929577466},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.010830324909747292},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01440922190201729},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.012121212121212121},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.03137254901960784},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.04},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.043478260869565216},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.03333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0410958904109589},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.03389830508474576},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.036036036036036036},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.03937007874015748},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.018404907975460124},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.013888888888888888},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.032679738562091505},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.011695906432748537},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.041666666666666664},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.039473684210526314},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.020202020202020204},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.028037383177570093},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.02054794520547945},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.04504504504504504},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.0297029702970297},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.028112449799196786},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.025210084033613446},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.01834862385321101},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.0297029702970297},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.027586206896551724},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.019157088122605363},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.02976190476190476},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.019230769230769232},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.028169014084507043},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.038461538461538464},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.02247191011235955},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.04},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.07042253521126761},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.022388059701492536},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.04},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0547945205479452},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.061452513966480445},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03225806451612903},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.04929577464788732},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.05084745762711865},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.03773584905660377},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.04519774011299435},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.01818181818181818},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.028985507246376812},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.027972027972027972},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0392156862745098},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.021739130434782608},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.024390243902439025},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.050505050505050504},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.019736842105263157},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.01875},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.06779661016949153},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0273972602739726},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.011627906976744186},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.037037037037037035},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.014423076923076924},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.031746031746031744},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.01652892561983471},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.04433497536945813},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.05925925925925926},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.05511811023622047},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.027842227378190254},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.022900763358778626},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.031818181818181815},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.024844720496894408},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},":":{"docs":{},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},".":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}},"n":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}},"m":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}},"k":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},"t":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.012552301255230125},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.026923076923076925},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.018018018018018018},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.015748031496062992},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.02158273381294964},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.024096385542168676},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.01680672268907563},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.009287925696594427},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.013824884792626729},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.025},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},",":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525}}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}},"w":{"docs":{"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907}}}}},"a":{"docs":{"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}},"u":{"docs":{},"p":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":2.5}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425}}}}}}},"!":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}}}}}},"t":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.023746701846965697},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":2.565068493150685},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":2.5},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629}},")":{"docs":{},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}}}},",":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315}},"i":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}},"s":{"docs":{},".":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"!":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}}}}}}}}}}},"x":{"docs":{},"y":{"docs":{},"!":{"docs":{},"i":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.018072289156626505},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.027210884353741496},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}},"e":{"docs":{},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169}}}},"i":{"docs":{},"d":{"docs":{"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}}}},"e":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}},"c":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}},"h":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.007220216606498195},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.021212121212121213},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.013888888888888888},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}}}}}}},"a":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}},"o":{"docs":{},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"r":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}}}}},"m":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}},"e":{"docs":{},"r":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.004225352112676056},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"s":{"docs":{},"t":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}}}},"r":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673}}},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273}}}}},".":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}}}},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"i":{"docs":{},"l":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}}}},"s":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266}},"h":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"e":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},"p":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}},"r":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}},"o":{"docs":{},"w":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},"e":{"docs":{},"r":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"l":{"docs":{},"i":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"d":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}},"b":{"docs":{},"c":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}},"s":{"docs":{},",":{"docs":{"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.01694915254237288},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"w":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.0078125},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.014545454545454545},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.007042253521126761},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.016666666666666666},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.023809523809523808},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.010101010101010102},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.017006802721088437},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.0196078431372549},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.01238390092879257},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.0136986301369863},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.01238390092879257},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.02247191011235955},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.013071895424836602},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.011135857461024499},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.017241379310344827},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014534883720930232},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.022222222222222223},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.03225806451612903},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.01160092807424594},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}}},"?":{"docs":{"pages/part-38-x64-networking-basics.html":{"ref":"pages/part-38-x64-networking-basics.html","tf":0.012345679012345678}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}},"k":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}},"i":{"docs":{},"x":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"q":{"docs":{},"u":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"t":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.046511627906976744},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872}},"s":{"docs":{},")":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.011406844106463879},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.018018018018018018}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}}}},"p":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.015625},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.013333333333333334},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.013157894736842105},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}}},"o":{"docs":{},"n":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.017045454545454544},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}}}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"s":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0106951871657754},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.018072289156626505},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.010452961672473868},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.02027027027027027},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.014545454545454545},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.03430079155672823},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.03424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.01882845188284519},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.02074688796680498},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01440922190201729},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.01818181818181818},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.012178619756427604},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.01568627450980392},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.009259259259259259},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.011494252873563218},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.03488372093023256},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.01},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.017241379310344827},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.02},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.005813953488372093},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.014814814814814815},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.014423076923076924},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.010582010582010581},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.031914893617021274},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.012919896640826873},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01953125},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.005412719891745603},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124}},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}},"d":{"docs":{},".":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.013605442176870748},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"a":{"docs":{},"g":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.008771929824561403},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}},".":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"t":{"docs":{},"h":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}}},"m":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}},"w":{"0":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.031055900621118012}},",":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}}}},"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"a":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"n":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},".":{"docs":{},"i":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901}}}}}}},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}},"a":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}},"!":{"docs":{"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}},"v":{"docs":{},"e":{"docs":{"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414}}}},"e":{"docs":{},"r":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"i":{"docs":{},"t":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}},"!":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}}}}}},"l":{"docs":{},"k":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.010460251046025104}}}}}},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}},"a":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"e":{"docs":{},"v":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}}}}},"e":{"docs":{},"v":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}},"!":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541}}}},"s":{"docs":{},"e":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"y":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"e":{"docs":{},",":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-1-goals.html":{"ref":"pages/part-1-goals.html","tf":0.0053475935828877}}}}}}},".":{"docs":{"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.00684931506849315},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}}},".":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"i":{"docs":{},"n":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}},"n":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}},"d":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"o":{"docs":{},"w":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.013937282229965157},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"y":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}},"s":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},".":{"docs":{},"i":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}}}},"d":{"docs":{},"e":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.009345794392523364},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.008264462809917356},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},".":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304}},".":{"docs":{},".":{"docs":{"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301}}}},"t":{"docs":{},"h":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}},"e":{"docs":{},"r":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}}}}}},"e":{"docs":{},"k":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.007272727272727273},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.00909090909090909},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.006765899864682003},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.007936507936507936},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.02054794520547945},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.008403361344537815},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.009174311926605505},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.015957446808510637},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":0.011627906976744186},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.028169014084507043},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.011834319526627219},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.0036900369003690036},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.022988505747126436},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.010101010101010102},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.041237113402061855},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.013333333333333334},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.00872093023255814},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}},"’":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294}}},"'":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}}}}}}},"!":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}}}}},"n":{"docs":{},"t":{"docs":{"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"b":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.006968641114982578},"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.01126126126126126},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.010101010101010102},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.006802721088435374},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.015873015873015872},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.018433179723502304},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"s":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678}}}}}},"i":{"docs":{},"f":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667}}}}}}},"!":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}}},"l":{"docs":{},"d":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":2.502645502645503},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":2},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":2},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.022900763358778626}},".":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},"i":{"docs":{},"n":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}},",":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}},"!":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":2},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}},"`":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}},"\"":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},".":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}},"”":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.02976190476190476}}},"'":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}},"”":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936}}},"\"":{"docs":{"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":2.5023201856148494},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":2},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":2}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"\\":{"docs":{},"n":{"docs":{},"'":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}}},"m":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"d":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.02867383512544803},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.010256410256410256},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":2.553435114503817},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.017699115044247787},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":2.5046082949308754},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.022900763358778626},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.02727272727272727},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.023255813953488372},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},"s":{"docs":{},".":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364}}},",":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":2.8643113159242186}}}},".":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}},"i":{"docs":{},"f":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}}}},"]":{"docs":{},"d":{"docs":{},"d":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},":":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"r":{"docs":{},"i":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},",":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976}}}}}},"e":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.015873015873015872},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}},",":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}}}}},"a":{"docs":{},"p":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.015151515151515152}}}}}}}},"x":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}},"v":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"a":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033}},"r":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.011627906976744186}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.006024096385542169},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.015625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}},"y":{"docs":{},".":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.011267605633802818},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.02074688796680498},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.00561797752809},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6666666666666665},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.6666666666666665},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.0097087378640777},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6666666666666665},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6796536796536794},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.007751937984496},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6666666666666665},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.6666666666666665},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.0245901639344264},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6666666666666665},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6722532588454375},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0416666666666665},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.6666666666666665},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.6666666666666665},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.021505376344086023},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.014084507042253521},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.011299435028248588},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.028037383177570093},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.025157232704402517},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.022598870056497175},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.02727272727272727},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.021739130434782608},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02097902097902098},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.02857142857142857},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.01744186046511628},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}},"e":{"docs":{},"s":{"docs":{},".":{"3":{"docs":{},")":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.01282051282051282},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.019417475728155338},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.02459016393442623},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.020833333333333332},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"i":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"t":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":0.012987012987012988},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.013333333333333334},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}},"!":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":2.5}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}}}}},"”":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}},"n":{"docs":{},"c":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061}}}}}},"y":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"s":{"docs":{},"t":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259}}}},"l":{"1":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"2":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"docs":{},"u":{"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.007168458781362007},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.017123287671232876},"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.02040816326530612},"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.006276150627615063},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.005633802816901409},"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.01440922190201729},"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0027063599458728013},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.027450980392156862},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.02},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.045871559633027525},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.03333333333333333},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0410958904109589},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.0423728813559322},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.046875},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.07207207207207207},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.07874015748031496},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.03067484662576687},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.032407407407407406},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.0392156862745098},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.014619883040935672},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.041666666666666664},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.006060606060606061},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.02},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.037383177570093455},"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.0297029702970297},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.014388489208633094},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.02100840336134454},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.015151515151515152},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.013761467889908258},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.010638297872340425},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":0.009900990099009901},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.013793103448275862},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.017857142857142856},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.019230769230769232},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.04225352112676056},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":0.0641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.032},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.07042253521126761},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.02912621359223301},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":0.012345679012345678},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":0.08},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.01639344262295082},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.04794520547945205},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.05027932960893855},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.02586206896551724},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.02631578947368421},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.056338028169014086},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.06779661016949153},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.018691588785046728},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.050314465408805034},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.05649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.03636363636363636},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.057971014492753624},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.06293706293706294},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.03296703296703297},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.02857142857142857},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.0196078431372549},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.02},"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.06870229007633588},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.01818181818181818},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.034482758620689655},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-15-shr-instruction.html":{"ref":"pages/part-15-shr-instruction.html","tf":0.010869565217391304},"pages/part-16-rol-instruction.html":{"ref":"pages/part-16-rol-instruction.html","tf":0.012195121951219513},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.011494252873563218},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":0.020202020202020204},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.015873015873015872},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.024793388429752067},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204}},"e":{"docs":{},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-13-the-data-segment.html":{"ref":"pages/part-13-the-data-segment.html","tf":0.017241379310344827},"pages/part-14-shl-instruction.html":{"ref":"pages/part-14-shl-instruction.html","tf":0.017857142857142856},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},"a":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"t":{"docs":{},"h":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"w":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"e":{"docs":{},"b":{"docs":{},"x":{"docs":{},":":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}}}}},"w":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.0038314176245210726}}}}}}},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},",":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}}},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.012919896640826873},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.01818181818181818},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.03619909502262444}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-2-techniques.html":{"ref":"pages/part-2-techniques.html","tf":0.012048192771084338},"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.01171875},"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.01090909090909091},"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0028169014084507044},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.010825439783491205},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.025},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.009900990099009901},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.004608294930875576},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.005291005291005291},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.011235955056179775},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.0196078431372549},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0066815144766146995},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.02247191011235955},"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.025423728813559324},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.017241379310344827},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.012578616352201259},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":0.01694915254237288},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":0.0136986301369863},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.014778325123152709},"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.02127659574468085},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.03260869565217391},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.012422360248447204},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},"f":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}},"i":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.009280742459396751},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.013513513513513514},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0040595399188092015},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.013605442176870748},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"s":{"docs":{},".":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}}}}}},"a":{"docs":{},".":{"docs":{},"i":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}}}},"y":{"docs":{},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.009472259810554804},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539}},"r":{"docs":{},"u":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.016736401673640166},"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996},"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.009009009009009009}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.006756756756756757},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.009259259259259259},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.009615384615384616}}}}}}}}}},"m":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522},"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":2.0076923076923077},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.02040816326530612},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}},".":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"c":{"docs":{},"e":{"docs":{"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":0.009174311926605505}}}},"e":{"docs":{},"w":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}}},"v":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}},"q":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"w":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}},"a":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}},"i":{"docs":{},"f":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.014925373134328358},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.0125},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.03272727272727273}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"x":{"8":{"6":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"6":{"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}},"l":{"docs":{},"a":{"docs":{},"!":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}}},"n":{"docs":{"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.0030959752321981426},"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":2.011627906976744},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.0030959752321981426}}}},"m":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}},"u":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.0136986301369863},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.0111731843575419},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403}}}}},"s":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"v":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909}}}},"j":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"pages/part-3-types-of-malware.html":{"ref":"pages/part-3-types-of-malware.html","tf":0.00390625},"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":0.006896551724137931},"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":0.005917159763313609},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}},",":{"docs":{"pages/part-4-x86-assembly-intro.html":{"ref":"pages/part-4-x86-assembly-intro.html","tf":0.003484320557491289}}},"!":{"docs":{"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}}}}}}}}},"b":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.0036101083032490976},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}},"i":{"docs":{},"n":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.02631578947368421},"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.010101010101010102},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":0.006289308176100629},"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.014814814814814815}}}},"n":{"docs":{},"k":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"d":{"docs":{},"e":{"docs":{},"'":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"pages/part-19-why-learn-assembly.html":{"ref":"pages/part-19-why-learn-assembly.html","tf":0.018050541516245487},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.009216589861751152},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.019230769230769232}},",":{"docs":{"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}}}}}}},"e":{"docs":{},"e":{"docs":{},".":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"m":{"docs":{},"p":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.006666666666666667},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":0.005747126436781609}}}},"e":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}}}},"v":{"docs":{},"m":{"docs":{"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"n":{"docs":{},"e":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.022222222222222223}}}}},"(":{"0":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}},"1":{"0":{"8":{"4":{"5":{"docs":{},")":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}},")":{"1":{"1":{"0":{"0":{"0":{"1":{"0":{"1":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.015267175572519083},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-4-number-systems.html":{"ref":"pages/part-4-number-systems.html","tf":0.011235955056179775},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}},"2":{"2":{"1":{"5":{"docs":{},")":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}},"docs":{}},"docs":{}},"docs":{},"^":{"3":{"1":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"2":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}}},"3":{"2":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}},"docs":{}},"4":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.003738317757009346},"pages/part-9-x86-basic-architecture.html":{"ref":"pages/part-9-x86-basic-architecture.html","tf":0.005128205128205128}}},"5":{"9":{"5":{"7":{"5":{"docs":{},")":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757}}},"6":{"4":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}},"docs":{}},"8":{"docs":{"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458}}},"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}}}}}}}}},")":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-17-ror-instruction.html":{"ref":"pages/part-17-ror-instruction.html","tf":0.00847457627118644}}}},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}}}}},"i":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}},"n":{"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036},"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.005277044854881266},"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}},"m":{"docs":{},"g":{"docs":{},".":{"docs":{},"x":{"docs":{},"z":{"docs":{},")":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}},"f":{"docs":{"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":0.010309278350515464}}},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"o":{"docs":{},"r":{"docs":{"pages/part-10-general-purpose-registers.html":{"ref":"pages/part-10-general-purpose-registers.html","tf":0.002638522427440633}}},"f":{"docs":{},"f":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},"n":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.0022271714922048997}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}}}},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},")":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}}},"s":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522}}}}}}},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}}}},"n":{"docs":{},"c":{"docs":{"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.004132231404958678}}}}},"e":{"docs":{},"t":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203}}}}}}}}}},"x":{"8":{"6":{"docs":{"pages/part-11-segment-registers.html":{"ref":"pages/part-11-segment-registers.html","tf":0.003424657534246575}}},"docs":{}},"docs":{}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"pages/part-13-control-registers.html":{"ref":"pages/part-13-control-registers.html","tf":0.006802721088435374}},"e":{"docs":{},":":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}}}}},"z":{"docs":{},"c":{"docs":{},"v":{"docs":{},")":{"docs":{"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.008032128514056224},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.012605042016806723},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}}}}}}},"v":{"1":{"docs":{},".":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}},"docs":{}}},"docs":{}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00202020202020202}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":0.014084507042253521}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"i":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.04421768707482993}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"pages/part-9-link-register.html":{"ref":"pages/part-9-link-register.html","tf":0.005050505050505051}}}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"pages/part-10-stack-pointer.html":{"ref":"pages/part-10-stack-pointer.html","tf":0.004672897196261682}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.005952380952380952}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}}}}},"a":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"pages/part-12-von-neumann-architecture.html":{"ref":"pages/part-12-von-neumann-architecture.html","tf":0.011627906976744186}}}}}},"d":{"docs":{},"d":{"docs":{"pages/part-14-add.html":{"ref":"pages/part-14-add.html","tf":0.00684931506849315}}}},"s":{"docs":{},"l":{"docs":{},"r":{"docs":{},")":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}}},"c":{"docs":{},"p":{"docs":{},"s":{"docs":{},"r":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}},")":{"docs":{"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}}},")":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454}}},"−":{"2":{"docs":{},"^":{"3":{"1":{"docs":{},")":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}},"docs":{}},"docs":{}}},"docs":{}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"e":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"@":{"docs":{},")":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}},"!":{"docs":{},"(":{"docs":{},"i":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"z":{"docs":{"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}},"+":{"5":{"docs":{},"v":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00404040404040404},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.004454342984409799}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.029906542056074768},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.01616161616161616},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.030534351145038167},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.017817371937639197},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}},"+":{"docs":{},"m":{"docs":{},"y":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}}}}}}}}}}}},"=":{"0":{"docs":{},"]":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}}}}},"docs":{"pages/part-5-binary-number-system.html":{"ref":"pages/part-5-binary-number-system.html","tf":0.006756756756756757},"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.052336448598130844},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.002881844380403458},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.09649122807017543},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.03838383838383838},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.05343511450381679},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.028409090909090908},"pages/part-16-hacking-add.html":{"ref":"pages/part-16-hacking-add.html","tf":0.019801980198019802},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.02877697841726619},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.01606425702811245},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.01680672268907563},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.01834862385321101},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.02127659574468085},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.03225806451612903},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.028037383177570093},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.018867924528301886},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.01694915254237288},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.02727272727272727},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.021739130434782608},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.02097902097902098},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.02197802197802198},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.0196078431372549},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.03076923076923077},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.01904761904761905},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.020833333333333332},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.015590200445434299},"pages/part-9-calling-conventions.html":{"ref":"pages/part-9-calling-conventions.html","tf":0.05166051660516605},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.05970149253731343},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.014534883720930232},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.0103359173126615},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}},">":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.005607476635514018},"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0038022813688212928}}}},"'":{"docs":{},"h":{"docs":{},"'":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},".":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-39-why-c?.html":{"ref":"pages/part-39-why-c?.html","tf":0.012396694214876033}}}}},"y":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"'":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}},"'":{"docs":{"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}},"i":{"docs":{},"'":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}},"w":{"docs":{},"q":{"docs":{},"'":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":0.0033333333333333335}}}}},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"'":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}},"'":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}},"b":{"docs":{},"c":{"docs":{},"'":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{},"'":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}}}},"r":{"2":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}},"docs":{}},"s":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}},"b":{"docs":{},"'":{"docs":{},".":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473}}}}},"\\":{"0":{"docs":{},"'":{"docs":{},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}},"docs":{}},"c":{"docs":{},"'":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}},";":{"docs":{"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}}}}},"*":{"0":{"docs":{},"x":{"8":{"0":{"4":{"9":{"0":{"9":{"docs":{},"e":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}},".":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.014953271028037384}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"+":{"1":{"2":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}},"docs":{}},"2":{"4":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}},"8":{"docs":{"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993}}},"docs":{}},"docs":{}}}}}}},"^":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.03364485981308411}}},"y":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.015267175572519083},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"pages/part-6-hexadecimal-number-system.html":{"ref":"pages/part-6-hexadecimal-number-system.html","tf":0.001869158878504673},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":0.007575757575757576},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}},".":{"docs":{"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":0.00625}}}}}}}},".":{"docs":{"pages/part-15-stack.html":{"ref":"pages/part-15-stack.html","tf":0.0014084507042253522},"pages/part-40-conclusion.html":{"ref":"pages/part-40-conclusion.html","tf":0.011904761904761904}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}},",":{"docs":{"pages/part-16-heap.html":{"ref":"pages/part-16-heap.html","tf":0.004149377593360996}}}}},"e":{"docs":{},"t":{"docs":{},".":{"6":{"docs":{},")":{"0":{"docs":{},"x":{"docs":{},"a":{"0":{"0":{"0":{"0":{"docs":{"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{"pages/part-8-bytes-words-double-words-etc.html":{"ref":"pages/part-8-bytes-words-double-words-etc.html","tf":0.0035842293906810036}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"s":{"docs":{},",":{"docs":{"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.00808080808080808},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.011235955056179775}}}}}},"a":{"docs":{},"r":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.01282051282051282},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875},"pages/part-2-transistors.html":{"ref":"pages/part-2-transistors.html","tf":0.006535947712418301},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-42-hacking-branches!.html":{"ref":"pages/part-42-hacking-branches!.html","tf":0.007874015748031496},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01}}}}}},"m":{"docs":{},"m":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}},".":{"docs":{},"w":{"docs":{"pages/part-12-load-effective-address.html":{"ref":"pages/part-12-load-effective-address.html","tf":0.005813953488372093}}}}}}}}}}},"z":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"pages/part-7-transistors-and-memory.html":{"ref":"pages/part-7-transistors-and-memory.html","tf":0.0036363636363636364},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0041841004184100415},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-17-adds.html":{"ref":"pages/part-17-adds.html","tf":0.007194244604316547},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":0.004016064257028112},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":0.004201680672268907},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":0.0045871559633027525},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":0.005319148936170213},"pages/part-5-binary-addition.html":{"ref":"pages/part-5-binary-addition.html","tf":0.01},"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.009216589861751152}},".":{"docs":{"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.005681818181818182}},"t":{"docs":{},"h":{"docs":{"pages/part-14-flags.html":{"ref":"pages/part-14-flags.html","tf":0.0020920502092050207}}}}},",":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}},"s":{"docs":{},".":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}}}},"f":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}}},"‘":{"7":{"docs":{},"’":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}},"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-12-instruction-pointer-register.html":{"ref":"pages/part-12-instruction-pointer-register.html","tf":0.0076045627376425855}}}}}}},":":{"docs":{},"w":{"docs":{},"q":{"docs":{},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.011538461538461539}}}}}},"i":{"docs":{},"’":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}},".":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}},"n":{"docs":{},"’":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.016}},";":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}},".":{"docs":{"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":0.008}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"’":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521}}}}}}}}},"y":{"docs":{},"’":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.028169014084507043}},".":{"docs":{},"a":{"docs":{"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":0.014084507042253521}}}}}}},".":{"docs":{},"d":{"docs":{},"m":{"docs":{},"g":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":0.009009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":0.007874015748031496},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.014492753623188406}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0045045045045045045},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}},",":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}}}}},"/":{"0":{"docs":{},"x":{"0":{"1":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"2":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"_":{"6":{"4":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.00904977375565611}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"3":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"6":{"4":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}},"1":{"docs":{},"'":{"docs":{"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":0.004807692307692308},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291}}}},"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"4":{"docs":{"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669}}},"docs":{}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"s":{"docs":{"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125}}}},"i":{"docs":{},"n":{"docs":{"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":0.006578947368421052}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}}}}}}},">":{"docs":{},"_":{"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":0.0022522522522522522}}},">":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075}}}},"–":{"3":{"2":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":0.014285714285714285},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":0.0078125},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":0.006134969325153374},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}},"docs":{}},"docs":{"pages/part-17-how-to-install-linux.html":{"ref":"pages/part-17-how-to-install-linux.html","tf":2.0022522522522523},"pages/part-20-instruction-code-handling.html":{"ref":"pages/part-20-instruction-code-handling.html","tf":0.005763688760806916},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":2},"pages/part-2-number-systems.html":{"ref":"pages/part-2-number-systems.html","tf":0.010101010101010102},"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542},"pages/part-4-binary-subtraction.html":{"ref":"pages/part-4-binary-subtraction.html","tf":0.01},"pages/part-5-word-lengths.html":{"ref":"pages/part-5-word-lengths.html","tf":0.007633587786259542},"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306},"pages/part-7-program-counter.html":{"ref":"pages/part-7-program-counter.html","tf":0.013071895424836602},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.028409090909090908},"pages/part-11-arm-firmware-boot-procedures.html":{"ref":"pages/part-11-arm-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-13-instruction-pipeline.html":{"ref":"pages/part-13-instruction-pipeline.html","tf":0.023809523809523808},"pages/part-18-debugging-adds.html":{"ref":"pages/part-18-debugging-adds.html","tf":2.004016064257028},"pages/part-19-hacking-adds.html":{"ref":"pages/part-19-hacking-adds.html","tf":2.004201680672269},"pages/part-20-adc.html":{"ref":"pages/part-20-adc.html","tf":2.507575757575758},"pages/part-21-debugging-adc.html":{"ref":"pages/part-21-debugging-adc.html","tf":2.0045871559633026},"pages/part-22-hacking-adc.html":{"ref":"pages/part-22-hacking-adc.html","tf":2.00531914893617},"pages/part-23-sub.html":{"ref":"pages/part-23-sub.html","tf":2.5232558139534884},"pages/part-24-debugging-sub.html":{"ref":"pages/part-24-debugging-sub.html","tf":2.01980198019802},"pages/part-25-hacking-sub.html":{"ref":"pages/part-25-hacking-sub.html","tf":2.013793103448276},"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":1.433179723502304},"pages/part-11-firmware-boot-procedures.html":{"ref":"pages/part-11-firmware-boot-procedures.html","tf":0.018575851393188854},"pages/part-18-debugging-constants.html":{"ref":"pages/part-18-debugging-constants.html","tf":2.0140845070422535},"pages/part-19-hacking-constants.html":{"ref":"pages/part-19-hacking-constants.html","tf":2.0128205128205128},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":2.00561797752809},"pages/part-21-debugging-character-variables.html":{"ref":"pages/part-21-debugging-character-variables.html","tf":1.6746666666666665},"pages/part-22-hacking-character-variables.html":{"ref":"pages/part-22-hacking-character-variables.html","tf":1.68075117370892},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":2.0097087378640777},"pages/part-24-debugging-boolean-variables.html":{"ref":"pages/part-24-debugging-boolean-variables.html","tf":1.6790123456790123},"pages/part-25-hacking-boolean-variables.html":{"ref":"pages/part-25-hacking-boolean-variables.html","tf":1.6796536796536794},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":2.007751937984496},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":1.6741293532338306},"pages/part-28-hacking-integer-variables.html":{"ref":"pages/part-28-hacking-integer-variables.html","tf":1.68},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":2.0081967213114753},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":1.6735159817351597},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":1.6722532588454375},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":2.0104166666666665},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":1.675287356321839},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":1.675438596491228},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":2.010752688172043},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":1.6737089201877933},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":1.6723163841807909},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":1.6760124610591898},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":1.434860736747529},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":1.4342211460855527},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":1.6757575757575756},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":1.4358178053830226},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":1.4355644355644355},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":1.6776556776556775},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":1.4383753501400558},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":1.4439560439560437},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":1.676190476190476},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":1.4389880952380951},"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":1.4341894060995182},"pages/part-1-the-cyber-revolution.html":{"ref":"pages/part-1-the-cyber-revolution.html","tf":2.0059171597633134},"pages/part-3-logic-gates.html":{"ref":"pages/part-3-logic-gates.html","tf":0.008908685968819599}}},"[":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"0":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.015267175572519083},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}},"docs":{}}},"docs":{}},"1":{"0":{"docs":{},"c":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.0069605568445475635}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"6":{"docs":{},"b":{"docs":{},"e":{"0":{"1":{"9":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.00909090909090909}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"7":{"6":{"docs":{},"b":{"docs":{},"f":{"docs":{},"f":{"9":{"docs":{},"e":{"4":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}},"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.024844720496894408}}}}}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"7":{"docs":{},"f":{"9":{"7":{"2":{"7":{"5":{"0":{"3":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"b":{"1":{"4":{"6":{"docs":{},"c":{"docs":{},"b":{"8":{"docs":{},"c":{"docs":{},"]":{"docs":{},">":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{},"a":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.017543859649122806}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":1.4314954051796156},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":1.4424603174603172},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":1.4417293233082704}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.026923076923076925},"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":1.2513531799729365},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":1.253921568627451},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":1.2566666666666666},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"ref":"pages/part-25-asm-program-2-moving-data-between-registers.html","tf":1.1202854230377166},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":1.1256038647342996},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":1.1194444444444445},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","tf":1.0142857142857142},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":1.0136986301369864},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":1.0084745762711864},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","tf":1.0078125},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","tf":1.009009009009009},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"ref":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","tf":1.0078740157480315}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}}}},"t":{"docs":{"pages/part-18-boot-sector-basics-part-1.html":{"ref":"pages/part-18-boot-sector-basics-part-1.html","tf":1.4319047619047618},"pages/part-19-boot-sector-basics-part-2.html":{"ref":"pages/part-19-boot-sector-basics-part-2.html","tf":1.43431855500821},"pages/part-20-boot-sector-basics-part-3.html":{"ref":"pages/part-20-boot-sector-basics-part-3.html","tf":1.4386724386724385},"pages/part-21-boot-sector-basics-part-4.html":{"ref":"pages/part-21-boot-sector-basics-part-4.html","tf":1.4351503759398494},"pages/part-22-boot-sector-basics-part-5.html":{"ref":"pages/part-22-boot-sector-basics-part-5.html","tf":1.4388807069219438},"pages/part-23-boot-sector-basics-part-6.html":{"ref":"pages/part-23-boot-sector-basics-part-6.html","tf":1.4360341151385925},"pages/part-24-boot-sector-basics-part-7.html":{"ref":"pages/part-24-boot-sector-basics-part-7.html","tf":1.4348214285714285},"pages/part-25-boot-sector-basics-part-8.html":{"ref":"pages/part-25-boot-sector-basics-part-8.html","tf":1.434860736747529},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":1.435238095238095},"pages/part-27-x64-assembly-part-1.html":{"ref":"pages/part-27-x64-assembly-part-1.html","tf":1.6836158192090394},"pages/part-28-x64-assembly-part-2.html":{"ref":"pages/part-28-x64-assembly-part-2.html","tf":1.6803652968036529},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":1.681159420289855},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":1.6695736434108526},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":1.6904761904761902},"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":1.6740740740740738},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":1.6759259259259258},"pages/part-34-x64-c++-1-code-part-1.html":{"ref":"pages/part-34-x64-c++-1-code-part-1.html","tf":1.2548076923076923},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":1.2552910052910053},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":1.2564102564102564}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.007692307692307693}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.014619883040935672}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{"pages/part-18-vim-text-editor.html":{"ref":"pages/part-18-vim-text-editor.html","tf":0.0038461538461538464}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"]":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}}}}}}}},"n":{"docs":{},"e":{"docs":{"pages/part-3-binary-addition.html":{"ref":"pages/part-3-binary-addition.html","tf":0.007633587786259542}}}},"k":{"docs":{},"]":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}},"l":{"docs":{},"]":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"ref":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","tf":1.2561349693251533},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":1.2546296296296295},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":1.2565359477124183}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.005847953216374269}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}},"r":{"1":{"0":{"docs":{},"]":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"1":{"docs":{},",":{"docs":{"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806}}}},"docs":{}},"4":{"docs":{},"]":{"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.003401360544217687}}}},"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.015267175572519083}},",":{"docs":{"pages/part-10-boolean-instructions.html":{"ref":"pages/part-10-boolean-instructions.html","tf":0.007633587786259542},"pages/part-11-pointers.html":{"ref":"pages/part-11-pointers.html","tf":0.00909090909090909}}}}}},"b":{"docs":{},"p":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.009852216748768473}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"1":{"docs":{},"_":{"docs":{},"h":{"docs":{},"]":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}},",":{"docs":{"pages/part-40-hacking-hello-world!.html":{"ref":"pages/part-40-hacking-hello-world!.html","tf":0.0049261083743842365}}}}}}},"docs":{}}}}}}},"%":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}},"x":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},",":{"docs":{"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}},"s":{"docs":{},"p":{"docs":{},",":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.0030303030303030303}}}}},"a":{"docs":{},"x":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-37-asm-program-6-cmov-instructions.html":{"ref":"pages/part-37-asm-program-6-cmov-instructions.html","tf":0.0029239766081871343}}}}}},":":{"docs":{"pages/part-21-how-to-compile-a-program.html":{"ref":"pages/part-21-how-to-compile-a-program.html","tf":0.006060606060606061}},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"pages/part-32-x64-assembly-part-6.html":{"ref":"pages/part-32-x64-assembly-part-6.html","tf":0.007407407407407408}}}}}}}}}}},"#":{"8":{"docs":{"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095}}},"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.017241379310344827},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.017543859649122806}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385}}}}}}}},"a":{"docs":{},"r":{"docs":{},"m":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}},"s":{"docs":{},"m":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}},"c":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"0":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}},"x":{"8":{"0":{"docs":{},".":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}},"docs":{}},"docs":{}}},"1":{"docs":{},",":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}},"3":{"5":{"docs":{"pages/part-1-the-meaning-of-life-part-2.html":{"ref":"pages/part-1-the-meaning-of-life-part-2.html","tf":0.002304147465437788}}},"docs":{}},"docs":{},"e":{"docs":{},"a":{"docs":{},"x":{"docs":{"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}}},"d":{"docs":{},"x":{"docs":{"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333}}}},"c":{"docs":{},"x":{"docs":{"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644}}}},"b":{"docs":{},"x":{"docs":{},".":{"docs":{"pages/part-38-asm-debugging-6-cmov-instructions.html":{"ref":"pages/part-38-asm-debugging-6-cmov-instructions.html","tf":0.013888888888888888}}}}},"i":{"docs":{},"p":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}}}}},"r":{"1":{"1":{"docs":{"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.02112676056338028},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.01694915254237288}}},"docs":{}},"docs":{}}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"_":{"3":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00784313725490196}}},"/":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.020671834625323}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"pages/part-22-asm-program-1-moving-immediate-data.html":{"ref":"pages/part-22-asm-program-1-moving-immediate-data.html","tf":0.0013531799729364006},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","tf":0.0136986301369863},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"ref":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","tf":0.00847457627118644},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301},"pages/part-26-boot-sector-basics-part-9.html":{"ref":"pages/part-26-boot-sector-basics-part-9.html","tf":0.006666666666666667},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465}},"+":{"0":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}},"5":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098}}},"docs":{}},".":{"docs":{"pages/part-39-asm-hacking-6-cmov-instructions.html":{"ref":"pages/part-39-asm-hacking-6-cmov-instructions.html","tf":0.013157894736842105}},"w":{"docs":{"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"ref":"pages/part-23-asm-debugging-1-moving-immediate-data.html","tf":0.00392156862745098},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"ref":"pages/part-24-asm-hacking-1-moving-immediate-data.html","tf":0.006666666666666667}}},":":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}}},"a":{"docs":{"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"ref":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","tf":0.006535947712418301}}}},",":{"docs":{"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"ref":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","tf":0.014492753623188406},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"ref":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","tf":0.008333333333333333},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629},"pages/part-15-debugging-add.html":{"ref":"pages/part-15-debugging-add.html","tf":0.009009009009009009}}}}}}}},"a":{"docs":{},"r":{"docs":{},"m":{"6":{"4":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.002320185614849188},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545},"pages/part-7-debugging-basic-io.html":{"ref":"pages/part-7-debugging-basic-io.html","tf":0.004524886877828055},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304},"pages/part-9-character-primitive-datatype.html":{"ref":"pages/part-9-character-primitive-datatype.html","tf":0.006211180124223602},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{"pages/part-43-hacking-pointers!.html":{"ref":"pages/part-43-hacking-pointers!.html","tf":0.010752688172043012}}}}},"i":{"docs":{},"n":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.007633587786259542}}}}},"docs":{}},"docs":{}}}},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}},"l":{"docs":{},".":{"docs":{"pages/part-8-general-architecture.html":{"ref":"pages/part-8-general-architecture.html","tf":0.007633587786259542}}}}}}}}}}}}},"|":{"docs":{"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"ref":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","tf":0.004629629629629629}},"|":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.007751937984496124}}}},"\"":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.013636363636363636}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-1-the-meaning-of-life.html":{"ref":"pages/part-1-the-meaning-of-life.html","tf":0.006802721088435374},"pages/part-29-x64-assembly-part-3.html":{"ref":"pages/part-29-x64-assembly-part-3.html","tf":0.028985507246376812},"pages/part-30-x64-assembly-part-4.html":{"ref":"pages/part-30-x64-assembly-part-4.html","tf":0.0029069767441860465},"pages/part-31-x64-assembly-part-5.html":{"ref":"pages/part-31-x64-assembly-part-5.html","tf":0.023809523809523808},"pages/part-33-x64-assembly-part-7.html":{"ref":"pages/part-33-x64-assembly-part-7.html","tf":0.018518518518518517},"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.01282051282051282},"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":2.5139211136890953},"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":2.0076335877862594},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":2.0025839793281652}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"pages/part-49-hacking-post-decrement-operator.html":{"ref":"pages/part-49-hacking-post-decrement-operator.html","tf":0.0056179775280898875}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"pages/part-6-binary-subtraction.html":{"ref":"pages/part-6-binary-subtraction.html","tf":0.008849557522123894}}}}}}},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}}},"x":{"6":{"4":{"docs":{},"\"":{"docs":{"pages/part-7-word-lengths.html":{"ref":"pages/part-7-word-lengths.html","tf":0.004608294930875576}}}},"docs":{}},"docs":{}},"i":{"docs":{"pages/part-36-x64-c++-3-hacking-part-3.html":{"ref":"pages/part-36-x64-c++-3-hacking-part-3.html","tf":0.00641025641025641}}},"a":{"docs":{"pages/part-41-hacking-variables!.html":{"ref":"pages/part-41-hacking-variables!.html","tf":0.007407407407407408}}},";":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}},"d":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375},"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{"pages/part-6-basic-io.html":{"ref":"pages/part-6-basic-io.html","tf":0.004545454545454545}},"r":{"docs":{"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}}}}},"@":{"0":{"docs":{},"x":{"5":{"5":{"6":{"2":{"9":{"docs":{},"c":{"docs":{},"a":{"docs":{},"b":{"4":{"8":{"docs":{"pages/part-3-\"hello-world\".html":{"ref":"pages/part-3-\"hello-world\".html","tf":0.004640371229698376}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"b":{"4":{"8":{"docs":{"pages/part-4-debugging-\"hello-world\".html":{"ref":"pages/part-4-debugging-\"hello-world\".html","tf":0.022900763358778626}}},"docs":{}},"docs":{}}}},"docs":{"pages/part-6-registers.html":{"ref":"pages/part-6-registers.html","tf":0.01020408163265306},"pages/part-8-cpsr.html":{"ref":"pages/part-8-cpsr.html","tf":0.011363636363636364},"pages/part-35-x64-c++-2-debug-part-2.html":{"ref":"pages/part-35-x64-c++-2-debug-part-2.html","tf":0.005291005291005291},"pages/part-10-debugging-character-primitive-datatype.html":{"ref":"pages/part-10-debugging-character-primitive-datatype.html","tf":0.009009009009009009}}},"{":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-2-development-setup.html":{"ref":"pages/part-2-development-setup.html","tf":0.010638297872340425},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}},"}":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.0026455026455026454},"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641},"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875},"pages/part-23-boolean-variables.html":{"ref":"pages/part-23-boolean-variables.html","tf":0.009708737864077669},"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-29-float-variables.html":{"ref":"pages/part-29-float-variables.html","tf":0.00819672131147541},"pages/part-30-debugging-float-variables.html":{"ref":"pages/part-30-debugging-float-variables.html","tf":0.00684931506849315},"pages/part-31-hacking-float-variables.html":{"ref":"pages/part-31-hacking-float-variables.html","tf":0.00558659217877095},"pages/part-32-double-variables.html":{"ref":"pages/part-32-double-variables.html","tf":0.010416666666666666},"pages/part-33-debugging-double-variables.html":{"ref":"pages/part-33-debugging-double-variables.html","tf":0.008620689655172414},"pages/part-34-hacking-double-variables.html":{"ref":"pages/part-34-hacking-double-variables.html","tf":0.008771929824561403},"pages/part-35-sizeof-operator.html":{"ref":"pages/part-35-sizeof-operator.html","tf":0.010752688172043012},"pages/part-36-debugging-sizeof-operator.html":{"ref":"pages/part-36-debugging-sizeof-operator.html","tf":0.007042253521126761},"pages/part-37-hacking-sizeof-operator.html":{"ref":"pages/part-37-hacking-sizeof-operator.html","tf":0.005649717514124294},"pages/part-38-pre-increment-operator.html":{"ref":"pages/part-38-pre-increment-operator.html","tf":0.009345794392523364},"pages/part-39-debugging-pre-increment-operator.html":{"ref":"pages/part-39-debugging-pre-increment-operator.html","tf":0.006289308176100629},"pages/part-40-hacking-pre-increment-operator.html":{"ref":"pages/part-40-hacking-pre-increment-operator.html","tf":0.005649717514124294},"pages/part-41-post-increment-operator.html":{"ref":"pages/part-41-post-increment-operator.html","tf":0.00909090909090909},"pages/part-42-debugging-post-increment-operator.html":{"ref":"pages/part-42-debugging-post-increment-operator.html","tf":0.007246376811594203},"pages/part-43-hacking-post-increment-operator.html":{"ref":"pages/part-43-hacking-post-increment-operator.html","tf":0.006993006993006993},"pages/part-44-pre-decrement-operator.html":{"ref":"pages/part-44-pre-decrement-operator.html","tf":0.01098901098901099},"pages/part-45-debugging-pre-decrement-operator.html":{"ref":"pages/part-45-debugging-pre-decrement-operator.html","tf":0.00980392156862745},"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.00516795865633075},"pages/part-8-hacking-basic-io.html":{"ref":"pages/part-8-hacking-basic-io.html","tf":0.010869565217391304}}},"“":{"2":{"0":{"1":{"7":{"docs":{},"”":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"pages/part-14-hello-world.html":{"ref":"pages/part-14-hello-world.html","tf":0.007936507936507936},"pages/part-15-debugging-hello-world.html":{"ref":"pages/part-15-debugging-hello-world.html","tf":0.007662835249042145},"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.011904761904761904}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"pages/part-16-hacking-hello-world.html":{"ref":"pages/part-16-hacking-hello-world.html","tf":0.017857142857142856}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"”":{"docs":{"pages/part-17-constants.html":{"ref":"pages/part-17-constants.html","tf":0.00641025641025641}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}}}}}},"n":{"docs":{},"”":{"docs":{"pages/part-20-character-variables.html":{"ref":"pages/part-20-character-variables.html","tf":0.0056179775280898875}}}}},"−":{"2":{"docs":{},",":{"1":{"4":{"7":{"docs":{},",":{"4":{"8":{"3":{"docs":{},",":{"6":{"4":{"8":{"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.007751937984496124},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"pages/part-26-integer-variables.html":{"ref":"pages/part-26-integer-variables.html","tf":0.015503875968992248},"pages/part-27-debugging-integer-variables.html":{"ref":"pages/part-27-debugging-integer-variables.html","tf":0.014925373134328358}}},";":{"docs":{"pages/part-46-hacking-pre-decrement-operator.html":{"ref":"pages/part-46-hacking-pre-decrement-operator.html","tf":0.015384615384615385},"pages/part-47-post-decrement-operator.html":{"ref":"pages/part-47-post-decrement-operator.html","tf":0.009523809523809525},"pages/part-48-debugging-post-decrement-operator.html":{"ref":"pages/part-48-debugging-post-decrement-operator.html","tf":0.010416666666666666},"pages/part-5-hacking-\"hello-world\".html":{"ref":"pages/part-5-hacking-\"hello-world\".html","tf":0.002583979328165375}}}},"length":18975},"corpusTokens":["\"","\";","\"a","\"dude","\"enter","\"hello","\"i","\"littl","\"r\",","\"the","\"x64\"","\"you","\"your","#","#8","#arm","#asm","#cplusplu","#includ","#reverseengineeringnext","$0,","$0x80.","$0x80.line","$1,","$35","$eax","$ebx.","$ecx","$edx","$eip","$r11","%eax","%ebp","%ebx","%ebx,","%esp,","&","&amp;&amp;","&answer.i","&gt;&gt;","&gt;=","&lt;&lt;","&lt;=","'\\0';","'a'","'a'.","'aaa'","'abc'","'b'.","'c'","'c';","'e'","'esc'","'h'","'h'.","'hello","'hey","'i'","'pdf'","'r2","'s","'wq'","(","(!(i","(!valid)","()","(.data","(.text","(0","(1","(1)","(1)11000101","(10845)","(2215)","(2^31","(2^32","(32","(4","(5","(59575)","(64","(8","(@)","(a","(add","(along","(aslr)","(b.eq","(branch","(cpsr","(cpsr)","(eip)","(esp),","(gener","(here)","(hex)","(hexadecimal)","(i","(if","(img.xz)","(in","(ios,","(last","(less","(load","(movz","(not","(note:","(nzcv)","(off","(on","(or","(pid)","(program","(rip","(set","(sign","(sinc","(ss)","(standard","(technic","(terminal)","(these","(thi","(translat","(unless","(unsign","(unsigned)","(v1.2),","(we","(with","(x86","(−2^31)","*","*0x804909e","*0x804909e.","*main+12","*main+24","*main+28","+","++mynumber;","+5v","./","./0x01_asm_64_helloworld","./0x02_asm_64_basicio","./0x03_asm64_char_primitive_datatyp","./1'","./example4","./exit",".bin",".bss",".data",".dmg",".iso",".iso,",".text","//","/usr/include/asm/unistd_32.hbelow","/x","0","0'","0)","0).","0,","0.","0.\"the","0.2)can","0.6)can","0.7)can","0.8)can","0.after","0.and","0.ex:","0.let","0.or","0.when","0.xor","00","00.","00.it","0000","00000001b.","00000010b","0001","0001.therefor","00010100","0001010000000101next","00010100b","0001010100010101therefor","0010","0010.therefor","0010:the","0011","0011a","00if","01","0100","0100010100100100101010","0101","010101000101001011","01010101","01010101b","0110","0111","01110000","0:","0;","0]cmov","0]cmova","0]cmovb","0]cmovl","0]cmovnc","0]cmovp","0]keep","0ex:———————ex:","0not","0or","0v","0v.we","0x","0x0","0x00000000","0x00000001","0x00000004","0x00000008","0x0000000c","0x00000063","0x000009ec","0x00001000","0x00001000,","0x000010c4","0x0000113d","0x00001144","0x00001148","0x0000114a","0x00001158","0x01.","0x01_asm64_helloworld","0x01_asm64_helloworld.cpp","0x02","0x02_asm64_basicio","0x02_asm64_basicio.cpp","0x03_asm64_char_primitive_datatyp","0x03_asm64_char_primitive_datatype.cpp","0x05","0x08048092","0x080480b1","0x080480dd","0x0804843b","0x1","0x10","0x10).let’","0x10,","0x10.","0x10.a","0x10730","0x10730.a","0x10750","0x10848.","0x10in","0x1158.","0x1214","0x1214)","0x15","0x16","0x19","0x1],","0x1in","0x20","0x20.","0x200","0x2004","0x2005","0x2005!boom!","0x22","0x222323123,","0x30","0x39","0x4.","0x43","0x45","0x48","0x50","0x50.","0x50.we","0x539","0x55629ca9e4","0x55629cab48","0x55629cab48.w","0x5566be00c4","0x5566be00cc","0x5566be017c","0x5566be01d0","0x5566be0214","0x5566be0218","0x5566be0238","0x5566be0244","0x5576bff9ec","0x5f","0x6000d8","0x6000d8.a","0x61","0x61.","0x62","0x63","0x63.if","0x64","0x65.","0x66","0x66)","0x66.bam!","0x66.thi","0x66thi","0x680cec83.let","0x6e","0x73fff3a0.pleas","0x78","0x7c00.","0x7e00.","0x7efff230","0x7efff39c","0x7efff3a0","0x7efff3a0.when","0x80","0x80,","0x80.at","0x800.let","0x8000","0x8000,","0x8000.let","0x8001,","0x8002,","0x8003,","0x8049090","0x804909e","0x80490a2","0x80490a2.","0x90","0xa","0xaa55","0xaabb.","0xb","0xb48","0xb48.","0xbbaa","0xe","0xea","0xefff39c.","0xf7fac3dc","0xfe","0xff","0xffffd030","0xffffd040","0xffffd040,","0xffffd050.","0xffffffff","0xffffffff.","0xffffffffffffffff.thi","0xor","1","1!\".when","1)","1)(2","1,","1,024","1.","1.2ghz","1.ex:","1.in","1.let","1.let’","1.not","1.or","1.the","1.xor","10","10)","10,","10.","10.(2","10.binari","100","1000","10000000b","10000000b.next","101","1010","10103","1010it","1010offset","1011","102","108355","10:","10b.you","11","110","11000101","1101","11010101","11101011","1110op","1111","1111.","11110000","119!thi","11:","12","120","120.","120:","128","12:","12]","13","1337","1337.09998","1337.1","1337.1;","1337.77","1337.77;","13:","13c","14","14:","15","15.","15.let'","15:","15therefor","16","16.","16.00","16.next","16/","16:","16;","16^0","16^1","17","17.","17.let'","17.let’","17.next","17.we","17.when","17/in","18","19","192","1921","1981!","1981.","1:","1]","1]cmovb","1]cmovc","1]cmove","1]cmovl","1]cmovn","1]cmovno","1]cmovnp","1]cmovo","1]for","1next","1st","2","2,","2,000","2,147,483,647","2.","2.00000010invert","2.invert","2.we","20","20,","200","20000010","2001.","200h","201","2017,","2017.","2017.we","2017;","201?","21","21,","22","22,","22.","23","24","24.4)can","240","2405","245","24:","25","25.if","255","255.everi","256","256.","256f","26","27","28","28:","29","2:","2]","2]for","2^32","2^8","2a","2for","2i","2nd","3","3,","3.","3.when","30","30,","31","31,","31.","31.a","32","320","3210","328","33","34","35","352","36","37","38","39","3:","3]","3]for","3rd","3x","4","4,","4,294,967,295","4,294,967,296","4.","4.we","40","4096","40rememb","41","42","42.grab","4294967295","42in","43","44","45","46","46.","47","48","49","4:","4]","4]for","4gb","4x","5","5,","5.0.24","50","51111","512","515","53","53.i","55","56","56.3)can","56:","5:","5]","5]for","6","6,","6.we","60","61,440","61,44013","61,901addit","64","64.in","640x200","64gb","65","66","66!now","666","666.i","67","6:","6]","6]for","7","7,","7.ok","777","777.we","777;","7:","7]","7]for","8","8,","8.","8.00","8.5)can","8.a","8.if","80","8000","800a0054","80483de","8080","8086","80f","850","8:","8]","8]for","8th","9","9.","93","95","955","99","9:","9]","9]for",":",":)...here",";","=","=0]there","=>",">>",">_","@","@0x55629cab48","@0xb48","[0x000009e4]>","[0x000010c4]>","[0x55629ca9e4]>","[0x5566be0194]>","[0x5576bff9e4]>","[0x5576bff9ec]>","[0x7f9727503c]>","[0x7fb146cb8c]>","[carri","[cmov","[comment]a","[copi","[delet","[https://www.offens","[indirect","[local1_h]","[local1_h],","[move","[ok]","[ol]","[one","[operands]","[overflow","[pariti","[part","[put","[quit","[r10]","[r11,","[r4]","[rax]","[rax],","[rbp","[save","[sign","[thi","[undo","[zero","^","__fastcal","__fastcall.","_arm64in","_arm64today","_arm64whi","_start","_start+0","_start+5","_start,","_start.","_start.:","_start.a","_start.w","a,","a24","a53,","a:.data","aa","aa.","aaa","aaron","abc","abil","about:1)th","abov","above!“i’m","above,","above.","above.a","above.let","above.next","above.thi","above.w","above.y","absenc","absent","absolut","abstract","academ","accept","access","access.ds:","access.es:","access.thi","accomplish","accordingli","account","account.","accumulator,","accur","acquir","act","action","activ","actual","ad","adc","adc.","adc.let’","adc.o","adcfor","add","add,","add.","add.let’","add.o","add.olet’","add.sld","addfor","addit","addition","addition!","addition,","addition.if","additionfor","addm","addme(int","address","address!","address,","address.","address.in","address.let","address.th","address.voila!","address:rememb","addressable.","addresses.","addresses.th","addressfor","adds.","addsfor","addw","adjust","advanc","advantag","advantage!tada!","advis","affect","aforement","ag","again","again!./0x01_asm_64_helloworld","again,","again.a","again.https://media","again.let’","again.w","again:w","against","age)","age.","age:","ages!","agil","ago.let’","ah","ah,","ahead","ai,","aim","al","al,","algorithm","align","all.","alloc","allocation.text","allow","alon","along","along.3)w","along.let'","alot","alreadi","alsr.address","alter","although","alway","always2)op","amaz","amazon","amd","amount","analysi","analysis,","analysis.","analysis.[0x55629ca9e4]>","analysis.stat","analysis.upon","analyst","analyz","analyze.aaa","analyze:assembly!","and,","and/or","android","android,","android.","anoth","answer","answer,","anticip","anticipated.","antiviru","anyth","anything.in","anywher","apart","apparent.","appear","appli","applianc","applic","application.tf:","application.th","applications.th","applications/malwar","appreci","approach","approach:1)program2)debug3)hackeach","appropri","appropriately.","approxim","apt","aqua","archaic","architectur","architecture!","architecture.","architecture.eax:","architecture.th","architecturefor","architectures,","architectures.","architectures.next","archiv","are:1)control","are:1)fetch","are:bit","area","area.regard","argument","arithmet","arlington,","arm","arm,","around","around.","around.let'","arrang","array","array.","array.thi","array.w","array:let'","arrays.in","arriv","arrow","arrows.","as:0x3a","as:cmova","as:cmovg","as:cmp","as:it","ascii","asid","ask","ask!th","ask,","ask.","asked!","aslr","asm","assembl","assembler:to","assembly,","assembly.","assembly.assembl","assembly.i","assembly.let","assembly.thi","assembly.w","assembly.x86","assembly:w","assemblyfor","assign","assigned.let'","associ","assum","at&t","at.let'","at:","attach","attack","attack.th","attacks.","attempt","attent","audienc","augment","author","auto","autom","automat","avail","available.","aw","awar","away","ax","ax,","azur","b","b)","b),","b)’","b,","b.","b.eq","b.ne","b8","baby!w","back","backdoor","background","backward","balenaetch","bar","bare","base","base.","base.it","base.und","based.arm","based.y","basi","basic","basics!","basics.","basics.let'","basics.next","basics.th","basicsfor","bcm2837","be","be:10100000next","be:b8","becom","becomes.a","befor","before.w","begin","begin,","beginn","beginning!i","begins.crit","behavior","behavior).th","behind","believ","bell","below","below,","below.","below.a","below.below","below.fin","below.https://www.linkedin.com/pulse/assembl","below.i","below.in","below.let'","below.let’","below.th","below.w","below:a","below:again","below:eax","below:in","below:let","below:let’","beneath","benefici","beq","better","between","bh","bh,","bidding.","big","biggest","billion","bin","binari","binaries.","binaries.i","binary!","binary,","binary.","binary.1)can","binary.[0x5566be0194]>","binary.a","binary.homework:","binary.i","binary.let'","binary.next","binary.ok,","binary.ther","binary.thi","binary.understand","binary.w","binary.whi","binary.y","binary:a","binary:w","bio","biochem","bios.next","bit","bit)","bit),","bit).a","bit,","bit.","bit.th","bite","bits,","bits.","bits.11111101let’","bits.2)word","bits.add","bits.esi,","bits.esi:","bits.long","bits.ther","bl","bl,","block","block.","block.w","block:w","blue","bm0bxsu\"/>w","bne","bodi","bone","bool","boolean","boot","boot.","boot.7)0xc0000","boot.next","bootabl","bootcode.bin","bootload","boots,","bootsector.1)0x0","bootsector.asm.","bootstrap","bored!","borrow","both","both.","both.let’","botnet","bottom","boundari","box","box,","boy","bp","bp,","branch","branch3)offset","branches!","branches!for","break","break.a","breakdown","breakpoint","breakpoint.let'","bridg","brief","briefli","bring","broadcom","broke","broken","broken?","brought","browser.https://www.linkedin.com/pulse/assembl","bu","buffer","buffer.if","buffer.let'","build","built","bullet","bus.th","busi","button","button.ent","button.it","button.th","bx","bx,","by:a","by:nasm","bypass","byte","byte(s)","byte).","byte,","byte.","byte.0101","byte.befor","byte.therefor","bytes,","bytes.","bytes.w","c","c#","c++","c++,","c++.#linux","c++?","c,","c.","c.like","c.we","c00c8052","c2","c?","c?for","cach","calculation.th","calculations.","calculators,","call","call,","call.when","calloc(),","can't","cancel","can’t","cap","capabl","capacitor","capit","capston","captur","card","care","care?\"thi","career","carefulli","carri","carry)","case","case,","cases.","catastroph","categori","caus","cd","ce","cell","cell.","center","ceo","certain","cf","cf,","ch","ch,","chain","chained.th","challeng","champagne!","champagne!when","chang","change.befor","changes]y","char","charact","character.let’","character]0","character]l","characterist","characters.","characters.next","charg","charge.","check","checked,","chemic","childishli","children","chip","chip.","chip.aft","chipset.","chipset.gener","choic","choice.","choke","choos","choose.at","choose.w","choosing.[0x000009e4]>","choosing.cod","chose","church","cin","cin,","cin.","circle.in","circuit","circumst","cisc","cisc,","cl","class.","clean","clean.ther","clear","clear.","cleared,","clearer","clearli","cli","click","cloaking/hid","clock","clone","close","closely.","closer","closer.","cloud","cloud.th","cmn","cmn.","cmov","cmov_instruct","cmov_instructions.o","cmov_instructions.sto","cmovb","cmovna","cmovnb","cmovng","cmovnl","cmovnz","cmovp","cmovpo","cmovz","cmp","cmp,","co","code","code!","code!w","code,","code.","code.#includ","code.compile...debug...let'","code.i","code.int","code.let","code.let'","code.let’","code.objdump","code.ok","code.regard","code.start","code.w","code.when","code:","code:compile:run:for","code:compile:run:let'","code:let'","code:mov","code:th","code:w","codein","codes.","coding!","coffe","coffee,","cog","colleg","collis","color","column","combin","come","comfort","command","command,","command.","command.our","commands.","commands:j","comment","comments!","comments,","comments.","comments.i","commerci","common","commun","compani","company,","compar","comparison","comparison.next","compat","compil","compile,","compile.","compile...a","compile.let'","compile:a","compile:let'","compile:w","compiler.keep","complement.keep","complet","complete.","complex","complic","compliment","compon","components.","comprehens","comprehensive.next","compris","compromise.","comput","computer'","computer,","computer.","computer.a","computer.below","computer.scarewar","computers.thi","con","concentr","concept","concept.","concept.each","concept.th","concern","conclud","conclus","conclusionfor","condit","conduct","config.txt","configur","configured,","confirm","confus","confused,","confusing.","confusing.keep","conjunct","connect","consid","consider","consist","consol","console.","console.th","console:a","const","constant","constant.","constant.a","constant.i","constant.now","constant.w","constantli","constants.","constantsfor","construct","consuming.revers","consumption.how","contain","contains,","content","content/uploads/2012/02/bcm2835","contents.[0x5576bff9e4]>","context","contigu","continu","continue!","continue.a","continue.at","continue.success!","continue.successfulli","continue.th","continue.w","continued.","contrast","contrast,","control","control,","control.don’t","control.i","convent","conventions!","conventionsfor","convers","conversion:d","convert","copi","coprocessor","core","core.","corner","cornerston","corpor","correct","correspond","corrupt","cortex","counter","counter!","counter)","counter.","counter.th","counterfor","coupl","cours","course.","cout","cout.let'","cout.let’","cover","cover.","cpp","cpsr","cpsr!","cpsr.","cpsr.let’","cpsr.next","cpsrfor","cpu","cpu,","cpu.","cpu.let’","cpuid","cr.","cr0","craft","crap","crap?so","crash","creat","create,","create.it","create.th","create.then","created,","created.","creating,","crippl","criteria.fin","critic","crystal","cs","cup","curb","current","cursor","cursor]u","custom","cut","cx","cx,","cyber","cyber.","cycl","cycles.y","d","d,","d0","d0,","d0.let’","d040,","daily.when","damn","danger","data","data,","data.","data.edi:","data.keep","data.let’","data.next","data.with","data]","data]for","dataset","datasheet","datasheet!i","datasheet:https://www.raspberrypi.org/wp","datatyp","datatype.","datatype.to","datatypefor","datayp","date.","day","day.i","db","db,","dc","dd","dd,","de","deal","dealt","debug","debug!","debug!a","debug!let’","debug!w","debug!woah!","debug.a","debug.it","debug.let'","debug.let’","debug.w","debug:","debug:gdb","debug:then","debug:w","debugg","debugger.","debugger.i","debugger.th","debugger:don't","debugger:let'","debuggin","debugging.","debugging.th","decid","decim","decimal)","decimal)?","decimal,","decimal.","decimal.a","decimal.ad","decimal.aft","decimal.hopefulli","decimal.if","decimal.let’","decimal.th","decimal:2","decimal:to","decimalin","declar","decod","decompil","decrement","decremented.","deep","deeper","deeper.in","default","defend","defer","defin","definit","definitions.bss","deleted.","deliber","demand","demonstr","denied.th","denot","depend","derefer","deriv","derived.","describ","descriptor","design","desir","desire!a","desktop","despit","destin","destination)","destroy","destruct","detail","details.\"","detect","determin","dev","develop","develop,","development,","development.","development.if","devic","device,","device.#includ","device.3)0x7c00","device.a","device.in","df","dh","dh,","di","di,","diagram","diagram:when","dial","differ","differently.th","digest","digit","digit.next","digits,","digits.","dinosaur","diod","direct","directli","directori","disa","disabl","disas,","disas.w","disas:now","disassembl","disassemble.a","disassemble.let’","disassemble:a","disassemble:let'","disassembled.w","disassembler,","disassembler/debugg","disassembly,","disassembly.","disassembly.let’","disassembly.v","discourag","discuss","discussed.","discussed.[0x000010c4]>","discussing.","disk","disk).to","disk.radare2","dispatch","display","displayed.th","distinct","distinction.oper","dive","divid","divis","dl","do","do.","do.next","do.und","do.upon","do.w","do:mov","do?","document","does.","does.2)th","doing).4)0x7e00","doing.next","doing.und","dollar","domain.let","domin","don't","done","don’t","door","doubl","double.","dove","down","down,","down.","down:w","download","downward","downward.","dozen","dq","dq,","dr","dramat","draw","drones,","ds","ds,","dude","dump","duplic","durat","dure","dw","dw,","dword","dx","dx,","dynam","e","ea@","each","each.","each.in","each.regist","ear","earli","earlier","earth","easav","easi","easier","easili","easily.y","eax","eax,","eax.","eax.i","eax.keep","eax.w","eb","eb.","ebp","ebp.]intel","ebx","ebx,","ebx.on","ebx.w","echo","echoed,","echo’","ecx","ecx,","ecx.keep","ecx.w","edi","edi,","edi.","edit","editor","editor.","editor.a","editor.clos","editor]:q!","editorfor","educ","edx","effect","effici","effort","eflag","eight","einstein","eip","eip,","either.w","electr","electrod","electron","element","element,","elementari","elf","elf32","elf64","elf_i386","else,","else.let’","else.success!","else.w","emb","embark","embed","emerg","emit","emphas","employ","empty.th","emul","emulator.","enabl","encourag","end","endian","endian,\"","endian?","endl","endl.","enemi","engag","engin","engineer,","engineer.in","engineer.stay","engineering,","engineering.","engineering.i","engineering.th","engineering?","engineering?just","engineers!","enorm","enough","enough.4)w","ensur","enter","enter,","enter.","enter.congratulations!","enter.in","enter.next","entir","entirety.","entri","entries.","environ","environment,","environment.","environment.th","environment.ther","environments.for","environments.in","equal","equal,","equal.","equal.let'","equival","equivalent.let","eras","error","error).","error.","es","es,","esi,","esp","esp,","esp.]you","essenc","essenti","etc","etc...","etc...for","etc...next","etc.2)bss","etc.keep","ethic","evalu","even","event","everyon","everyth","everywher","evolv","ex:","ex:———————ex:","exact","exactli","examin","examination,","examination.","examinations,","exampl","example,","example.","example.#includ","example.a","example1","example1.cpp","example10./example10w","example10.cpp","example2","example2.cpp","example3.cpp","example3w","example4","example4.cpp","example5./example5success!","example5.cpp","example6./example6success!","example6.cpp","example7./example7success!","example7.cpp","example8./example8w","example8.cpp","example9./example9w","example9.cpp","example:","example:a","example:cmn","example:her","example:ldr,","example:lea","example:mov","example:std::cin","example:w","examples).let'","examples:let'","except","exceptions).","excess","excit","execut","executable.","execute.","execute.assembl","executed,","executed.w","executes.next","executing,","execution.","execution.befor","execution.keep","execution.w","execution.woohoo!","exercis","exist","exist.","exist.2)0x400","existence.c","existence.when","exists,","exists.","exit","exit.","exit.it","exit.o","exit.thi","exits,","exp1.licdn.com/dms/image/c4e12aq","expand","expandtab","expans","expect","expected.","expected.[0x5576bff9ec]>","expected.it","expected.let’","expected.next","expected.w","experi","experienc","explain","explained.thi","explanatory.","explicitli","explor","express","extend","extens","extern","extra","extract","extrapol","extrem","ey","f","f1cd","f5","face","facet","fact","fail","failur","fall","fals","false.","false;","famili","familiar","far","far,","fashion","fashion.","fashions:0","fashions:keep","fast.it","faster","fastest","father","faucet","fault","fault.","fe","fear!","feather","featur","feature.aaa","feed","feed.keep","feel","felt","fetch","few","ff","ffffd040","field","fifth","figur","file","file!","file.","file.compil","file.fin","file.if","file.it","file.th","file.to","file.w","file]:w","file]:wq","files,","files.","final","finally,","find","find_smallest_valu","finish","finished,","finishes.onc","fire","firm","firmli","firmwar","firmware!","first","first,","first.","fit","five","fix","flag","flag).","flag.","flag.next","flagac:","flagaf:","flagbit","flagid:","flagif:","flagiopl:","flagnt:","flagof:","flagpf:","flagrf:","flags,","flags.","flags.3)th","flags.statu","flags.ther","flagsf:","flagsfor","flagth","flagtherefor","flagvif:","flagvip:","flagvm:","flagw","flagzf:","flash","flat","flavor","flexibl","float","flow","flow,","flow.","flow.most","flow.tak","flows.next","flush","focu","focus","folder","folks!","follow","following.","following.c","following.q","following.v","following:0x5f","following:1)real4","following:bit","following:f","following:p","following:raspberri","following:rememb","following:then","following:therefor","following:thi","following:to","follows.","follows:0","follows:1)byt","follows:5","follows:[label]","follows:cf:","follows:cr0:","follows:cs:","follows:esi","follows:y","for.w","forc","foreign","forever!ther","forever.","form","form.ther","format","format.","formula","forth","forth.","forward","forward.","forward.now","forward.th","forward.w","found","foundat","four","fourth","fp","fraction","frame","frame.","frame.in","frame.let’","framework","framework.in","free","free!w","free()","freed","freed,","freeli","frequent","fresh","friendli","frustrat","fs","ftherefor","full","fulli","fun","fun!","function","function,","function.","function.next","function.th","function.that’","function.thu","function:then","functionality.","functions.","fundament","further","further.","futur","ga","gain","game","garbag","gate","gatesfor","gateway","gather","gave","gb","gcc","gdb","gdb,","gdb.","gdb.let’","gdb.the","gdb.to","gdb:let'","gdt","gener","generated.","gentlemen,","georg","get","get.electron","getline()","getline(std::cin,","ghex","girls,","git","give","given","global","globally,","globe.th","gnu","go","go!","go!when","goal","goalsfor","god'","goe","good","googl","govern","gp","gpr","gpu","grab","grabber","graduat","grandfath","graph","graph.","graph.q","graphic","grasp","great","great.","greater","greatest","green","grep","greyscal","groundwork","group","grow","grow.i","gs","guest","gui","guid","guy","h.obvious","hack","hack!","hack!a","hack!aft","hack!let'","hack!let’","hack!onc","hack!w","hack.[0x000009e4]>","hack.[0x000010a4]>","hack.a","hack.i","hack.let'","hack.thes","hack:","hack:w","hacked!next","hacked).","hacker","hacking.","hacking.a","had:","had:her","half","hand","handi","handl","handle,","handling.","handlingfor","hang","happen","happen,","happen.next","happen?","happening.let","happening.ther","happens,","happens.","happi","hard","hardcor","hardwar","hardware.","harm","have","hd","head","header","heap","heap,","heap.","heap.th","heapfor","heart'","heck","heck!","held","hell","hell!","hello","help","help!in","help.","here","here!","here,","here.","here.in","here.next","here.w","here?","here?hav","hex","hex,","hex.","hex.consequ","hex.fin","hex.i","hex.thi","hex.to","hex.w","hex.“whi","hexadecim","hexadecimal!next","hexadecimal),","hexadecimal,","hexadecimal.","hexadecimal.it","hexadecimal:10","hexadecimalkeep","hexadecimallet","hexadecimalthi","hidden","hide","high","higher","highest","highli","hijack","hit","hit.","hold","home","hood","hood.i","hood.”i","hope","hopefulli","hopper","host","hot","hours,","hous","house!success!","household,","https://github.com/mytechnotalent/hacking_c","https://github.com/mytechnotalent/revers","https://github.com/radareorg/radare2.git","https://www.raspberrypi.org.w","human","hundr","hypothesis.","i/o","i/o.","i/ofor","ia","ia32","icon","id","ida","idea","ident","identif","identifi","ignor","ignored.th","illustr","illustrate.in","illustrate.r0","illustrate:","illustrate:her","illustrate:if","illustrate:pleas","illustrate:w","imag","images/]aft","image…","imagin","immedi","impact","implement","implemented)cr2:","impli","implicitli","import","important?","importantli","in!","in,","in.","in.5)0x9fc00","in.thi","inc","includ","incom","increas","increment","indent","index","indic","indirect","indirect_addressing_with_regist","indirect_addressing_with_registers.o","indirect_addressing_with_registers.sto","individu","infect","infinit","info","inform","information.","information.cr3:","information.cr4:","information.ther","infrastructur","init","initi","initially.","inline_imag","input","input.#includ","input/output","input:let'","inputs.","insert","insid","inspection.","instal","installed.http://www.ubuntu.com/download/desktop","instanc","instead","instead.dynam","instruct","instruction,","instruction.","instruction.3)execut","instruction.in","instruction.w","instructionfor","instructions!","instructions,","instructions.","instructions.befor","instructions.onc","instructions]","instructions]for","instructionsfor","instruction’","int","int,","integ","integer?","integers.a","integr","intel","intel64.","intend","intent","interact","interest","interfac","intermedi","intern","internet","interpret","interrupt","interrupt.","intervals.in","intro","introduc","introduct","introfor","intrusion.thi","invert","involv","io","iostream","iostream,","iot","ip","iphon","iret","is(line);","is,","is.","is.get(null))","is?","ishack","iso","issu","issue.","istream","it!","it'","it,","it.","it.#includ","it.aft","it.her","it.th","it.thi","it.unlik","it.upon","it.w","it:1)condit","itself","itself.","it’","java","java,","javaee.","javascript,","je","jessie,","jmp","jne","job","join","journey","journey!","journey!next","journey,","jude'","jump","junk","jvm","kali","kali@kali:~/documents/0x02_asm_64_basicio$","kali@kali:~/documents/0x03_asm64_char_primitive_datatype$","keep","kept","kernel","kernel.","kernel.img","kernel.onc","kevin","key","key.","keyboard","keyboard.","keylogg","keystrokes,","keyword","kind","kind,","kind.next","kingdom","kit","kitchen","knee","know","knowledg","known","l,","lab","label","label.w","labs.","lack","laid","lan","languag","language,","language.","language.keep","language.th","language.think","language.w","language.what","language.when","language?","languages.","languages.i","larg","larger","largest","last","later","later.do","latest","launch","launcher","layout","lazi","ld","ldr","lea","leak.","learn","leav","lectur","lecture'","lecture)","lecture,","lecture.","lecture.th","lecture.to","lectures.aaron","lectures.w","left","left.","left.cal","left.i","left.in","left.let’","legaci","legit!","legit!\"","legit!\".th","length","length)","length,","length.","length.3)doubl","length.to","lengthi","lengths!","lengthsfor","less","less.","lesson","lesson,","lesson.","lesson.let'","lesson.to","lesson.w","lessons.","lessons.next","lessons.to","let","let'","letter","letter.","let’","level","level,","level.","level.and","level.for","level.in","level.px","level.w","librari","libraries.y","life","lifefor","lifo","like.in","like:","like:int","like:now","like:w","liking.","limit","line","line);","line,","line.","line:#includ","line;","line]$","line]b","line]h","line]k","line]p","line]yi","link","link)","link.g++","link:let'","linkedin","linkedin.th","linker","linker:to","linux","linux!","linux)","linux,","linuxfor","list","liter","littl","live","load","loaded,","loaded.@","loaded.“so","loader","loader.","loads.let'","loads.th","local","local.","local_10h","local_1h","local_4h","local_8h","locat","locate.","location.","location:next","location:now","locationcondit","locations.","lock","logic","logic:a","login","login,","long","long.","long.2)real8","long.4)quad","long.5)xmm","long.6)ymm","long.fin","long.ther","longer","look","look.","look.when","lookup","loop","loop.","loop.review","lost","lot","lottery_numb","low","lower","lowercas","lowest","lpddr2","lr","lr_demo","lr_demo.","lr_demo.o","lsb","luxuri","m","m32","mac","mac,","mac.","mac.https://www.virtualbox.org/wiki/download","machin","machine!next","machine.","machines.","macos,","made","magic","main","main()","main(void)","main+12","main+12.let’","main+12.veri","main+16","main+16.let’","main+17","main+20","main+24","main+28","main+28.w","main+36.w","main+68","main+72.w","main,","main.","main.[0x55629ca9e4]>","main.let’","main.qq","main.w","main:ok","major","make","malici","malloc()","malloc(),","malwar","malware,","malware.","malwarefor","manag","mani","manipul","manipulate.revers","manipulated.","manipulation.next","manual","manually.","manually.th","map","mapped.","market","master","masteri","masters,","match","materi","material.","math","mathemat","matter","matter?”glad","maximum","me!within","me!”a","me!”if","mean","mean:neg","means:th","means:therefor","meantime,","measur","measure.","mechan","media","media.in","medium","meet","memor","memori","memory)","memory,","memory.","memory.2)execut","memory.if","memory.in","memory.keep","memory.let","memory.let’","memory.now","memory.to","memory.w","memory.when","memory]","memory]for","memoryfor","mental","mention","mess","message,","metal","metal.","method","micro","microcontrol","microprocessor","microprocessor.","microprocessors.","microscop","microsd","microsoft,","middl","migrat","million","mind","mind,","mine?","mini","minim","minimum","minut","minutes.th","mkdir","mmx","mnemon","mod.","mode","mode,","mode.","mode.next","mode.now","mode.radare2","mode.th","mode.when","model","model.","modern","modes,","modifi","moment","moment.","month","more","more.","more...a","more.a","more.if","more.let'","more.let’","more.w","more:w","motherboard.a","motiv","mov","move","move,","movement","moving_data_between_memory_and_regist","moving_data_between_memory_and_registers.o","moving_data_between_memory_and_registers.sto","moving_data_between_registers_and_memori","moving_data_between_registers_and_memory.o","moving_data_between_registers_and_memory.sto","moving_immediate_data","moving_immediate_data.","moving_immediate_data.asmld","moving_immediate_data.o","moving_immediate_data.oto","moving_immediate_data.sld","moving_immediate_datalet’","moving_immediate_datlet’","movl","movz","ms","much","multi","multidimension","multilib","multipl","multitud","muscl","my_char","my_funct","my_var","my_varinc","my_varthi","mynewnumb","mynewnumber.next","mynumb","mynumber.","mynumber;","mynumbers","n","n.we","name","names,","names.no","names;","namespac","nano","nano.last","nasm","nasm.let'","nasmnasm","nativ","natur","necessari","necessarili","need","needed,","needed.","needs.cd","neg","negat","negative.th","nest","netwid","network","network.","networks,","neumann","never","never!let'","new","newlin","next","next.","next.at","next.pleas","next.then","next.when","nibbl","nibble.","nice","no,","no_return","non","none","nonetheless","nop","normal","noroot","not,","not.","not.flag","notat","note","noth","notic","notion","now","now.","now.let’","now.th","null","number","number,","number:","number:if","numbers,","numbers.","numbers.next","numbers.thi","numer","o","o0","obj","objdump","objdump,","object","object.then","obtain","obtained.","obviou","obvious","occupi","occur","occurr","occurs,","occurs.3)regist","occurs.w","odd.","of.","off.","off.in","offer","offici","offset","ok","ok!","ok,","ok.","ol","old","old,","older","ollydbg","on","on!in","on.keep","on?”thi","on]d","onc","one.","one]","onlin","only!in","only!let'","only!next","onto","op","opcod","opcodes.","open","open.th","oper","operand","operands.","operands.if","operands.th","operates.","operates.if","operates.th","operation.","operation.next","operation.th","operation.when","operation:so","operations)bit","operations)when","operations.","operations.ebp:","operations.edx:","operations.ss:","operator.","operator.when","operatorfor","operatorthi","opportun","opposit","optim","option","or,","order","order.","organ","origin","originated.in","os","os'","os.","os.i","os.let","os.let'","os.typ","os.when","oscil","other.","other.origin","others.th","otherwis","ourselv","out","out).","out.a","out.congratulations!","output","output!","output)","output.","output.let'","output.let’","output.next","over","overflow","overflow,","overflow.let","overflows.","overlap","overlap.","overload","overwhelm","overwhelming.","overwrit","own","pace","packag","pad","page","paging.i","painfulli","painstak","param","paramet","pariti","pars","part","partial","particular","particularli","pass","pass,","passion","password","past","past,","patch","path","patienc","patient","pattern","pay","payload.w","pc","pe","peek","pend","pending.th","penetr","peopl","people,","per","percentag","perfectli","perform","perform.th","performed.her","performed.let","period","period.let’","peripherals.pdfth","perman","persever","person","perspect","perspective:th","pf","phase","phase.","phone","phone,","physic","pi","pick","pictur","picture.it","pid","piec","pin","pin,","pin.","pin.whi","pins.","pipelin","pipeline.","pipelinefor","place","places)!fin","plainli","planet","plate","platform","platform,","platform.","pleas","please!","please.w","plu","point","point,","point.","point.kali@kali:~/documents/0x02_asm_64_basicio$","point.let’","pointer","pointer!","pointer,","pointer.","pointer.fs:","pointer.onc","pointer.thos","pointer.w","pointerfor","pointers!","pointers!for","pointers.what","pointers?","pointersfor","pop","pop.","popular","port","portabl","portion","portion.w","posit","possibl","possible.","possible.in","possible?","post","potenti","power","power,","ppppp","practic","pre","preced","precis","precision.let’","prefix","prepar","preprocessor","presenc","present.","preserv","press","pretend","pretti","prevent","previou","previous","primarili","primit","primitive.","print","printabl","printf","prior","privaci","privileg","pro","proactiv","probabl","problem","proce","procedur","procedures.","proceduresfor","process","process.","process.next","process.ood","processor","processor,","processor.","processor.cr1:","processor.in","processor.next","processor.th","processor.wheth","processors.","produc","profession","profile.understand","program","program!","program!so","program,","program.","program.a","program.ecx:","program.let","program.let’","program.seg","program:w","programfor","programm","programs.","programs.let","programs.th","progress","progress.thi","project","prologu","prompt","prompt.qq","proof","proper","properli","properly.in","properly.w","properti","protect","protection.aslr","provid","ps","pseudo","ptr","public","publish","puls","purchas","pure","purpos","purpose!","purpose.","purposes,","purposes.each","purposes.ther","pursu","push","put","puzzl","python","python,","q","qemu","quad","quadword","queri","quest.","question","question.th","questions,","questions.in","quiet","quit","quit.q","quot","quotes.let'","qword","qword,","r","r,","r.a","r.to","r0","r0)","r0.\"so","r0.let","r0.let’","r0.next","r0.we","r1","r1!success!","r1,","r1.","r1.let’","r10","r10,","r11","r11,","r11.","r12","r13","r14","r14,","r14.","r15","r15,","r15.the","r2","r2,","r2.","r2.a","r2.let'","r3","r3(100","r3.","r3.a","r3.let’","r4","r4(100","r4,","r4.","r5","r5!","r5.we","r6","r7","r7.","r8","r8w,","r9","r9,","r9w","r:a","race","radar","radare2","radare2'","radare2.","radare2.if","radare2.q","radare2.radare2","radare:let'","radare:thi","rais","ram","ram,","ram.","ram.next","ran","ran,","random","rang","ransomwar","rapid","rare","raspberri","raspberrypi","raspbian","raw","rax","rax,","rax.","rax.a","rax.w","raxmov","rbp","rbp.","rbx,","rbx.","rbx.if","rbxlet’","rcx","rdi","rdi,","rdi.","rdi.th","rdx.","re","re'","re.w","reach","react,","read","read,","readabl","readable.","reader/writ","real","real!\"","realiti","reality.","reality.thi","realli","realloc()","reason","reboot.","reboot.“ok","recap","recap,","recap.","receiv","recent,","record.","redefin","reduc","reexamin","refer","referenc","references.th","reflect","refresh","refresher,","reg","regard","region","region.","regist","register!","register!now","register)","register).next","register,","register.","register.2)decod","register.aft","register.control","register.each","register.gs:","register.her","register.let'","register.next","register.to","register.w","registerfor","registers!","registers,","registers.","registers.)th","registers.eight","registers.i","registers.next","registers.th","registers.w","registers:eight","registers:ther","registers:w","registers;","registers]","registers]for","registersfor","registry.","regret","regularli","rel","relat","relationship","relay","relev","reli","religion","remain","remaind","rememb","remember,","remot","remov","repeat","repeated.","replac","replic","repres","represent","representation.i","representations,","request","requir","required,","rerun","research","reserv","reset","resid","resides.8)0x100000","resist","resources.","respect","respectively)","respectively.","respectively.next","respond","respons","responsible!","rest","restart","restor","restrict","result","result.hello","result.let","result?","result?ok","resum","retailers.","retriev","return","return.","return.in","returning.thi","returns,","revers","reversed.at&t","review","review.","review.1)w","revisit","revolut","revolution\".thi","revolutionfor","revolv","rf","rflags,","right","right.","right.in","right.let’","risc","risc.","road","road.","robust","rol","rol!","role","rom","room","root","rootkit","ror","ror!","rotat","roughli","rout","routin","routine.","routines.when","row","row.","rsb","rsbs,","rsc.","rscs,","rsi","rsi.fin","rsi.just","rsp","rule","run","run../0x01_asm64_helloworld","run../0x02_asm64_basicio","run../0x03_asm64_char_primitive_datatyp","run:a","run:ok","run:w","running.in","running.th","runtim","runtime.","s","s0.","s0.let’","s0.next","s0.we","s0?","safe","safer.in","said,","same","sandbox","save","saved.","saw","saying:10","sbc,","sbcs,","scan","scari","scenario","scenarios.","scenes.next","schedul","scienc","scope.if","screen","screen!next","screen.","screen.let’","screen:click","sd","second","secretli","section","section)","section.","section.a","section.y","section:","sections:1)data","sector","sector,","sector.","secular","secur","security.com/kali","security.everyth","see","see.when","see:w","seeing.","seek","seem","seen","segment","segment!","segment).","segment,","segment.","segment.in","segmentfor","segments.","select","select.keep","self","sell","semicolon","semiconductor","semiconductor.","send","sens","sensit","sensitive.ther","sent","sentenc","separ","sequence.","sequences.let’","sequenti","seri","series,","series.","series.i","series.th","series.y","server","server.linux","servi","servic","set","set!in","set,","set.","set.let","seta","setcarri","setoverflow","setthi","setup","setupfor","setw","setzero","seventeen.let’","sever","sexy!i","sf","share","shell.","shift","shiftwidth","shl","shl!","short","short,","shortly!","show","showcas","shown","shr","shr!","shrink","shrink_1000_1488/0/1520143279567?e=1614211200&v=beta&t=uuuio2c8cb629giybggjqwlyxaq3zfp","si","si,","si.","sign","signal","signatur","signature,","signatures,","signatures.to","signific","significantli","silicon","similar","similar.quit","similar.x64","simpl","simple,","simple.","simple.next","simplest","simpli","simplifi","simply,","singl","sit","situat","six","sixteen.next","sixth","size","size.","sizeof","sizeof(mynumber);","sizes,","sizes.","skill","skip","slice","slide","slider","slider,","slightli","slow","slower","slowli","small","smaller","smallest","smart","smartindent,","smoke","snail","snapshot","sneak","snippet","so,","so.","soap","soc","societi","socket","softwar","software,","software.","sole","solid","solut","someday","someon","someth","something.","sometim","somewher","soon","sophist","sort","sourc","source.","source.cod","sources.th","sp","sp.let","sp.thi","sp_demo.","sp_demo.o","space","space,","space.","space.th","spam","spawn","spdemo","speak","special","specif","specifi","speed","speed.specif","spend","spent","spin","spit","spoke","spring","squar","ss","sse","ssh","sstream","stack","stack,","stack.","stack.2)w","stack.at","stack.let","stack.next","stack.th","stack.w","stack.when","stack.you","stackfor","stage","stage.keep","stand","standard","start","start.elf","start.th","start:a","started...“so","started.al","state","stated,","statement","statement.","statement.a","static","statu","status,","status=0x0","stay","std","std::cin","std::cout","std::endl;","std::string","std::stringstream","std::w","std;","stdin","stdin.what","stdio","stdout","stdout.","stdout.[0x55629ca9e4]>","stdout.next","step","step,","step.bam!","step:a","stick","still","stop","storag","storage.4)flag","store","stored.","stored.a","stores.","str,","str.hello_world","straight","strang","strd","stream","stream,","stream.","street,","string","string,","string.","string.[0x000009e4]>","string.a","string.if","string.let'","string.system","string.w","stringstream","strong","struct","structur","struggl","stuck","studi","stuff!if","stump","sub","sub,","sub.","sub.o","sub.pleas","sub:to","sub:w","subdivid","subfor","subregist","subroutin","subroutines.when","subs,","substitut","subtract","subtracted.","subtraction!","subtraction:y","subtractionfor","success","success!","successful.if","successfulli","successfully.","successfully.in","successfully.let'","successfully.w","successfully:stay","such","such.","such.,a","such.in","such.let’","such:","such:w","sucks!”actu","sudo","suffici","suffix","suggest","suit","sum,","support","sure","surround","suspect","switch","switch.","switches,","switches.","sym.imp.put","sym.main'","sym.main.let'","symbol","symbols.let","syntax","syntax,","syntax.","syntax.i","syntax.to","syntax:mov","syntax:thi","sys/install.sh","sys_exit","sys_exit.","sys_writ","syscal","syscall.","system","system,","system.","system.hexadecim","system.next","system.on","system.today","system.w","systemfor","systems!","systems!w","systems,","systems.","systems.let'","systems.run","systems.th","systems.“wel","systems?","systemsfor","tab","tabl","table.at","table.let","table.let'","table.second,","table:","table:in","tablet","tabstop,","tackl","tact.w","tag","take","takeaway","taken","taken.","talk","target","task","task.","task.if","tasks.th","teach","technic","techniqu","techniques.","techniquesfor","technologies.","tell","temporari","temporarili","term","termin","terminal!let","terminal!let’","terminal.","terminal.[0x000009e4]>","terminal.let'","terminal.let’","terminal.next","terminal.th","terminal.to","terminal.w","terminal:a","terminal:let’","terminals.rememb","test","test.asmld","test.c","test.o","test.ow","text","textbook","thank","that.","that?th","that’","them.","them.for","them.in","them.th","themselv","then...w","there!next","there.","there.th","therefor","therefore,","thing","thing!w","thing.in","things.","things?","things?”i","think","third","this!","this,","this.in","this.next","this.unlik","this:veri","this:w","this:you","this?","thoma","thorough","those","though","thoughts,","thousand","threat","threat.","threat.w","threats.","three","through","through.","throughout","throw","thu","thumb","thumb.","ti","tightli","time","time!","time,","time.","time.a","time.i","time.lik","time.understand","time.w","times.","times:ok","timezon","tint","tiylbxjojq/articl","to,","to.","today","today'","today,","today?","today’","togeth","together.","tomorrow!","took","tool","tool.","toolkit","top","top.ok","topic","total","touch","toward","town.most","trace","track","tradit","traffic.","train","transistor","transistor.","transistors.let'","transistorsfor","translat","transpir","transpired.a","trap","treat","tree","trend","tri","trick","tricky.w","trigger","trivial","true","true,","true.","true.it’","truli","tune","tuned!","tuned.","turn","tutori","tutorial,","tutorial.","tutorial.befor","tutorial.if","tutorial.let’","tutorial.next","tutorial.on","tutorial.th","tutorial.w","tutoriala","tutorialadc","tutorialadd","tutorialarm","tutorialat","tutorialbefor","tutorialbinari","tutorialcongrat","tutorialessenti","tutorialfor","tutorialfunct","tutoriali","tutorialif","tutorialin","tutorialit","tutorialladi","tutoriallet","tutoriallet'","tutoriallet’","tutorialmalwar","tutorialmemori","tutorialnow","tutorialok","tutorialour","tutorialov","tutorials,","tutorials.","tutorials.everi","tutorials.i","tutorials.last","tutorials.tak","tutorials.th","tutorials.throughout","tutorials.w","tutorials.when","tutorials.y","tutorialso","tutorialso...","tutorialsubtract","tutorialth","tutorialtheir","tutorialther","tutorialthi","tutorialto","tutorialtoday","tutorialw","tutorialwelcom","tutorialwhen","tutorialwhi","tutorialx64","tutorial’","tv","twice","twice,","two","two'","type","type.","type:./example1","type:./example2","type:./example3success!","type:./moving_immediate_datai","type:./moving_immediate_dataok","type:a","type:g++","type:gdb","type:ld","type:nasm","type:onc","type:sudo","type:thi","type:to","typic","typing,","typing.","typing:cat","ubuntu","ubuntu.","ubuntu.th","uefi","ultim","ultimately.w","um","unchang","unclear","under","understand","understand.next","understand?","understanding.anyon","understands.","unfortun","uniniti","uniqu","unit","units)","unix","unlik","unlimit","unmap","unmapped.","unreach","unreachablefunct","unreachablefunction.now","unreliable.i","unsign","unstabl","until","up","up,","up.","up.thi","upcom","updat","updates,","upgrad","upgrades.","upon","upward","upward.","us","usag","used.","useless","user","username.","users.th","usual","util","v","va","val1","val1;","val2","val2;","valid","valid.th","validation.","validation.befor","valu","value,","value.","value.a","value.homework","value.next","value.th","value.w","value:let","values,","values.","values.ebx:","values.let’","values.thi","values.w","var","variabl","variable.","variables!","variables!for","variables.","variables.3)text","variables.esp:","variables.i","variables.keep","variables.th","variablesfor","variable”","varianc","varieti","variety.","variou","vary.","vast","vector","veri","verif","verifi","versa.i","version","versions.","very,","vi","vice","video","view","view.a","view.if","view.let'","view.notic","view.q","view.rememb","view.v","view.w","vim","vim.","vim.i","virtual","virtualbox","viru","visit","visual","vital","vldr","vm","vm.thi","vmware","void","voila!","voltag","volumes:http://ref.x86asm.net/coder64.htmllet'","von","vs","vulner","vv","w","w0","w0,","wa","wait","wait!","walk","wan","want","want!next","want!thi","want,","want.i","wanted,","was:mov","wast","watch","water","wave","way","way!","way.","way.a","way.thi","way:let","ways.","web","week","week!","week'","week.let’","weeks/month","week’","well","well.","well...","well.th","well.ther","went","what!next","whatev","whatsoev","whenev","whether","white","whitespac","whitespace,","whole","whose","why...\"","wide","wide.fin","wide.let’","wide.next","win","win.ex","wind","window","window.in","window.y","windows,","windows.i","wire","wire.","wireshark","with.","with.in","within","without","won't","wonder","word","word.","word.if","word:0x00000000","word]dd","words,","words.","work","work!","work,","worked!","workflow","workings.","works,","works.","works.if","works.next","world","world!","world!\"","world!\".","world!\".let'","world!'","world!`","world!for","world!”","world\"","world\"for","world,","world.","world.in","world\\n'","worldfor","world”","worm","worri","wrap","wrap_up","write","write,","written","written,","wrong","wrong.","wrote,","wx","x","x/1c","x/xb","x64","x64,","x86","x86'","x86,","x86.","x86/x64","x87","xmmword","xor","xor,","y","year","yellow","yes,","yes_no","yet.","yet.6)0xa0000","yield","ymmword","ymmword.w","you,","you.","you.now","yourself","yourself.","z","zero","zero,","zero.","zero.th","zeros.","zf","zoom","{","|","||","}","–","–32","‘7’","‘:wq’","‘esc’","‘hello","‘i’","‘i’.","‘n’","‘n’.","‘n’.after","‘n’.let’","‘n’;","‘y’","‘y’.a","“2017”","“charact","“constant”","“hack","“hello","“n”","−","−2,147,483,648"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Reversing\nA comprehensive reverse engineering tutorial covering x86, x64, 32-bit ARM & 64-bit ARM architectures.\n"},"pages/part-1-goals.html":{"url":"pages/part-1-goals.html","title":"Part 1: Goals","keywords":"","body":"Part 1: GoalsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialEssential to the discussion of basic reverse engineering is the concept of modern malware analysis. Malware analysis is the understanding and examination of information necessary to respond to a network intrusion.This short tutorial will begin with the basic concepts of malware reverse engineering and graduate to an entry-level basic examination of Assembly Language.The keys to the kingdom so to speak are rooted in the break-down of the respective suspected malware binary and how to find it on your network and ultimately to contain it.Upon full identification of the files required for deeper analysis, it is critical to develop signatures to detect malware infections throughout your network whether it be a home based LAN or complex corporate WAN to which malware analysis is necessary to develop host-based and network signatures.To begin with the concept of a host-based signature, we need to understand that these are utilized to find malicious code in a target machine. Host-based signatures are also referred to as indicators which can identify files created or edited by the infected code which can make hidden changes to a computers registry. This is quite in contrast with antivirus signatures because these concentrate on what the malware actually does rather than the make-up of the malware which makes them more effective in finding malware that can migrate or has been removed from the media.In contrast, network signatures are used to find malicious code by examining network traffic. It is important to note such tools as WireShark and the like are often effective in such analysis.Upon identification of these aforementioned signatures, the next step is to identify what the malware is actually doing.UNDER NO CONDITIONS ARE YOU TO EVER USE THIS EDUCATION TO CAUSE HARM TO ANY SYSTEM OF ANY KIND AS I AM NOT RESPONSIBLE! THIS IS FOR LEARNING PURPOSES ONLY!In our next lesson we will discuss techniques of malware analysis.\n"},"pages/part-2-techniques.html":{"url":"pages/part-2-techniques.html","title":"Part 2: Techniques","keywords":"","body":"Part 2: TechniquesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThere are two basic techniques that you can employ when analyzing malware. The first being static analysis and the other being dynamic analysis.Static analysis uses software tools to examine the executable without looking at the actual decompiled instructions in Assembly. We will not focus on this type of analysis as we are going to focus on actual disassembled binaries instead.Dynamic analysis uses disassemblers and debuggers to analyze malware binaries. The most popular tool in the market today is called IDA which is a multi-platform, multi-processor disassembler and debugger. There are other disassembler/debugger tools as well on the market today such as Hopper Disassembler, OllyDbg and many more.A disassembler will convert an executable binary written in Assembly, C, C++, etc into Assembly Language instructions that you can debug and manipulate.Reverse engineering is much more than just malware analysis. At the end of our series, our capstone tutorial will utilize IDA as we will create a real-world scenario where you will be tasked by the CEO of ABC Biochemicals to secretly try to ethically hack his companies software that controls a bullet-proof door in a very sensitive Bio-Chemical lab in order to test how well the software works against real threats. The project will be very basic however it will ultimately showcase the power of Assembly Language and how one can use it to reverse engineer and ultimately provide solutions on how to better design the code to make it safer.In our next lesson we will discuss various types of malware.\n"},"pages/part-3-types-of-malware.html":{"url":"pages/part-3-types-of-malware.html","title":"Part 3: Types Of Malware","keywords":"","body":"Part 3: Types Of MalwareFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialMalware falls into several categories of which I will touch briefly upon below.A backdoor is malicious code that embeds itself into a computer to allow a remote attacker access with very little or sometimes no authority to execute various commands on any respective local computer.A botnet allows an attacker access to a system however receive instructions not from one remote attacker but from a command-and-control server to which can control an unlimited amount of computers at the same time.A downloader is nothing more than malicious code that has only one purpose which is to install other malicious software. Downloaders are frequently installed when a hacker gains access to a system initially. The downloader then installs additional software to control the system.We find information access malware which gathers information from a computer and sends it directly to a host such as a keylogger or password grabber and usually used to obtain access to various online accounts that can be very sensitive.There are malicious programs that launch other malicious programs which use non-standard options to get increased access or a greater cloaking/hiding technique when penetrating a system.One of the most dangerous forms of malware is the rootkit which hides the existence of itself and additional malware from the user which makes it extremely hard to locate. A rootkit can manipulate processes such as hiding their IP in an IP scan so that a user may never know that they have a direct socket to a botnet or other remote computer.Scareware is used to trick a user into purchasing additional software to falsely protect a user when there is no real threat whatsoever that exists. Once a user pays to have the tricked software removed from the computer it then can stay resident and later emerge in an altered form.There are also various kinds of malware that send spam from a target machine which generates income for the attacker by allowing them to sell various services to other users.The final form of malware is that of a traditional worm or virus which copies itself and goes after other computers.This is the end the road for now regarding our discussion of malware because we first need to go back to the beginning and understand how a computer works at it's base level.In our next lesson we will begin our long journey into x86 Assembly Language. In order to truly understand the very basics of reverse engineering and malware we need to over the next several months take a deep dive into the core and build our way up.\n"},"pages/part-4-x86-assembly-intro.html":{"url":"pages/part-4-x86-assembly-intro.html","title":"Part 4: x86 Assembly Intro","keywords":"","body":"Part 4: x86 Assembly IntroFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLadies and Gentlemen, boys and girls, children of all ages! We are about to embark on a journey that will change your life forever!There is vast material to cover to get a good understanding of Assembly Language and why it is important to understand the basics.The first question we must answer is what is x86 Assembly Language to which the answer is a family of backward-compatible Assembly Languages which provide compatibility back to the Intel 8000 series of microprocessors. x86 Assembly Languages are used to produce object code for the aforementioned series of processors. It uses mnemonics to represent the instructions that the CPU can execute.Assembly Language for the x86 microprocessor works in conjunction with various operating systems. We will focus on Linux Assembly Language utilizing the Intel syntax in addition to learning how to program in C to which we will disassemble the source code an analyze the respective Assembly.x86 Assembly Language has two choices of syntax. The AT&T syntax was dominant in the Unix world since the OS was developed at AT&T Bell Labs. In contrast, the Intel syntax was originally used for the documentation of the x86 platform and was dominant in the MS-DOS and Windows environments.For our purposes, when we are ultimately disassembling or debugging software, whether it be in a Linux or Windows environment, we will see the Intel syntax in large measure. This is essential whether we are examining a Windows binary in PE format or a Linux binary in ELF format. More on that later in this tutorial.The main differences between the two is in the AT&T syntax, the source comes before the destination and in the Intel syntax, the destination comes before the source. We will discuss this in more detail later in the tutorial.Before you run for the door and regret embarking on this journey, remember, some basic context helps to which we will develop throughout our quest. Many of these topics may be confusing at this point which is perfectly normal as we will develop them in time.We will focus on Linux Assembly because Linux runs on a variety of hardware and is capable of running devices such as a cell phone, personal computer or a complex commercial server.Linux is also open source and there are many versions. We will focus on Ubuntu in our demonstrations which can be freely obtained. In contrast, the Windows operating system is owned and controlled by one company, Microsoft, to which all updates, security patches and service patches come directly from them where Linux has millions of professionals providing the same absolutely free!We will also focus on a 32-bit architecture as ultimately most malware will be written for such in order to infect as many systems as possible. 32-bit applications/malware will work on 64-bit systems so we want to understand the basics of the 32-bit world.In our next lesson we discuss the binary number system. Grab your cup of coffee you are going to need it!\n"},"pages/part-5-binary-number-system.html":{"url":"pages/part-5-binary-number-system.html","title":"Part 5: Binary Number System","keywords":"","body":"Part 5: Binary Number SystemFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBinary numbers are what define the core of a computer. A bit within a computer is either on or off. A bit has either electricity turned on to it or it is absent of such. We will dive into this deeper in future tutorials. Puzzled and confused, where do we go from here?Have no fear! The binary number system is here! It is important to understand that in binary, each column has a value two times the column to its right and there are only two digits in the base which happen to be 0 and 1.In decimal, base 10, say we have the number 15 which means (1 x 10) + (5 x 1) = 15 therefore the 5 is the number times 1 and the 1 is that number times 10.Binary works in a similar fashion however we are now referring to base 2. That same number in binary is 1111. To illustrate: Binary numbers are important because using them instead of the decimal system simplifies the design of computers and related technologies. The simplest definition of the binary number system is a system of numbering that uses only two digits, as we mentioned above, to represent numbers necessary for a computer architecture rather than using the digits 1 through 9 plus 0 to represent such.In our next lesson we discuss the hexadecimal number system. It only gets more exciting from here!\n"},"pages/part-6-hexadecimal-number-system.html":{"url":"pages/part-6-hexadecimal-number-system.html","title":"Part 6: Hexadecimal Number System","keywords":"","body":"Part 6: Hexadecimal Number SystemFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialNow that we are binary masters, it's time to tackle the numbering system of numbering systems!We learned in binary that each number represents a bit. If we combine 8 bits, we get a byte. A byte can be further subdivided into its top 4 bits and its low 4 bits. A combination of 4 bits is a nibble. Since 4 bits gives you the possible range from 0 - 15 a base 16 number system is easier to work with. Keep in mind when we say base 16 we start with 0 and therefore 0 - 15 is 16 different numbers.This exciting number system is called hexadecimal. The reason why we use this number system is that in x86 Assembly it is much easier to express binary number representations in hexadecimal than it is in any other numbering system.Hexadecimal is similar to every other number system except in hexadecimal, each column has a value of 16 times the value of the column to its right. The fun part about hexadecimal is that not only do we have 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 we have A, B, C, D, E and F and therefore 16 different symbols.Lets look at a simple table to see how hexadecimal compares to decimal.      Ok I see the smoke coming out of your ears but its ok! In decimal, everything is dealt with in the power of 10. Let's take the number 42 and examine it in decimal:2 x 10 ^ 0 = 24 x 10 ^ 1 = 40Remember 10 to the 0 power is 1 and 10 to the 1st power is 10, therefore, 2 + 40 = 42.Grab your coffee, here comes the fun stuff!If we understand that decimal is a base 10 number system, we can create a simple formula where b represents the base. In this case, b = 10.(2 * b ^ 0) + (4 * b ^ 1)(2 * 10 ^ 0) + (4 * 10 ^ 1) = 42In binary, 42 decimal is 0010 1010 binary as follows:0 x 2 ^ 0 = 01 x 2 ^ 1 = 20 x 2 ^ 2 = 01 x 2 ^ 3 = 80 x 2 ^ 4 = 01 x 2 ^ 5 = 320 x 2 ^ 6 = 00 x 2 ^ 7 = 00 + 2 + 0 + 8 + 0 + 32 + 0 + 0 = 42 decimalIn hexadecimal, everything is dealt with in the power of 16. Therefore 42 in decimal is 2A in hexadecimal:10 * 16 ^ 0 = 102 * 16 ^ 1 = 3210 + 32 = 42 decimal => 2A hexadecimalThis is the same as saying:10 * 1 = 102 * 16 = 3210 + 32 = 42 decimal => 2A hexadecimalKeep in mind 10 decimal is equal to A hexadecimal and 2 decimal is equal to 2 hexadecimal. In our formula above when we deal with A, B, C, D, E or F we need to convert them to their decimal equivalent.Lets take another example of F5 hexadecimal. This would be as follows:5 x 16 ^ 0 = 515 x 16 ^ 1 = 2405 + 240 = 245 decimal => F5 hexadecimalLets look at a binary to hexadecimal table:   It is important to understand that every hexadecimal number is 4 bits long or called a nibble. This will become critical when we are reverse engineering our C programs into Assembly.Lets look at this another way. Lets work with some more hexadecimal numbers and convert them to decimal:To re-emphasize F1CD as a simple conversion:D --- 13 x 1 = 13C --- 12 x 16 = 1921 --- 1 x 256 = 256F --- 15 x 4096 = 61,44013 + 192 + 256 + 61,440 = 61,901Addition in hexadecimal works as follows. From this point forward all numbers in hexadecimal will have a 'h' next to the number:        Another example is as such:      A final add example is as such:We will now focus on subtraction:You are probably asking yourself why is this guy spending so much time going over so many different ways of learning this! The answer is that each of us learn a little different from the next. I wanted to show several representations of hexadecimal compared to decimal and binary to help put together the whole picture.It is fundamental that you understand what is going on here in order to proceed any further. If you have any questions, please comment below and I will be more than happy to help!In our next lesson we discuss switches, transistors and memory.\n"},"pages/part-7-transistors-and-memory.html":{"url":"pages/part-7-transistors-and-memory.html","title":"Part 7: Transistors And Memory","keywords":"","body":"Part 7: Transistors And MemoryFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our last lesson, we took a very deep dive into the hexadecimal number system. I am going to keep this weeks lesson short so that you can re-read last weeks lesson. I can not emphasize how important it is to understand hexadecimal number conversions in addition to the ability to manually add and subtract them.In the real world, we have calculators, in the real world we use the Windows operating system, in the real world professional reverse engineers use GUI debuggers like IDA Pro and others.The question is, why am I not jumping right into the core of what real reverse engineers do? The answer is simple, one must have a deep respect and understanding of the machine in order to become great. We will never change the world without fully understanding it first. Patience and perseverance win the day.I focus on on Linux and console-based programming because most professional servers utilize Linux and therefore is the greatest threat of malware. Understanding Linux Assembly allows you to very easily grasp the library-choking portable executable format of Windows Assembly in a much deeper way.As I step off the soap box, lets get back to the basics of computers so here we go!When we ask ourselves what is a computer one must go down to as about as basic as one can get.Electronic computers are simply made out of transistor switches. Transistors are microscopic crystals of silicon that use electrical properties of silicon to act as switches. Modern computers have what are referred to as field-effect transistors.Let's use an example of 3 pins. When an electrical voltage is applied to pin 1, current then flows between pins 2 and 3. When the voltage is removed from the first pin, current stops flowing between pins 2 and 3.When we zoom out a bit we see that there are also diodes and capacitors when taken together with the transistor switches we now have a memory cell. A memory cell keeps a minimum current flow to which when you put a small voltage on its input pin and a similar voltage on its select pin, a voltage will appear and remain on its output pin. The output voltage remains in its set state until the voltage is removed from the input pin in conjunction with the select pin.Why is this important you ask. Very simply, the presence of voltage indicates a binary 1 and the absence of voltage indicates a binary 0 therefore the memory cell holds one binary digit or bit which is either 1 or 0 meaning on or off.In our next lesson we will discuss bytes and words.\n"},"pages/part-8-bytes-words-double-words-etc.html":{"url":"pages/part-8-bytes-words-double-words-etc.html","title":"Part 8 - Bytes, Words, Double Words, etc...","keywords":"","body":"Part 8 - Bytes, Words, Double Words, etc...For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialMemory is measured in bytes. A byte is 8 bits. Two bytes are called a word and two words are called a double word which is four bytes (32-bit) and a quad word is eight bytes (64-bit).A byte is 8 bits and is 2^8 power which is 256. The number of binary numbers 8 bits in size is one of 256 values starting at 0 and going to 255.Every byte of memory in a computer has its own unique address. Let's review the disassembled instructions for a simple hello world application in Linux by setting a breakpoint on the main function. We will use the GDB debugger:Don't worry if this does not make sense yet. The point of utilizing this example is to give you a sneak peek into our first program that we will examine in addition to learning about memory in a computer.Below is an examination of the ESP register. Again, it is not critical that you understand what a register is or what ESP does. We simply want to see what a memory location looks like: We see the memory location of 0xffffd040 which of course is in hexadecimal. We also see the value inside the ESP register which is 0xf7fac3dc which is also in hexadecimal.It is important to understand that 0xffffd040 is 4 bytes and is a double word. As we learned in Part 6: Hexadecimal Number System, each hexadecimal digit is 4 bits long otherwise called a nibble. In 0xffffd040, lets look at the right most digit of 0. In this example, 0 (hexadecimal) is 4 bits long. If we look at 40 (in hexadecimal), we see that is a byte in length or 8 bits long. If we look at d040, we have two bytes or a word in length. Finally, ffffd040 is a double word or 4 bytes in length which is 32-bits long. The 0x at the beginning of the address just designates that is is a hexadecimal value.A computer program is nothing more than machine instructions stored in memory. A 32-bit CPU fetches a double word from a memory address. A double word is 4 bytes in a row which is read from memory and loaded into the CPU. As soon as it finishes executing, the CPU fetches the next machine instruction in memory from the instruction pointer.Those of you new to assembly have now had your first look. Don't get discouraged or frustrated if you do not know what is going on here. We will take our time and go through dozens of examples to break down each step in future lessons. What is important is that you take your time and examine what each lesson is discussing. Please always feel free to comment below with any questions.In our next tutorial we will discuss the basics of x86 Architecture.\n"},"pages/part-9-x86-basic-architecture.html":{"url":"pages/part-9-x86-basic-architecture.html","title":"Part 9: x86 Basic Architecture","keywords":"","body":"Part 9: x86 Basic ArchitectureFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialA computer application is simply a table of machine instructions stored in memory to which the binary numbers which make up the program are unique only in the way the CPU deals with them.The basic architecture is made up of a CPU, memory and I/O devices which are input/output devices which are all connected by a system bus as detailed below.The CPU consists of 4 parts which are:1)Control Unit - Retrieves and decodes instructions from the CPU and then storing and retrieving them to and from memory.2)Execution Unit - Where the execution of fetching and retrieving instructions occurs.3)Registers - Internal CPU memory locations used a temporary data storage.4)Flags - Indicate events when execution occurs.We will discuss 32-bit x86 so therefore a 32-bit CPU first fetches a double word (4 bytes or 32-bits in length) from a specific address in memory and is read from memory and loaded into the CPU. At this point the CPU looks at the binary pattern of bits within the double word and begins executing the procedure that the fetched machine instruction directs it to do.Upon completion of executing an instruction, the CPU goes to memory and fetches the next machine instruction in sequence. The CPU has a register, which we will discuss registers in a future tutorial, called the EIP or instruction pointer that contains the address of the next instruction to be fetched from memory and then executed.We can immediately see that if we controlled flow of EIP, we can alter the program to do things it was NOT intended to do. This is a popular technique upon which malware operates.The entire fetch and execute process is tied to the system clock which is an oscillator that emits square-wave pulses at precise intervals.In our next tutorial we will dive deeper into the IA-32 Architecture with a discussion of the General-purpose Registers.\n"},"pages/part-10-general-purpose-registers.html":{"url":"pages/part-10-general-purpose-registers.html","title":"Part 10: General-purpose Registers","keywords":"","body":"Part 10: General-purpose RegistersFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe general-purpose registers are used to temporarily store data as it is processed on the processor. The registers have evolved dramatically over time and continue to do so. We will focus on 32-bit x86 architecture for our purposes.Each new version of general-purpose registers is created to be backward compatible with previous processors. This means that code utilizing 8-bit registers on the 8080 chips will still function on today's 64-bit chipset.General-purpose registers can be used to hold any type of data to which some have acquired specific use which are used in programs. Lets review the 8 general-purpose registers in an IA-32 architecture.EAX: Main register used in arithmetic calculations. Also known as accumulator, as it holds results of arithmetic operations and function return values.EBX: The Base Register. Pointer to data in the DS segment. Used to store the base address of the program.ECX: The Counter register is often used to hold a value representing the number of times a process is to be repeated. Used for loop and string operations.EDX: A general purpose register. Additionally used for I/O operations. In addition will extend EAX to 64-bits.ESI: Source Index register. Pointer to data in the segment pointed to by the DS register. Used as an offset address in string and array operations. It holds the address from where to read data.EDI: Destination Index register. Pointer to data (or destination) in the segment pointed to by the ES register. Used as an offset address in string and array operations. It holds the implied write address of all string operations.EBP: Base Pointer. Pointer to data on the stack (in the SS segment). It points to the bottom of the current stack frame. It is used to reference local variables.ESP: Stack Pointer (in the SS segment). It points to the top of the current stack frame. It is used to reference local variables.Keep in mind each of the above registers are 32-bit in length or 4 bytes in length. Each of the lower 2 bytes of the EAX, EBX, ECX, and EDX registers can be referenced by AX and then subdivided by the names AH, BH, CH and DH for high bytes and AL, BL, CL and DL for the low bytes which are 1 byte each.In addition, the ESI, EDI, EBP and ESP can be referenced by their 16-bit equivalent which is SI, DI, BP, SP.This can be a bit confusing to someone who has not studied computer engineering however let me illustrate in the table below:EAX would have AX as its 16-bit segment and then you can further subdivide AX into AL for the low 8 bits and AH for the high 8 bits. The same holds true for EBX, ECX and EDX as well. EBX would have BX as its 16-bit segment and then you can further subdivide BX into BL for the low 8 bits and BH for the high 8 bits. ECX would have CX as its 16-bit segment and then you can further subdivide CX into CL for the low 8 bits and BH for the high 8 bits. EDX would have DX as its 16-bit segment and then you can further subdivide DX into DL for the low 8 bits and DH for the high 8 bits.ESI, EDI, EBP and ESP can be broken down into its 16-bit segments as follows:ESI would have SI as its 16-bit segment, EDI would have DI as its 16-bit segment, EBP would have BP as its 16-bit segment and ESP would have SP as its 16-bit segment.In our next tutorial we will continue our discussion of the IA-32 Architecture with the Segment Registers.\n"},"pages/part-11-segment-registers.html":{"url":"pages/part-11-segment-registers.html","title":"Part 11: Segment Registers","keywords":"","body":"Part 11: Segment RegistersFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe segment registers are used specifically for referencing memory locations. There are three different methods of accessing system memory of which we will focus on the flat memory model which is relevant for our purposes.There are six segment registers which are as follows:CS: Code segment register stores the base location of the code section (.text section) which is used for data access.DS: Data segment register stores the default location for variables (.data section) which is used for data access.ES: Extra segment register which is used during string operations.SS: Stack segment register stores the base location of the stack segment and is used when implicitly using the stack pointer or when explicitly using the base pointer.FS: Extra segment register.GS: Extra segment register.Each segment register is 16-bits and contains the pointer to the start of the memory-specific segment. The CS register contains the pointer to the code segment in memory. The code segment is where the instruction codes are stored in memory. The processor retrieves instruction codes from memory based on the CS register value and an offset value contained in the instruction pointer (EIP) register. Keep in mind no program can explicitly load or change the CS register. The processor assigns its values as the program is assigned a memory space.The DS, ES, FS and GS segment registers are all used to point to data segments. Each of the four separate data segments help the program separate data elements to ensure that they do no overlap. The program loads the data segment registers with the appropriate pointer value for the segments and then reference individual memory locations using an offset value.The stack segment register (SS) is used to point to the stack segment. The stack contains data values passed to functions and procedures within the program.Segment registers are considered part of the operating system and can neither read nor be changed directly in almost all cases. When working in the protected mode flat model (x86 architecture which is 32-bit), your program runs and receives a 4GB address space to which any 32-bit register can potentially address any of the four billion memory locations except for those protected areas defined by the operating system. Physical memory may be larger than 4GB however a 32-bit register can only express 4,294,967,296 different locations. If you have more than 4GB of memory in your computer, the OS must arrange a 4GB region within memory and your programs are limited to that new region. This task is completed by the segment registers and the OS keeps close control of this.In our next tutorial we will continue our discussion of the IA-32 Architecture with the Instruction Pointer Register.\n"},"pages/part-12-instruction-pointer-register.html":{"url":"pages/part-12-instruction-pointer-register.html","title":"Part 12: Instruction Pointer Register","keywords":"","body":"Part 12: Instruction Pointer RegisterFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe instruction pointer register called the EIP register is simply the most important register you will deal with in any reverse engineering. The EIP keeps track of the next instruction code to execute. EIP points to the next instruction to execute. If you were to alter that pointer to jump to another area in the code you have complete control over that program.Lets jump ahead and dive into some code. Here is an example of a simple hello world application in C that we will go into more detail much later in our tutorial series. For our purposes today, we will see the raw POWER of assembly language and particularly that of the EIP register and what we can do to completely hack program control.Don’t worry if you do not understand what it does or its functionality. What to take note of here is the fact we have a function called unreachableFunction that is never called by the main function. As you will see if we can control the EIP register we can hack this program to execute that code!We have simply compiled the code to work with the IA32 instruction set and ran it. As you can see there is no call to the unreachableFunction of any kind as it is unreachable under normal conditions as you can see the ‘Hello World!` printed when executed.We have disassembled the program using the GDB Debugger. We have set a breakpoint on the main function and ran the program. The => shows where EIP is pointing to when we step to the next instruction. If we follow normal program flow, ‘Hello World! will print to the console and exit. If we run the program again and do an examination of where EIP is pointing to we will see:We can see EIP is pointing to main+17 or the address of 0x680cec83.Lets examine the unreachableFunction and see where it starts in memory and write down that address.The next step is to set EIP to address 0x0804843b so that we hijack program flow to run the unreachableFunction.Now that we have hacked control of EIP, lets continue and watch how we have hijacked the operation of a running program to our advantage!Tada! We have hacked the program!So the question in your mind is why did you show me this when I have no idea of what any of this is? It is important to understand that when we are doing a lengthy tutorial such as this we should sometimes look forward to see why we are taking so many steps to learn the basics before we dive in. It is important however to show you that if you stay with the tutorial your hard work will pay off as we will learn how to hijack any running program to make it do whatever we want in addition to proactively breaking down a malicious program so that we can not only disable it but trace it back to a potential IP of where the hack originated.In our next tutorial we will continue our discussion of the IA-32 Architecture with the Control Registers.\n"},"pages/part-13-control-registers.html":{"url":"pages/part-13-control-registers.html","title":"Part 13: Control Registers","keywords":"","body":"Part 13: Control RegistersFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialTheir are five control registers which are used to determine the operating mode of the CPU and the characteristics of the current executing task. Each control register is as follows:CR0: System flag that control the operating mode and various states of the processor.CR1: (Not Currently Implemented)CR2: Memory page fault information.CR3: Memory page directory information.CR4: Flags that enable processor feathers and indicate feature capabilities of the processor.The values in each of the control registers can’t be directly accessed however the data in the control register can be moved to one of the general-purpose registers and once the data is in a GP register, a program can examine the bit flags in the register to determine the operating status of the processor in conjunction with the current running task.If a change is required to a control register flag value, the change can be made to the data in the GP register and the register moved to the CR. Low-level System Programmers usually modify the values in control registers. Normal application programs do not usually modify control register entries however they might query flag values to determine the capabilities of the host processor chip on which the program is currently running.In our next tutorial we will continue our discussion of the IA-32 Architecture with the topic of Flags.\n"},"pages/part-14-flags.html":{"url":"pages/part-14-flags.html","title":"Part 14: Flags","keywords":"","body":"Part 14: FlagsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe topic of flags are one of the most extremely complex and complicated concepts of assembly language and program flow control when reverse engineering. This information below will become much clearer as we enter into the final phase of our training when we reverse engineer C applications into assembly language.What is important here is to take away the fact that flags help control, check and verify program execution and are a mechanism to determine whether each operation that is performed by the processor is successful or not.Flags are critical to assembly language applications as they are a check to verify each programs functions successful execution.We are dealing with 32-bit assembly to which a single 32-bit register which contains a group of status, control and system flags exist. This register is called the EFLAGS register as it contains 32 bits of information that are mapped to represent specific flags of information.There are three kinds of flags which are status flags, control flags and system flags.Status flags are as follows:CF: Carry FlagPF: Parity FlagAF: Adjust FlagZF: Zero FlagSF: Sign FlagOF: Overflow FlagThe carry flag is set when a math operation on an unsigned integer value generates a carry or borrow for the most significant bit. This is an overflow condition for the register involved in the math operation. When this occurs, the remaining data in the register is not the correct answer to the math operation.The parity flag is used to indicate corrupt data as a result of a math operation in a register. When checked, the parity flag is set if the total number of 1 bits in the result is even and is cleared if the total number of 1 bits in the result is odd. When the parity flag is checked, an application can determine whether the register has been corrupted since the operation.The adjust flag is used in Binary Coded Decimal math operations and is set if a carry or borrow operation occurs from bit 3 of the register used for the calculation.The zero flag is set if the result of an operation is zero.The sign flag is set to the most significant bit of the result which is the sign bit and indicates whether the result is positive or negative.The overflow flag is used in signed integer arithmetic when a positive value is too big or a negative value is too small to be represented in the register.Control flags are utilized to control specific behavior in the processor. The DF flag which is the direction flag is used to control the way strings are handled bu the processor. When set, string instructions automatically decrement memory addresses to get the next byte in the string. When cleared, string instructions automatically increment memory addresses to get the next byte in the string.System flags are used to control OS level operations which should NEVER be modified by any respective program or application.TF: Trap FlagIF: Interrupt Enable FlagIOPL: I/O Privilege Level FlagNT: Nested Task FlagRF: Resume FlagVM: Virtual-8086 Mode FlagAC: Alignment Check FlagVIF: Virtual Interrupt FlagVIP: Virtual Interrupt Pending FlagID: Identification FlagThe trap flag is set to enable single-step mode and when in this mode the processor performs only one instruction code at a time, waiting for a signal to perform the next instruction. This is essential when debugging.The interrupt enable flag controls how the processor responds to signals received from external sources.The I/O privilege field indicates the input-output privilege level of the currently running task and defines access levels for the input-output address space which must be less than or equal to the access level required to access the respective address space. In the case where it is not less than or equal to the access level required, any request to access the address space will be denied.The nested task flag controls whether the currently running task is linked to the previously executed task and is used for chaining interrupted and called tasks.The resume flag controls how the processor responds to exceptions when in debugging mode.The VM flag indicates that the processor is operating in virtual-8086 mode instead of protected or real mode.The alignment check flag is used in conjunction with the AM bit in the CR0 control register to enable alignment checking of memory references.The virtual interrupt flag replicates the IF flag when the processor is operating in virtual mode.The virtual interrupt pending flag is used when the processor is operating in virtual mode to indicate that n interrupt is pending.The ID flag indicates whether the processor supports the CPUID instruction.In our next tutorial we will discuss the stack.\n"},"pages/part-15-stack.html":{"url":"pages/part-15-stack.html","title":"Part 15: Stack","keywords":"","body":"Part 15: StackFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialFunctions are the most fundamental feature in software development. A function allows you to organize code in a logical way to execute a specified task. It is not critical that you understand how functions work at this stage it is only important that you understand that when we start learning to develop, we want to minimize duplication by using functions that can be called multiple times rather than duplicate code taking up excessive memory.When a program starts to execute a certain contiguous section of memory is set aside for the program called the stack.The stack pointer is a register that contains the top of the stack. The stack pointer contains the smallest address, lets say for example 0x00001000, such that any address smaller than 0x00001000 is considered garbage and any address greater than 0x00001000 is considered valid.The above address is random and is not an absolute where you will find the stack pointer from program to program as it will vary. Lets look at what the stack looks like from an abstract perspective:The above diagram is what I want you to keep clear in your mind as that is what is actually happening in memory. The next series of diagrams will show the opposite of what is shown above.You will see the stack growing upward in the below diagrams however in reality it is growing downward from higher memory to lower memory.In the addMe example below, the stack pointer (ESP), when examined in memory on a breakpoint on the main function, lists 0xffffd050. When the program calls the addMe function from main, ESP is now 0xffffd030 which is LOWER in memory. Therefore the stack grows DOWNWARD despite the diagram showing it pointing upward. Just keep in mind when the arrows below are pointing upward they are actually pointing to lower memory addresses.The stack bottom is the largest valid address of the stack and is located in the larger address area or top of the memory model. This can be confusing as the stack bottom is higher in memory. The stack grows downward in memory and it is critical that you understand that now as we go forward.The stack limit is the smallest valid address of the stack. If the stack pointer gets smaller than this, there is a stack overflow which can corrupt a program to allow an attacker to take control of a system. Malware attempts to take advantage of stack overflows. As of recent, there are protections build into modern OS that attempt to prevent this from happening.There are two operations on the stack which are push and pop. You can push one or more registers by setting the stack pointer to a smaller value. This is usually done by subtracting four times the number of registers to be pushed onto the stack and copying the registers to the stack.You can pop one or more registers by copying the data from the stack to the registers, then to add a value to the stack pointer. This is usually done by adding four times the number of registers to be popped on the stack.Let us look at how the stack is used to implement functions. For each function call there is a section of the stack reserved for the function. This is called the stack frame.Let’s look at the C program we created in tutorial 12 and examine what the main function looks like:We see two functions here. The first one is the unreachableFunction to which will never execute under normal circumstances and we also see the main function that will always be the first function to be called onto the stack.When we run this program, the stack will look like this:We can see the stack frame for int main(void) above. It is also referred to as the activation record. A stack frame exists whenever a function has started but yet to complete. For example, inside of the body of the int main(void) there is a call to int addMe(int a, int b) which takes two arguments a and b. There needs to be assembly language code in int main(void) to push the arguments for int addMe(int a, int b) onto the stack. Lets examine some code.When we compile and run this program we will see the value of 5 to be print out like this:Very simply, int main(void) calls int addMe(int a, int b) first and will get put on the stack like this:You can see that by placing the arguments on the stack, the stack frame for int main(void) has increased in size. We also reserved space for the return value which is computed by int addMe(int a, int b) and when the function returns, the return value in int main(void) gets restored and execution continues in int main(void) until it finishes.Once we get the instructions for int addMe(int a, int b), the function may need local variables so the function needs to push some space on the stack which would look like:int addMe(int a, int b) can access the arguments passed to it from int main(void) because the code in int main(void) places the arguments just as int addMe(int a, int b) expects it. FP is the frame pointer and points to the location where the stack pointer was just before int addMe(int a, int b) moved the stack pointer or SP for int addMe(int a, int b)’s own local variables.The use of a frame pointer is essential when a function is likely to move the stack pointer several times throughout the course of running the function. The idea is to keep the frame pointer fixed for the duration of int addMe(int a, int b)’s stack frame. In the meantime, the stack pointer can change values.We can use the frame pointer to compute the locations in memory for both arguments as well as local variables. Since it does not move, the computations for those locations should be some fixed offset from the frame pointer.Once it is time to exit int addMe(int a, int b), the stack pointer is set to where the frame pointer is which pops off the int addMe(int a, int b) stack frame.In sum, the stack is a special region of memory that stores temporary variables created by each function including main. The stack is a LIFO which is last in, first out data structure which is managed and optimized by the CPU closely. Every time a function declares a new variable it is pushed onto the stack. Every time a function exists, all of the variables pushed onto the stack by that function are freed or deleted. Once a stack variable is freed, that region of memory becomes available for other stack variables.The advantage of the stack to store variables is that memory is managed for you. You do not have to allocate memory manually or free it manually. The CPU manages and organizes stack memory very efficiently and is very fast.It is critical that you understand that when a function exits, all of its variables are popped off the stack and lost forever. The stack variables are local. The stack grows and shrinks as functions push and pop local variables.I can see your head spinning around and around. Keep in mind, these topics are complicated and will continue to develop in future tutorials. We have been dealing with a lot of confusing topics such as registers, memory and now the stack and it can be overwhelming. If you ever have questions, please comment below and I will help you to better understand this framework.In our next tutorial we will discuss the heap.\n"},"pages/part-16-heap.html":{"url":"pages/part-16-heap.html","title":"Part 16: Heap","keywords":"","body":"Part 16: HeapFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialOur next step in the Basic Malware Reverse Engineering section focuses on the heap. Keep in mind, the stack grows downward and the heap grows upward. It is very, very important that you understand this concept as we progress forward in our future tutorials.The heap is the region of your computer's memory that is not managed automatically for you, and is not as tightly managed by the CPU. It is free-floating region of memory and is larger than the stack allocation of memory.To allocate memory on the heap, you must use malloc() or calloc(), which are built-in C functions. Once you have allocated memory on the heap, you are responsible for freeing it by using free() to de-allocate that memory once you don't need it any more.If you don’t do this step, your program will have what is known as a memory leak. That is, memory on the heap will still be set aside and won't be available to other processes that need it.Unlike the stack, the heap does not have size restrictions on variable size. The only thing that would limit the heap is the physical limitations of your computer. Heap memory is slightly slower to be read from and written to, because you have to to use pointers to access memory on the heap. When we dive into our C tutorial series we will demonstrate this.Unlike the stack, variables created on the heap are accessible by any function, anywhere in your program. Heap variables are essentially global in scope.If you need to allocate a large block of memory for something like a struct or a large array and you need to keep that variable around for a good duration of the program to which must be accessed globally, then you should choose the heap for this purpose. If you need variables like arrays and structs that can change size dynamically such as arrays that can grow or shrink as needed, then you will likely need to allocate them on the heap, and use dynamic memory allocation functions like malloc(), calloc(), realloc() and free() to manage that memory manually.The next step is to dive into programming C in the Linux environment where we step-by-step disassemble each C program so in effect you will be learning both C programming and Assembly so that you can progress your skills in Malware Analysis and Reverse Engineering.I look forward to seeing you all next week when we take a comprehensive step-by-step tutorial on how to install Linux on your current computer using the FREE Virtual Box software tool.\n"},"pages/part-17-how-to-install-linux.html":{"url":"pages/part-17-how-to-install-linux.html","title":"Part 17 – How To Install Linux","keywords":"","body":"Part 17 – How To Install LinuxFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIf you do not have Linux installed on a computer within your household, I would suggest installing Virtual Box which is an open-source free virtual environment which you can install on your existing computer to have a version of Linux you can program with. Below is a link to download and install Virtual Box as there are versions for both Windows and Mac.https://www.virtualbox.org/wiki/Downloads  In addition, you will need a copy of Linux to which I will be working with Ubuntu. Below is a link to download the .iso file to which you will install once you have Virtual Box installed.http://www.ubuntu.com/download/desktop After you download the above .iso, go to your Download directory and first execute and run the VirtualBox-5.0.24-108355-Win.exe or whatever version of VirtualBox that is currently available. If you are running a Mac, you will download the .dmg file. Simply double-click on the file to execute and run it.After you install VirtualBox-5.0.24-108355-Win.exe or the Mac .dmg file and you will see this screen:Click on the New button above which is located in the top-left corner of the screen as it is a big blue cog-looking circle.In the name field above, type Ubuntu and click the next button.It is important to click on the blue slider bar above and select an amount of ram that points to an area in green so that it does not overwhelm your computer resources. After moving the blue slider, click next.Then click create.Then click next.Then click next.Please move the dial up to 16.00 GB rather than 8.00 GB shown above then click create.The next step is to click on the green start button.The next step is to click on the yellow folder just above the cancel button.The next step is to click on the .iso file that should be in your Download directory and click open.The next step is to click start.The next step is to let the install begin and click Install Ubuntu.The next step is to check each of the boxes to Download updates while installing Ubuntu and click continue.The next step is to select Erase disk and install Ubuntu and click install now.The next step is to click continue and progress forward to the screen where you will select your timezone to which you will select continue.The next step is to select your keyboard layout and click continue.The next step is to create a name for your account. I chose noroot and did the same for the username. In addition, create a password and re-type it for verification and click continue.At this point it will take some time to install the operating system. When the process is finished, click restart now. If the window locks up, click Power Off The Machine and click close or next.At this point, click on the green start button.Enter in your password that you created earlier and click enter on your keyboard. You can click on the blue x buttons in the top right corner as they are just some information you can close out.Congratulations! You have a working version of Linux! Click on the top left icon and type terminal and double-click on the first Terminal icon with the >_ in the window.You will see a Terminal icon at the bottom left of your screen. Right-click on it and select Lock to Launcher so that it will be available for you once you close the window.In the terminal window type cd Desktop and press Enter. Then type mkdir Code and press enter. The first command moves you into the Desktop directory and the mkdir command creates a folder on the Desktop called Code so that we have a place to store our software applications that we create.It is important you keep your version of Linux up to date. Every time you login, you should type the following commands. First, sudo apt-get update and press enter.Next you should then type sudo apt-get upgrade and press enter.In order to work with 32-bit Assembly examination, we need to install the gcc multilib package so that we can compile 32-bit versions of C code for examination. Type sudo apt-get install gcc-multilib and press enter.    Finally click on Devices and click Insert Guest Additions CD Image… in order to get a better working functionality out of your VM.This has been a very long tutorial however necessary to get you a working copy of Linux so that we can continue with our future tutorials.I look forward to seeing you all next week when we learn how to use the vim text editor to begin coding!\n"},"pages/part-18-vim-text-editor.html":{"url":"pages/part-18-vim-text-editor.html","title":"Part 18 - vim Text Editor","keywords":"","body":"Part 18 - vim Text EditorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialNow that we have a working version of Linux, we need a text editor that we can work with in the terminal.To begin, open your terminal and type:This will open up the vi text editor. The first thing you need to type is the letter ‘i’ to set the editor to insert mode so you may begin typing.  After you a done typing, press the ‘esc’ key and type ‘:wq’ and press enter.Congratulations! You created your first file! This is a one time file that we need to create in order to use our text editor they way we want it to perform.The first line states set number which means we would like each file to show line numbers as this is essential for debugging code. The set smartindent, set tabstop, set shiftwidth and set expandtab statements set forth rules to properly format code and allow 4 spaces per tab indent which will help our code to look clean.There are several commands you need to be aware of. Keep in mind, to go into command mode rather than insert mode you must press the ‘esc’ key. Below are the most common commands:j or down-arrow [move cursor down one line]k or up-arrow [move cursor up one line]h or left-arrow [move cursor left one character]l or right-arrow [move cursor right one character]0 [move cursor to the start of the current line]$ [move cursor to the end of the current line]b [move cursor back to the beginning of preceding word]dd [deletes the line the cursor is on]D [deletes from the cursor position to the end of the line]yy [copies the current line]p [puts the copied text after the cursor]u [undo the last change to the file]:w [save file]:wq [save file and exit text editor]:q! [quit text editor and do not save any changes]You will be consistently moving between command mode ‘esc’ and insert mode ‘i’. Remember that when you want to insert characters you need to be in insert mode and when you want to move the cursor other than moving to the next line, you need to be in command mode.Now that we have vi configured, lets install vim which has some better functionality. Simply type:Once that is installed instead of using vi we will now use vim.I look forward to seeing you all next week when we talk about why it’s important to learn Assembly Language.\n"},"pages/part-19-why-learn-assembly.html":{"url":"pages/part-19-why-learn-assembly.html","title":"Part 19 - Why Learn Assembly","keywords":"","body":"Part 19 - Why Learn AssemblyFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWhy learn Assembly Language? Java is the most in-demand programming language and will get me a job immediately so why in the hell would I ever waste my damn time learning this archaic Assembly Language crap?So many people ask me this question and it is true, Java is HOT and in the greatest demand and there is nothing wrong with learning Java however the threats that face society more than anything in this world, above everything else, is the Cyber Security threat. With that said, Java offers a great career path and I would encourage you to learn it however Java is not the only game in town.Most malware is written in higher-level languages however most malware authors do not give the attackers their source code so they can properly deal with their crafted attack.The hackers use a multitude of high-level languages and the demand for new professional Malware Analyst Reverse Engineers continue to grow daily.When we examine malware, more than not we get only a compiled binary. The only thing we can do with a compiled binary is to break it down, instruction-by-instruction, in Assembly Language as EVERYTHING ultimately goes down to Assembly Language.When someone says Assembly Language is a dinosaur I say to those people, lets have that conversation when your entire network is brought to its knees and you can’t login to a single terminal or manipulate a single machine on your network. Lets talk about how useless Assembly Language is at that time.Understanding Assembly Language allows one to open a debugger on an a running process. Each running program has a PID to which is a numerical value which designates a running program. If we open a running process or any bit of malware with a professional or open-source tool like GDB, we can see EXACTLY what is going on and then grab the EIP instruction pointer to go where we need it to go to have COMPLETE control over program flow.Most malware is written, as I have stated, in a middle-level language and once compiled it can be read by the hardware or OS as it is not human-readable. In order for professional Cyber Security Engineers to understand this, they must learn to read, write and properly debug Assembly.Assembly Language is low-level and has many more instructions than you would see in a higher-level application.The prior 18 lessons in this tutorial series gave you the basics of x86 hardware. As I have stated in prior tutorials, we will focus on 32-bit Assembly debugging as most malware is going to try to affect as many systems as possible and although there is 64-bit malware, 32-bit malware is significantly more destructive and dangerous and will be the focus of this series.I look forward to seeing you all next week when we learn the basics of instruction code handling.\n"},"pages/part-20-instruction-code-handling.html":{"url":"pages/part-20-instruction-code-handling.html","title":"Part 20 - Instruction Code Handling","keywords":"","body":"Part 20 - Instruction Code HandlingFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialA CPU reads instruction codes that are stored in memory as each code set can contain one of more bytes of information that guide the processor to perform a very specific task. As each instruction code is read in from memory, any data needed for the instruction code is also stored and read into memory.Keep in mind, memory that contain instruction codes are no different than the bytes that contain the data used by the CPU and special pointers are used to help the CPU keep track of where in memory data is and where instruction codes are stored.A data pointer helps the CPU keep track of where the data area in memory starts which is the stack. When new data elements are placed in the stack, the stack pointer moves down in memory and as data is read from the stack the stack pointer moves up in memory. Please review Part 15 – Stack if you don’t understand this concept.The instruction pointer is used to help the CPU keep track of which instruction codes have already been processed and what code is to be processed next. Please review Part 12 – Instruction Pointer Register if you don’t understand this concept.Each and every instruction code must include an opcode that defines the basic function or task to be performed by the CPU to which opcodes are between 1 and 3 bytes in length and uniquely defines the function that is performed.Lets examine a simple C program called test.c to get started.All we are doing is creating a main function of type integer to which it has a void parameter and returning 0. All this program does is simply exit the OS.Lets compile and run this program.Lets use the objdump tool to and find the main function within it.Here is a snippet of the results you would get by running the above command. Here are the contents of the main function. Keep in mind the below is in Intel syntax as we spoke about in the last tutorial.On the far left we have the corresponding memory addresses. In the center we have the opcodes and finally on the right we have the corresponding assembly language in Intel syntax.To keep this simple, lets examine memory address 80483de where we see op codes b8 00 00 00 00. We can see that the b8 opcode corresponds with the mov eax, 0x0 instruction on the right. The next series of 00 00 00 00 represents 4 bytes of the value 0. We see mov eax, 0x0 therefore the value of 0 is moved into eax therefore representing the above code. Keep in mind, the IA-32 platform uses what we call little-endian notation which means the lower-value bytes appear first in order when reading right to left.I want to make sure you have this straight in your head so lets pretend the value above was:mov eax, 0x1In this scenario the corresponding opcode would be:b8 01 00 00 00If you are confused it is ok. Remember little-endian? Keep in mind eax is 32-bits wide therefore that is 4 bytes (8 bits = 1 byte). The values are listed in reverse order therefore we see the above representation.I look forward to seeing you all next week when we dive into the details about how to compile a program.\n"},"pages/part-21-how-to-compile-a-program.html":{"url":"pages/part-21-how-to-compile-a-program.html","title":"Part 21 - How To Compile A Program","keywords":"","body":"Part 21 - How To Compile A ProgramFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s look again at last weeks C program and take a deeper look at how we turn that source code into an executable file.To compile this program in C, we simply type:This single step will create exit.o which is the binary object file and exit which is the binary executable file.If we wanted to convert this C source code to Assembly, we need to use the GNU compiler in the below fashion. Lets start by running the below command in the terminal:Let’s begin with the -S switch. The -S switch will create comparable AT&T Syntax Assembly source code. The -m32 will create a 32-bit executable and the -O0 will tell the compiler how much optimization to use when compiling the binary. That is the capital O and the numeric 0. Numeric 0 in that case means no optimization which means it is at the most human readable instruction set. If you were to substitute a 1, 2 or 3 the amount of optimization increases as the values go up.This step above creates exit.s which is the equivalent Assembly Language source code as we mentioned above.We then need to compile the Assembly source code into a binary object file which will generate a exit.o file.Finally we need to use a linker to create the actual binary executable code from the binary object file which will create an executable called exit. Last week when we examined the executable file exit in a program called objdump, and examined the main area we saw the following below except this time we will use AT&T Assembly Language Syntax:This command above will create the following output below:Lets examine the code in the debugger. Let’s start GDB which is the GNU debugger and first list the source code by typing l, then set a breakpoint on main and run the program. Finally we will disassemble and review the output below:In each of the three above examinations, you will essentially see the same set of instructions which we will take a deeper look as to what is exactly going on in future tutorials.Throughout this tutorial series thus far we have been looking at Intel Syntax Assembly Language. We are going to turn our focus to AT&T Syntax as I have stated above as this is the natural syntax utilized in Linux with the GNU Assembler and GNU Debugger.The biggest different you will see is that in AT&T Syntax, the source and destinations are reversed.AT&T Syntax : movl %esp, %ebp [This means move esp into ebp.]Intel Syntax : mov esp, ebp [This means move ebp into esp.]You will also see some additional variances as AT&T uses additional variances which we will cover in a later tutorial.If we wanted to create a pure Assembly Code program which does the same thing above we would type:To compile this we would use the GAS Assembler and Linker:To run any executable in Linux you type ./ and the name of the binary executable. In this case we type ./exit and press return. When we do so, nothing happens. That is good as all we did was create a program that exited to the OS.I look forward to seeing you all next week when we dive into more assembly code!\n"},"pages/part-22-asm-program-1-moving-immediate-data.html":{"url":"pages/part-22-asm-program-1-moving-immediate-data.html","title":"Part 22 - ASM Program 1 [Moving Immediate Data]","keywords":"","body":"Part 22 - ASM Program 1 [Moving Immediate Data]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialI appreciate everyone being patient as it has taken 21 lessons to get to our first ASM program however very necessary background had to be covered in order to fully understand where we begin when developing assembly language.We are going to create 32-bit assembly programs as most malware is written in 32-bit mode in order to attack the maximum amount of systems possible. Keep in mind even though most of us ALL have 64-bit operating systems, 32-bit programs can run on them.For the most part we have been working with Intel syntax when it comes to assembly however I am going to focus on the native AT&T syntax going forward. It is very easy to convert back and forth between Intel and AT&T syntax as I have demonstrated in prior tutorials.Every assembly language program is divided into three sections:1)Data Section: This section is used for declaring initialized data or constants as this data does not ever change at runtime. You can declare constant values, buffer sizes, file names, etc.2)BSS Section: This section is used for declaring uninitialized data or variables.3)Text Section: This section is used for the actual code sections as it begins with a global _start which tells the kernel where execution begins.Critical to any development is the use of comments. In the AT&T syntax we use use the # symbol to declare a comment as any data after that symbol on a respective line will be ignored by the compiler.Keep in mind, assembly language statements are entered in one statement per line as you do not have to end the line with a semicolon like many other languages. The structure of a statement is as follows:[label] mnemonic [operands] [comment]A basic instruction has two parts of which the first one is the name of the instruction or the mnemonic which is executed and the second part is the operands or parameters of the command.Our first program will demonstrate how to move immediate data to a register and immediate data to memory.Lets open VIM and create a program called moving_immediate_data.s and type the following:To compile you type:as –32 -o moving_immediate_data.o moving_immediate_data.sld -m elf_i386 -o moving_immediate_data moving_immediate_data.oTo run you type:./moving_immediate_dataI would like to show you what it would look like in Intel syntax as well. Before we examine this part you will need to type sudo apt-get install nasm in a command prompt which will install the Netwide Assembler:To compile you type:nasm -f elf32 moving_immediate_data.asmld -m elf_i386 -o moving_immediate_data moving_immediate_data.oTo run you type:./moving_immediate_dataOk what the heck! There is no output! That is correct and you did not do anything wrong. Many of our programs will not actually do anything as they are not much more than sandbox programs that we will use in GDB for analysis and manipulation.Next week we will dive into the GNU GDB debugger and see what is going on under the hood.I want to take some time and discuss the code at line 20 – 22 in the AT&T version and the Intel Syntax version as well. This set of instructions takes advantage of what we call a software interrupt. On line 20 in the AT&T Syntax, we movl $1, %eax meaning we move the decimal value of 1 into eax which specifies the sys_exit call which will properly terminate program execution back to Linux so that there is no segmentation fault. On line 21, we movl $0, %ebx which moves 0 into ebx to show that the program successfully executed and finally we see int $0x80.Line 20 and 21 set up the software interrupt which we call on line 22 with the instruction int $0x80. Let’s dive into this a little deeper.In Linux, there are two distinct areas of memory. At the very bottom of memory in any program execution we have the Kernel Space which is made up of the Dispatcher section and the Vector Table.At the very top of memory in any program execution we have the User Space which is made up of The Stack, The Heap and finally your code all of which can be illustrated in the below diagram:When we load the values as we demonstrated above and call INT 0x80, the very next instruction’s address in the User Space, ASM Code section which is your code, is placed into the Return Address area in The Stack. This is critical so that when INT 0x80 does its work, it can properly know what instruction is to be carried out next to ensure proper and sequential program execution.Keep in mind in modern versions of Linux, we are utilizing Protected Mode which means you do NOT have access to the Linux Kernel Space. Everything under the long line that runs in the middle of the diagram above represents the Linux Kernel Space.The natural question is why can’t we access this? The answer is very simple, Linux will NOT allow your code to access operating system internals as that would be very dangerous as any Malware could manipulate those components of the OS to track all sorts of things such as user keystrokes, activities and the like.In addition, modern Linux OS architecture changes the address of these key components constantly as new software is installed and removed in addition to system patches and upgrades. This is the cornerstone of Protected Mode operating systems.The way that we have our code communicate with the Linux Kernel is through the use of a kernel servies call gate which is a protected gateway between User Space where your program is running and Kernel Space which is implemented through the Linux Software Interrupt of 0x80.At the very, very bottom of memory where segment 0, offset 0 exists is a lookup table with 256 entries. Every entry is a memory address including segment and offset portions which comprise of 4 bytes per entry as the first 1,024 bytes are reserved for this table and NO OTHER CODE can be manipulated there. Each address is called an interrupt vector which comprises the whole called the interrupt vector table where every vector has a number from 0 to 255 to which vector 0 starts off occupying bytes 0 to 3. This continues with vector 1 which contains 4 to 7, etc.Keep in mind, none of these addresses are part of permanent memory. What is static is vector 0x80 which points to the services dispatcher which point to Linux kernel service routines.When the return address is popped off the stack returns to the next instruction, the instruction is called the Interrupt Return or IRET which completes the execution of program flow.Take some time and look at the entire table of system calls by opening up a terminal and typing:cat /usr/include/asm/unistd_32.hBelow is a snapshot of just a few of them. As you can see the exit 1 represents the sys_exit that we utilized in our above code.Starting with this lesson we will take a 3-step approach:1)Program2)Debug3)HackEach week we will start with a program like you see here, the following week we will take it into GDB and examine what exactly is going on at the assembly level and finally in the third series of each week we will hack the data in GDB to change it to whatever we want demonstrating the ability to control program flow which includes learning how to hack malware to a point where it is not a threat.We will not necessarily look at malware directly as I would rather focus on the topics of assembly language programs that will give you the tools and understanding so that ANY program can be debugged and manipulated to your liking. That is the purpose of these tutorials.The information you will learn in this tutorial series can be used with high-level GUI debuggers like IDA Pro as well however I will focus only on the GNU GDB debugger.I look forward to seeing you all next week when we dive into creating our first assembly debug!\n"},"pages/part-23-asm-debugging-1-moving-immediate-data.html":{"url":"pages/part-23-asm-debugging-1-moving-immediate-data.html","title":"Part 23 - ASM Debugging 1 [Moving Immediate Data]","keywords":"","body":"Part 23 - ASM Debugging 1 [Moving Immediate Data]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s begin by loading the binary into GDB.To load into GDB type:gdb -q moving_immediate_datLet’s first set a breakpoint on start by typing b _start.We can then run the program by typing r.To then begin disassembly, we simply type disas.We coded a nop which means no operation or 0x90 from an OPCODE perspective for proper debugging purposes which the breakpoint properly hit. This is good practice when creating assembly programs.The native syntax as I have stated many times before is AT&T syntax which you see above. I painfully go back and forth deliberately so that you have comfort in each however going forward I will be sticking to the AT&T syntax however wanted to show you a few examples of both. I will state again that if you ever want to see Intel syntax simply type set-disassembly-flavor intel and you will have what you are looking for.We first use the command si which means step-into to advance to the next instruction. What we see here at _start+0 is you are moving the hex value of 0x64 into EAX. This is simply moving decimal 100 or as the computer sees it, hex 0x64 into EAX which demonstrates moving an immediate value into a register.We step-into again and then use the command i r which keep in mind has a space between them to give us information on the state of the CPU registers. We can see EAX now has the value of 0x64 hex or 100 decimal.After we step-into again and do a disas, we see that we have then moved the value of 0x50 into the buffer label as can refer back to the source code from last week to see.When dealing with non-register data, we can use the print command above as we type print /x buffer and it clearly shows us that the value inside buffer is 0x50. The /x designation means show us the value in hex.Consequently you can review slide 2 of this tutorial above you see at _start+5 the immediate value of 0x50 loaded into the buffer label or in this case the address of buffer which is 0x8049090 and we can examine it by using the examine instruction by typing x/xb 0x8049090 which shows us one hex byte at that location which yields 0x50.We will be doing this with every program example so that we can dive into the debugging process. If there are any questions, please leave them below in the comments.I look forward to seeing you all next week when we dive into creating our first assembly hack!\n"},"pages/part-24-asm-hacking-1-moving-immediate-data.html":{"url":"pages/part-24-asm-hacking-1-moving-immediate-data.html","title":"Part 24 - ASM Hacking 1 [Moving Immediate Data]","keywords":"","body":"Part 24 - ASM Hacking 1 [Moving Immediate Data]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s begin by loading the binary into GDB.To load into GDB type:gdb -q moving_immediate_dataLet’s first set a breakpoint on start by typing b _start.We can then run the program by typing r.To then begin disassembly, we simply type disas.We coded a nop which means no operation or 0x90 from an OPCODE perspective for proper debugging purposes which the breakpoint properly hit. This is good practice when creating assembly programs.Lets have some fun! At this point lets si once and do an i r to see that 0x64 has in fact been moved into EAX.We can see EAX has the value of 0x64 or 100 decimal. Lets HACK that value now by setting EAX to say something like 0x66 by typing set $eax = 0x66.BAM! There we go! You can see the ULTIMATE power of assembly here! We just hacked the value from 0x64 to 0x66 or 100 to 102 decimal. This is a trivial example however you can clearly see when you learn to master these concepts you develop a greater power over the computer. With each program that we create, we will have a very simple lesson like this where we will hijack at least one portion of the code so we can not only see how the program is created and debugged but how we can manipulate it to whatever we want.I look forward to seeing you all next week when we dive into creating our second assembly program!\n"},"pages/part-25-asm-program-2-moving-data-between-registers.html":{"url":"pages/part-25-asm-program-2-moving-data-between-registers.html","title":"Part 25 - ASM Program 2 [Moving Data Between Registers]","keywords":"","body":"Part 25 - ASM Program 2 [Moving Data Between Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our second program we will demonstrate how we can move data between registers. Moving data from one register to another is the fastest way to move data. It is always advisable to keep data between registers as much as can be engineered for speed.Specifically we will move the value in EDX into EAX. We will initialize this program with a simple immediate value of 22 decimal which will go into EDX and ultimately into EAX.Keep in mind you can only move similar registers between each other. We know that EAX and EDX are 32-bit registers. We know that each of these registers can be accessed by their 16-bit values as ax and dx respectively. You can’t move a 32-bit value into a 16-bit value and vice-versa.I look forward to seeing you all next week when we dive into debugging our second assembly program!\n"},"pages/part-26-asm-debugging-2-moving-data-between-registers.html":{"url":"pages/part-26-asm-debugging-2-moving-data-between-registers.html","title":"Part 26 - ASM Debugging 2 [Moving Data Between Registers]","keywords":"","body":"Part 26 - ASM Debugging 2 [Moving Data Between Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s debug the second program below:Lets fire up GDB and break on _start, run the binary and disas:Now lets si twice and i r:As we can see the value of 0x16 or 22 decimal did move into EDX successfully. Now lets si again.As you can see we have successfully moved EDX into EAX.I look forward to seeing you all next week when we dive into hacking our second assembly program!\n"},"pages/part-27-asm-hacking-2-moving-data-between-registers.html":{"url":"pages/part-27-asm-hacking-2-moving-data-between-registers.html","title":"Part 27 - ASM Hacking 2 [Moving Data Between Registers]","keywords":"","body":"Part 27 - ASM Hacking 2 [Moving Data Between Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s hack the second program below:Lets fire up GDB and break on _start, run the binary and disas:Now lets si twice and i r:As we can see the value of 0x16 or 22 decimal did move into EDX successfully. This is what we did in the last lesson however here we are going to hack that value to something else.We can set $edx = 0x19 for example:As you can see we easily hacked the value of EDX to 0x19 or 25 decimal.Hopefully you see some very simple patterns now that we are diving into very simple assembly language programs. The key is to understand how to manipulate values and instructions so that you have complete control over the binary.We are going to continue to move at a snails pace throughout the rest of this tutorial as my goal is to give everyone very small bite-size examples of how to understand x86 assembly.I look forward to seeing you all next week when we dive into writing our third assembly program!\n"},"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html":{"url":"pages/part-28-asm-program-3-moving-data-between-memory-and-registers.html","title":"Part 28 - ASM Program 3 [Moving Data Between Memory And Registers]","keywords":"","body":"Part 28 - ASM Program 3 [Moving Data Between Memory And Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our third program we will demonstrate how we can move data between memory and registers. Specifically we will move the value of inside the constant integer of 10 decimal into ECX.Keep in mind to assemble we type:as –32 -o moving_data_between_memory_and_registers.o moving_data_between_memory_and_registers.sTo link the object file we type:ld -m elf_i386 -o moving_data_between_memory_and_registers moving_data_between_memory_and_registers.o I look forward to seeing you all next week when we dive into debugging our third assembly program!\n"},"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html":{"url":"pages/part-29-asm-debugging-3-moving-data-between-memory-and-registers.html","title":"Part 29 - ASM Debugging 3 [Moving Data Between Memory And Registers]","keywords":"","body":"Part 29 - ASM Debugging 3 [Moving Data Between Memory And Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s debug! Specifically we will move the value of inside the constant integer of 10 decimal into ECX.We open GDB in quiet mode and break on _start and run by following the commands above.As we can see when we info registers the value of ECX is 0.After we step into twice, we now see the value of ECX as 10 decimal of 0xa hex.I look forward to seeing you all next week when we dive into hacking our third assembly program!\n"},"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html":{"url":"pages/part-30-asm-hacking-3-moving-data-between-memory-and-registers.html","title":"Part 30 - ASM Hacking 3 [Moving Data Between Memory And Registers]","keywords":"","body":"Part 30 - ASM Hacking 3 [Moving Data Between Memory And Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s hack! Specifically we will move the value of inside the constant integer of 10 decimal into ECX like before.We open GDB in quiet mode and break on _start and run by following the commands above. As we can see when we info registers the value of ECX is 0. Let’s do a si and another si. As you can see the value of ECX is 10 decimal or 0xa hex as it was in the prior lesson now lets hack that value to something else.Let’s set $ecx = 1337 and do an i r.As you can clearly see we have hacked the value of ECX to 0x539 hex or 1337 decimal.As I have stated throughout this series. Each of these lessons are very bite-sized examples so that you get the hard muscle memory on how to hack through a variety of situations so that you ultimately have a complete mastery of processor control.I look forward to seeing you all next week when we dive into creating our fourth assembly program!\n"},"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html":{"url":"pages/part-31-asm-program-4-moving-data-between-registers-and-memory.html","title":"Part 31 - ASM Program 4 [Moving Data Between Registers And Memory]","keywords":"","body":"Part 31 - ASM Program 4 [Moving Data Between Registers And Memory]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our fourth program we will demonstrate how we can move data between registers and memory. Specifically we will move the immediate value of 777 decimal into EAX. We then move that value stored in EAX into the constant value in memory which initially had the value of 10 decimal at runtime. Keep in mind we could have called the value anything however I called it constant as it was set up as a constant in the .data section.You can clearly see it can be manipulated so it is NOT a constant. I chose constant deliberately as if it was in pure form the value would stay 10 decimal or 0xa hex.This code is purely an academic exercise as variable data normally would be set up under the .bss section however I wanted to demonstrate that the above is possible to show the absolute flexibility of assembly language.Keep in mind to assemble we type:as –32 -o moving_data_between_registers_and_memory.o moving_data_between_registers_and_memory.sTo link the object file we type:ld -m elf_i386 -o moving_data_between_registers_and_memory moving_data_between_registers_and_memory.o I look forward to seeing you all next week when we dive into debugging our fourth assembly program!\n"},"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html":{"url":"pages/part-32-asm-debugging-4-moving-data-between-registers-and-memory.html","title":"Part 32 - ASM Debugging 4 [Moving Data Between Registers And Memory]","keywords":"","body":"Part 32 - ASM Debugging 4 [Moving Data Between Registers And Memory]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our fourth program we will demonstrate how we can move data between registers and memory. Specifically we will move the immediate value of 777 decimal into EAX. We then move that value stored in EAX into the constant value in memory which initially had the value of 10 decimal at runtime. Keep in mind we could have called the value anything however I called it constant as it was set up as a constant in the .data section.As you can see above we go into GDB and clearly see that the value of constant has been replaced with 777 decimal where in the code it was clearly set at 10 decimal in line 6 of the code at the beginning of this tutorial.We can clearly see that in line 16 of the code the value of 777 decimal was successfully moved into EAX and into the memory value of constant.I look forward to seeing you all next week when we dive into hacking our fourth assembly program!\n"},"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html":{"url":"pages/part-33-asm-hacking-4-moving-data-between-registers-and-memory.html","title":"Part 33 - ASM Hacking 4 [Moving Data Between Registers And Memory]","keywords":"","body":"Part 33 - ASM Hacking 4 [Moving Data Between Registers And Memory]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine the source code.We again can see above that we will move the immediate value of 777 decimal into EAX. We then move that value stored in EAX into the constant value in memory which initially had the value of 10 decimal at runtime. Keep in mind we could have called the value anything however I called it constant as it was set up as a constant in the .data section.As you can see above we go into GDB and clearly see that the value of constant has been replaced with 777 decimal where in the code it was clearly set at 10 decimal in line 6 of the code at the beginning of this tutorial.We can clearly see that in line 16 of the code the value of 777 decimal was successfully moved into EAX and into the memory value of constant.Now lets hack this thing!We took the very steps as we did last time with the debugging lesson. Here we hack the value of constant to which we hack the value from 777 to 666.I look forward to seeing you all next week when we dive into creating our fifth assembly program!\n"},"pages/part-34-asm-program-5-indirect-addressing-with-registers.html":{"url":"pages/part-34-asm-program-5-indirect-addressing-with-registers.html","title":"Part 34 - ASM Program 5 [Indirect Addressing With Registers]","keywords":"","body":"Part 34 - ASM Program 5 [Indirect Addressing With Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our fifth program we will demonstrate how we can manipulate indirect addressing with registers. We can place more than one value in memory as indicated above. In the past, our memory location contained one single value. In the above as you can see the value of constants contains 11 separate values.This creates a sequential series of data values placed in memory. Each data value occupies one unit of memory which is an integer or 4 bytes.We must use an index system to determine these values as what we have created above is an array.We will utilize the indexed memory mode where the memory address is determined by a base address, an offset address to add to the base address and the size of the data element, in our case an integer of 4 bytes and an index to determine which data element to select.Keep in mind an array starts with index 0. Therefore in the above code we see 1 moving into edi which is the 2nd index which ultimately goes into ebx.We will dive deeper into this in the next lesson we debug however I want you to take some time to study the code above and get a good grasp of what is going on.Keep in mind to assemble we type:as –32 -o indirect_addressing_with_registers.o indirect_addressing_with_registers.sTo link the object file we type:ld -m elf_i386 -o indirect_addressing_with_registers indirect_addressing_with_registers.o I look forward to seeing you all next week when we dive into debugging our fifth assembly program!\n"},"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html":{"url":"pages/part-35-asm-debugging-5-indirect-addressing-with-registers.html","title":"Part 35 - ASM Debugging 5 [Indirect Addressing With Registers]","keywords":"","body":"Part 35 - ASM Debugging 5 [Indirect Addressing With Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our fifth program we demonstrated how we can manipulate indirect addressing with registers.I want to start by addressing the question of why I use AT&T syntax. In previous lessons I provided many ways to easily convert back and forth between AT&T syntax and Intel syntax.I deliberately choose this path so that it forces you to be comfortable with the most complex flavor of x86. If you are confused with this syntax please review the prior lessons as I go through the differences between both.Let’s recap. We will use objdump to take a compiled binary such as the one above that we compiled in our last lesson and show how we can view it’s Intel source code.objdump -d -M intel indirect_addressing_with_registers | grep _start.: -A24 Now back to our regularly scheduled program.Let’s load the binary into GDB and break on _start, step a few steps and examine 6 of the 11 values inside the constants label.We then move the memory address of the constants label into edi and move the immediate value of 25 decimal into the second index of our array. This is in essence a source code hack as we are changing the original value of 8 to 25.If you examine the source code you see line 18 where we load the value of 1 into edi. Keep in mind this is the second value as arrays are 0 based.You can see we changed the value of 8 decimal into 25 as explained.This is our first introduction to arrays in assembly language. It is critical that you understand how they work as you may someday be a Malware Analyst or Reverse Engineer looking at the compiled binary of any number of higher-level program compiled arrays.In our next lesson we will manually hack one of the values in GDB. Keep in mind, we will have to overwrite the contents inside an actual memory address with an immediate value. The fun is only beginning!I look forward to seeing you all next week when we dive into hacking our fifth assembly program!\n"},"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html":{"url":"pages/part-36-asm-hacking-5-indirect-addressing-with-registers.html","title":"Part 36 - ASM Hacking 5 [Indirect Addressing With Registers]","keywords":"","body":"Part 36 - ASM Hacking 5 [Indirect Addressing With Registers]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s reexamine the source once more.Let’s once again load the binary into GDB and break on _start.As we look above we see the command print *0x804909e. We see that it yields a value of 5 decimal. The binary at runtime puts the values inside the constants label to a respective memory address.In this case we see that the pointer to 0x804909e or *0x804909e holds 5 decimal as we have stated above. An integer holds 4 bytes of data. The next value in our array will be stored in 0x80490a2. This memory location will hold the value of 8.If we were to continue to advance through the array we would move 4 bytes to the next value and so forth. Remember each memory location in x86 32-bit assembly holds 4 bytes of data.Let’s hack!After we broke on _start and ran, we examined the array like we did in our prior lesson. Here we hack the value at 0x80490a2 to 66 decimal instead of 8 decimal and we can see that we successfully changed one element of the array.This lesson is very important to understand how arrays are ultimately stored in memory and how to manipulate and hack them. If you have any questions, please leave them in the comments below.I look forward to seeing you all next week when we dive into programming our sixth assembly program!\n"},"pages/part-37-asm-program-6-cmov-instructions.html":{"url":"pages/part-37-asm-program-6-cmov-instructions.html","title":"Part 37 - ASM Program 6 [CMOV Instructions]","keywords":"","body":"Part 37 - ASM Program 6 [CMOV Instructions]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our sixth program we will demonstrate how we can work with CMOV instructions.Before we dive into some code lets talk about CMOV is. CMOV can prevent the processor from utilizing the JMP instructions and speeds up the respective binary.There are unsigned CMOV instructions such as:CMOVA or CMOVNBE = Above [Carry Flag or Zero Flag = 0]CMOVAE or CMOVNB = Above Or Equal [Carry Flag = 0]CMOVNC = Not Carry [Carry Flag = 0]CMOVB or CMOVNAE = Below [Carry Flag = 1]CMOVC = Carry [Carry Flag = 1]CMOVBE or CMOVNA = Below Or Equal [Carry Flag or Zero Flag = 1]CMOVE or CMOVZ = Equal [Zero Flag = 1]CMOVNE or CMOVNZ = Not Equal [Zero Flag = 0]CMOVP or CMOVPE = Parity [Parity Flag = 1]CMOVNP or CMOVPO = Not Parity [Parity Flag =0]There are also signed CMOV instructions such as:CMOVGE or CMOVNL = Greater Or Equal [Sign Flag xor Overflow Flag = 0]CMOVL or CMOVNGE = Less [Sign Flag xor Overflow Flag = 1]CMOVLE or CMOVNG = Less Or Equal [Sign Flag xor Overflow Flag or ZF = 1]CMOVO = Overflow [Overflow Flag = 1]CMOVNO = Not Overflow [Overflow Flag = 0]CMOVS = Sign NEGATIVE [Sign Flag = 1]CMOVNS = Not Sign POSITIVE [Sign Flag = 0]Keep in mind to review the relationships between the unsigned and signed operations. The unsigned instructions utilize the CF, ZF and PF to determine the difference between the two operands where the signed instructions utilize the SF and OF to indicate the condition of the comparison between the operands.If you need a refresher on the flag please review Part 14 on Flags in this series.The CMOV instructions rely on a mathematical instruction that sets the EFLAGS register to operate and therefore saves the programmer to use JMP statements after the compare statement. Lets examine some source code.Ok lets begin with lines 21 and 22. This is nothing new that we have experienced as we are simply moving the array into ebx.On line 24 we see the find_smallest_value function to where we are cycling through the array and using the CMOVB to find the lowest value ultimately.We see cmp %ebx, %eax to which cmp subtracts the first operand from the second and sets the EFLAGS register appropriately. At this point the cmovb is used to replace the value in ebx with the value in eax if the value is smaller than what was originally in the ebx register.After we exit the loop we see three sets of sys_writes to first display our message, second to display our converted integer to ascii value and then finally a period and line feed.Keep in mind to assemble we type:as –32 -o cmov_instructions.o cmov_instructions.sTo link the object file we type:ld -m elf_i386 -o cmov_instructions cmov_instructions.o I look forward to seeing you all next week when we dive into debugging our sixth assembly program!\n"},"pages/part-38-asm-debugging-6-cmov-instructions.html":{"url":"pages/part-38-asm-debugging-6-cmov-instructions.html","title":"Part 38 - ASM Debugging 6 [CMOV Instructions]","keywords":"","body":"Part 38 - ASM Debugging 6 [CMOV Instructions]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLets re-examine some source code.Lets break on 0x08048092 which is line 31. Lets do a r to run and then type print $ebx. We can see the value of 7.Ok now lets break on 0x080480b1 which is line 46. Remember when we are examining the value of answer, it has been converted to its ascii printable equivalent so in order to see the value of ‘7’ you would type x/1c &answer.I look forward to seeing you all next week when we dive into hacking our sixth assembly program!\n"},"pages/part-39-asm-hacking-6-cmov-instructions.html":{"url":"pages/part-39-asm-hacking-6-cmov-instructions.html","title":"Part 39 - ASM Hacking 6 [CMOV Instructions]","keywords":"","body":"Part 39 - ASM Hacking 6 [CMOV Instructions]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s bring the binary into gdb.Let’s now run the binary. We see that the smallest value is 7 which is expected. Our final bit of instruction in this tutorial will teach you how to jump to any part of the execution that you so choose.We set $eip = 0x080480dd which is the exit routine. We see now that it bypasses all of the code from the nop instruction when we broke on _start. You now can use this command to jump anywhere inside of any binary within the debugger.I look forward to seeing you all next week when we wrap up our tutorial series.\n"},"pages/part-40-conclusion.html":{"url":"pages/part-40-conclusion.html","title":"Part 40 - Conclusion","keywords":"","body":"Part 40 - ConclusionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThis has been an extensive and hopefully beneficial tutorial series for you all. Understanding assembly language is so important to everyone when trying to understand how Malware works in addition to programming no matter bare-metal assembly, c, c++ or even Java, Python or iOS or Android development.If you are looking to pursue a career in Reverse Engineering, assembly will be second nature to you. Most of us will pursue higher-level language development as computers and devices are significantly more powerful today which allows for rapid development languages.I want to thank you all for joining me on this tutorial series and look forward to you all making an impact in the future of tomorrow!\n"},"pages/part-1-the-meaning-of-life.html":{"url":"pages/part-1-the-meaning-of-life.html","title":"Part 1 – The Meaning Of Life","keywords":"","body":"Part 1 - The Meaning Of LifeFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to set up our development environment. We will need the following:Raspberry Pi 4\n64GB MicroSD Card\nMicro SD Card Reader/Writer\nDownload 64-bit Kali Linux ARM Image\nDownload balenaEtcher\nFlash Kali Linux ARM Image\nGit Clone & Build Radare2 Software\nVIM or Nano Text Editor Software\nKali Linux RaspberryPi 2 (v1.2), 3 and 4 (64-Bit) (img.xz) [https://www.offensive-security.com/kali-linux-arm-images/]After obtaining all the necessary devices and software please watch the video on how to set up your environment as Null Byte did an amazing job with a step-by-step tutorial which will get you set-up in minutes.The next step is to git clone and build the Radare2 software as this will we want the latest version as the standard version built into Kali will not be sufficient for our needs.cd Documents\ngit clone https://github.com/radareorg/radare2.git\nsys/install.sh\nFinally we will be using a text editor to build our code. Kali has both the VIM and Nano text editors built-in. We will be using VIM but you are free to use whatever one you are comfortable with.In our next lesson we will write our first C++ program which will be \"Hello World!\".\n"},"pages/part-2-number-systems.html":{"url":"pages/part-2-number-systems.html","title":"Part 2 - Number Systems","keywords":"","body":"Part 2 – Number SystemsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialAt the core of the microprocessor are a series of binary numbers which are either +5V (on or 1) or 0V (off or 0). Each 0 or 1 represents a bit of information within the microprocessor. A combination of 8 bits results in a single byte.Before we dive into binary, lets examine the familiar decimal. If we take the number 2017, we would understand this to be two thousand and seventeen.Let’s take a look at the binary system and the basics of how it operates.If we were to convert a binary number into decimal, we would very simply do the following. Lets take a binary number of 0101 1101 and as you can see it is 93 decimal.Adding the values in the value column gives us 0 + 64 + 0 + 16 + 8 + 4 + 0 + 1 = 93 decimal.If we were to convert a decimal number into binary, we would check to see if a subtraction is possible relative to the highest order bit and if so, a 1 would be placed into the binary column to which the remainder would be carried into the next row. Let’s consider the example of the decimal value of 120 which is 0111 1000 binary.1)Can 128 fit inside of 120: No, therefore 0.2)Can 64 fit inside of 120: Yes, therefore 1, then 120 – 64 = 56.3)Can 32 fit inside of 56: Yes, therefore 1, then 56 – 32 = 24.4)Can 16 fit inside of 24: Yes, therefore 1, then 24 – 16 = 8.5)Can 8 fit inside of 8: Yes, therefore 1, then 8 – 8 = 0.6)Can 4 fit inside of 0: No, therefore 0.7)Can 2 fit inside of 0: No, therefore 0.8)Can 1 fit inside of 0: No, therefore 0.When we want to convert binary to hex we simply work with the following table.Lets convert a binary number such as 0101 1111 to hex. To do this we very simply look at the table and compare each nibble which is a combination of 4 bits. Keep in mind, 8 bits is equal to a byte and 2 nibbles are equal to a byte.0101 = 51111 = FTherefore 0101 1111 binary = 0x5f hex. The 0x notation denotes hex.To go from hex to binary it’s very simple as you have to simply do the opposite such as:0x3a = 0011 10103 = 0011A = 1010It is important to understand that each hex digit is a nibble in length therefore two hex digits are a byte in length.To convert from hex to decimal we do the following:0x5f = 955 = 5 x 16^1 = 5 x 16 = 80F = 15 x 16^0 = 15 x 1 = 15Therefore we can see that 80 + 15 = 95 which is 0x5f hex.Finally to convert from decimal to hex. Lets take the number 850 decimal which is 352 hex.We put the numbers together from bottom to the top and we get 352 hex.“Why the hell would I waste my time learning all this crap when the computer does all this for me!”If you happen to know any reverse engineers please if you would take a moment and ask them the above question.The reality is, if you do NOT have a very firm understanding of how all of the above works, you will have a hard time getting a grasp on how the ARM processor registers hold and manipulate data. You will also have a hard time getting a grasp on how the ARM processor deals with a binary overflow and it’s effect on how carry operations work nor will you understand how compare operations work or even the most basic operations of the most simple assembly code.I am not suggesting you memorize the above, nor am I suggesting that you do a thousand examples of each. All I ask is that you take the time to really understand that literally everything and I mean everything goes down to binary bits in the processor.Whether you are creating, debugging or hacking an Assembly, Python, Java, C, C++, R, JavaScript, or any other new language application that hits the street, ultimately everything MUST go down to binary 0 and 1 to which represent a +5V or 0V.We as humans operate on the base 10 decimal system. The processor works on a base 16 (hex) system. The registers we are dealing with in conjunction with Linux are addressed in 32-bit sizes. When we begin discussion of the processor registers, we will learn that each are 32-bits wide (technically the BCM2837 are 64-bit wide however our version of Linux that we are working with is 32-bit therefore we only address 32-bits of each register).Next week we will dive into binary addition! Stay tuned!\n"},"pages/part-3-binary-addition.html":{"url":"pages/part-3-binary-addition.html","title":"Part 3 - Binary Addition","keywords":"","body":"Part 3 – Binary AdditionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBinary addition can occur in one of four different fashions:0 + 0 = 0\n1 + 0 = 1\n0 + 1 = 1\n1 + 1 = 0 (1) [One Plus One Equals Zero, Carry One]\nKeep in mind the (1) means a carry bit. It very simply means an overflow.Lets take the following 4-bit nibble example:  0111\n\n0100\n= 1011\nWe see an obvious carry in the 3rd bit. If the 8th bit had a carry then this would generate a carry flag within the CPU.Let’s examine an 8-bit number:  01110000\n01010101\n= 11000101\nIf we had:     ﻿﻿11110000\n11010101\n= (1)11000101\nHere we see a carry bit which would trigger the carry flag within the CPU to be 1 or true. We will discuss the carry flag in later tutorials. Please just keep in mind this example to reference as it is very important to understand.Next week we will dive into binary subtraction! Stay tuned!\n\n"},"pages/part-4-binary-subtraction.html":{"url":"pages/part-4-binary-subtraction.html","title":"Part 4 - Binary Subtraction","keywords":"","body":"Part 4 – Binary SubtractionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBinary subtraction is nothing more than adding the negative value of the number to be subtracted. For example 8 + - 4, the starting point would be zero to which we move 8 points in the positive direction and then four points in the negative direction yielding a value of 4.We represent a sign bit in binary to which bit 7 indicates the sign of number where 0 is positive and 1 is negative.The above would represent -2.We utilize the concept of twos compliment which inverts each bit and then finally adding 1.Lets examine binary 2.00000010Invert the bits.11111101Let’s examine a subtraction operation:So what is the (1) you may ask, that is the overflow bit. In future tutorials we will examine what we refer to as the overflow flag and carry flag.Next week we will dive into word lengths! Stay tuned!\n"},"pages/part-5-word-lengths.html":{"url":"pages/part-5-word-lengths.html","title":"Part 5 - Word Lengths","keywords":"","body":"Part 5 – Word LengthsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe system on chip we are working with has a 32-bit ARM CPU. 32-bits is actually 4 bytes of information which make up a word.If you remember my prior tutorial on x86 Assembly, a word was 16-bits. Every different architecture defines a word differently.The most significant bit of a word for our ARM CPU is located at bit 31 therefore a carry is generated if an overflow occurs there.The lowest address in our architecture starts at 0x00000000 and goes to 0xFFFFFFFF. The processor sees memory in word blocks therefore every 4 bytes. A memory address associated with the start of a word is referred to as a word boundary and is divisible by 4. For example here is our first word:0x00000000\n0x00000004\n0x00000008\n0x0000000C\nSo why is this important? There is the concept of fetching and executing to which the processor deals with instructions to which it must work in this fashion for proper execution.Before we dive into coding assembly it is critical that you understand some basics of how the CPU operates. There will be a number of more lectures going over the framework so I appreciate everyone hanging in there!Next week we will dive into registers! Stay tuned!\n"},"pages/part-6-registers.html":{"url":"pages/part-6-registers.html","title":"Part 6 - Registers","keywords":"","body":"Part 6 – RegistersFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialOur ARM microprocessor has internal storage which make any operation must faster as there is no external memory access needed. There are two modes, User and Thumb. We will be focusing on User Mode as we are ultimately focused on developing for a system on chip within a Linux OS rather than bare-metal programming which would be better suited on a microcontroller device.In User Mode we have 16 registers and a CPSR register to which have a word length each which is 32-bits each or 8 bytes each.Registers R0 to R12 are multi-purpose registers to which R13 – R15 have a unique purpose as well as the CPSR. Lets take a look at a simple table to illustrate.R0 GPR (General-Purpose Register)\nR1 GPR (General-Purpose Register)\nR2 GPR (General-Purpose Register)\nR3 GPR (General-Purpose Register)\nR4 GPR (General-Purpose Register)\nR5 GPR (General-Purpose Register)\nR6 GPR (General-Purpose Register)\nR7 GPR (General-Purpose Register)\nR8 GPR (General-Purpose Register)\nR9 GPR (General-Purpose Register)\nR10 GPR (General-Purpose Register)\nR11 GPR (General-Purpose Register)\nR12 GPR (General-Purpose Register)\nR13 Stack Pointer\nR14 Link Register\nR15 Program Counter\nCPSR Current Program Status Register\nIt is critical that we understand registers in a very detailed way. At this point we understand R0 – R12 are general purpose and will be used to manipulate data as we build our programs and additionally when you are hacking apart or reverse engineering binaries from a hex dump on a cell phone or other ARM device, no matter what high-level language it is written in, it must ultimately come down to assembly which you need to understand registers and how they work to grasp and understand of any such aforementioned operation.The chip we are working with is known as a load and store machine. This means we load a register with the contents of a register or memory location and we can store a register with the contents of a memory or register location. For example:ldr, r4, [r10] @ \n    load r4 with the contents of r10, if r10 had the decimal value of \n    say 22, 22 would go to r4\nstr, r9, [r4] @ \n    store r9 contents into location in r4, if r9 had 0x02 hex, \n    0x02 would be stored into location r4\nThe @ simply indicates to the compiler that what follows it on a given line is a comment and to be ignored.The next few weeks we will take our time and look at each of the special purpose registers so you have a great understanding of what they do.Next week we will dive into more information on the program counter! Stay tuned!\n"},"pages/part-7-program-counter.html":{"url":"pages/part-7-program-counter.html","title":"Part 7 - Program Counter","keywords":"","body":"Part 7 – Program CounterFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWe will dive into the registers over the coming weeks to make sure you obtain a firm understand of their role and what they can do.We begin with the PC or program counter. The program counter is responsible for directing the CPU to what instruction will be executed next. The PC literally holds the address of the instruction to be fetched next.When coding you can refer to the PC as PC or R15 as register 15 is the program counter. You MUST treat it with care as you can set it wrong and crash the executable quite easily.You can control the PC directly in code:mov r15, 0x00000000\nI would not suggest trying that as we are not in Thumb mode and that will cause a fault as you would be going to an OS area rather than designated program area.Regarding our ARM processor, we follow the standard calling convention meaning params are passed by placing the param values into regs R0 – R3 before calling the subroutine and the subroutine returns a value by putting it in R0 before returning.This is important to understand when we think about how execution flows when dealing with a stack operation and the link register which we will discuss in future tutorials.When you are hacking or reversing a binary, controlling the PC is essential when you want to test for subroutine execution and learning about how the program flows in order to break it down and understand exactly what it is doing.Next week we will dive into more information on the CPSR! Stay tuned!\n"},"pages/part-8-cpsr.html":{"url":"pages/part-8-cpsr.html","title":"Part 8 - CPSR","keywords":"","body":"Part 8 - CPSRFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe CPSR register stores information about the program and the results of a particular operation. Bits that are in the respective registers have pre-assigned conditions that are tested for an occurrence which are flags.There are 32-bits that total this register. The highest 4 we are concerned with most which are:Bit 31 – N = Negative FlagBit 30 – Z = Zero FlagBit 29 – C = Carry Flag (UNSIGNED OPERATIONS)Bit 28 – V = Overflow flag (SIGNED OPERATIONS)When the instruction completes the CPSR can get updated if it falls into one of the aforementioned scenarios. If one of the conditions occurs, a 1 goes into the respective bits.There are two instructions that directly effect the CPSR flags which are CMP and CMN. CMP is compare such as:CMP R1, R0 @ notational subtraction where R1 – R0 and if the result is 0, bit 30 Z would be set to 1\nThe most logical command that usually follows is BEQ = branch if equal, meaning the zero flag was set and branches to another label within the code.Regarding CMP, if two operands are equal then the result is zero. CMN makes the same comparison but with the second operand negated for example:CMN R1, R0 @ R1 - (-R0) or R1 + R0\nWhen dealing with the SUB command, the result would NOT update the CPSR you would have to use the SUBS command to make any flag update respectively.Next week we will dive into more information on the Link Register! Stay tuned!\n"},"pages/part-9-link-register.html":{"url":"pages/part-9-link-register.html","title":"Part 9 - Link Register","keywords":"","body":"Part 9 - Link RegisterFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe Link Register, R14, is used to hold the return address of a function call.When a BL (branch with link) instruction performs a subroutine call, the link register is set to the subroutine return address. BL jumps to another location in the code and when complete allows a return to the point right after the BL code section. When the subroutine returns, the link register returns the address back to the program counter.The link register does not require the writes and reads of the memory containing the stack which can save a considerable percentage of execution time with repeated calls of small subroutines.When BL has executed, the return address which is the address of the next instruction to be executed, is loaded into the LR or R14. When the subroutine has finished, the LR is copied directly to the PC (Program Counter) or R15 and code execution continues where it was prior in the sequential code source.CODE TIME! Don’t be discouraged if you don’t understand everything in the code example here. It will become clear over the next few lessons.To compile:as -o lr_demo.o lr_demo.s\nld -o lr_demo lr_demo.o\nThe simple example I created here is pretty self-explanatory. We start and proceed to the no_return subroutine and proceed to the my_function subroutine then to the wrap_up subroutine and finally exit.It is necessary that we jump into GDB which is our debugger to see exactly what happens with each step:As you can see with every step inside the debugger it shows you exactly the progression from no_return to my_function skipping wrap_up until the program counter gets the address from the link register.Here we see the progression from wrap_up to exit.This is a fundamental operation when we see next week how the stack operates as the LR is an essential part of this process.Next week we will dive into the Stack Pointer! Stay tuned!\n"},"pages/part-10-stack-pointer.html":{"url":"pages/part-10-stack-pointer.html","title":"Part 10 - Stack Pointer","keywords":"","body":"Part 10 - Stack PointerFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe Stack is an abstract data type to which is a LIFO (Last In First Out). When we push a value onto the stack it goes into the Stack Pointer and when it is popped off of the stack it pops the value off of the stack and into a register of your choosing.CODE TIME! Again, don’t be discouraged if you don’t understand everything in the code example here. It will become clear over the next few lessons.To compile:as -o sp_demo.o sp_demo.s\nld -o spdemo sp_demo.o\nOnce again lets load the binary into GDB to see what is happening.Lets step into one time.We see hex 30 or 48 decimal moved into r7. Lets step into again.We see the value of the sp change from 0x7efff3a0 to 0xefff39c. That is a movement backward 4 bytes. Why the heck is the stack pointer going backward you may ask!The answer revolves around the fact that the stack grows DOWNWARD. When we say the top of the stack you can imagine a series of plates being placed BENEATH of each other.Originally the sp was at 0x7efff3a0.When we pushed r7 onto the stack, the new value of the Stack Pointer is now 0x7efff39c so we can see the Stack truly grows DOWNWARD in memory.Now lets step into again.https://media-exp1.licdn.com/dms/image/C4E12AQE-tIYlBxJojQ/article-inline_image-shrink_1000_1488/0/1520143279567?e=1614211200&v=beta&t=UuUIo2c8Cb629giyBGgjQwlYxaQ3zFp-CE-bm0BxsU\"/>We can see the value of hex 10 or decimal 16 moved into r7. Notice the sp did not change.Before we step into again, lets look at the value inside the sp.Lets step into again.We see the value in the stack was popped off the stack and put back into r7 therefore the value of hex 30 is back in r7 as well as the sp is back at 0x73fff3a0.Please take the time to type out the code, compile and link it and then step through the binary in GDB. Stack operations are critical to understanding Reverse Engineering and Malware Analysis as well as any debugging of any kind.Next week we will dive into ARM Firmware Boot Procedures.\n"},"pages/part-11-arm-firmware-boot-procedures.html":{"url":"pages/part-11-arm-firmware-boot-procedures.html","title":"Part 11 - ARM Firmware Boot Procedures","keywords":"","body":"Part 11 - ARM Firmware Boot ProceduresFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s take a moment to talk about what happens when we first power on our Raspberry Pi device.As soon as the Pi receives power, the graphics processor is the first thing to run as the processor is held in a reset state to which the GPU starts executing code. The ROM reads from the SD card and reads bootcode.bin to which gets loaded into memory in C2 cache and turns on the rest of the RAM to which start.elf then loads.The start.elf is an OS for the graphics processor and reads config.txt to which you can mod. The kernel.img then gets loaded into 0x8000 in memory which is the Linux kernel.Once loaded, kernel.img turns on the CPU and starts running at 0x8000 in memory.If we wanted, we could create our own kernel.img to which we can hard code machine code into a file and replace the original image and then reboot. Keep in mind the ARM word size is 32 bit long which go from bit 0 to 31.As stated, when kernel.img is loaded the first byte, which is 8-bits, is loaded into address 0x8000.Lets open up a hex editor and write the following:FE FF FF EASave the file as kernel.img and reboot.“Ok nothing happens, this sucks!”Actually something did happen, you created your first bare-metal firmware! Time to break out the champagne!When the Pi boots, the below code when it reached kernel.img loads the following:FE FF FF EA@ address 0x8000, 0xfe gets loaded.@ address 0x8001, 0xff gets loaded.@ address 0x8002, 0xff gets loaded.@ address 0x8003, 0xea gets loaded.“So what the hell is really going on?”This set of commands simply executes an infinite loop.Review the datasheet:https://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdfThe above code has 3 parts to it:1)Conditional – Set To Always2)Op Code – Branch3)Offset – How Far To Move Within The Current LocationCondition – bits 31-28: 0xe or 1110Op Code – bits 27-24: 0xa or 1010Offset – bits 23-0 -2I know this may be a lot to wrap your mind around however it is critical that you take the time and read the datasheet linked above. Do not cut corners if you truly have the passion to understand the above. READ THE DATASHEET!I will go through painstaking efforts to break everything down step-by-step however there are exercises like the above that I am asking you to review the datasheet above so you learn how to better understand where to look when you are stuck on a particular routine or set of machine code. This is one of those times I ask you to please read and research the datasheet above!“I’m bored! Why the hell does this crap matter?”Glad you asked! The single most dangerous malware on planet earth today is that of the root-kit variety. If you do not have a basic understanding of the above, you will never begin to even understand what a root-kit is as you progress in your understanding.Anyone can simply replace the kernel.img file with their own hacked version and you can have total control over the entire process from boot.Next week we will dive into the Von Neumann Architecture.\n"},"pages/part-12-von-neumann-architecture.html":{"url":"pages/part-12-von-neumann-architecture.html","title":"Part 12 - Von Neumann Architecture","keywords":"","body":"Part 12 - Von Neumann ArchitectureFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialARM is a load and store machine to which the Arithmetic Logic Unit only operates on the registers themselves and any data that needs to be stored out to RAM, the control unit moves the data between memory and the registers which share the same data bus.The CPU chip of this architecture holds a control unit and the arithmetic logic unit (along with some local memory) and the main memory is in the form of RAM sticks located on the motherboard.A stored-program digital computer is one that keeps its program instructions, as well as its data, in read-write, random-access memory or RAM.Next week we will dive into the Instruction Pipeline.\n"},"pages/part-13-instruction-pipeline.html":{"url":"pages/part-13-instruction-pipeline.html","title":"Part 13 - Instruction Pipeline","keywords":"","body":"Part 13 - Instruction PipelineFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe processor works with three separate phases which are:1)Fetch Phase – The control unit grabs the instruction from memory and loads it into the instruction register.2)Decode Phase – The control unit configures all of the hardware within the processor to perform the instruction.3)Execute Phase – The processor computes the result of the instruction or operation.When the processor processes instruction 1 we refer to it as being in the fetch phase. When the processor processes instruction 2, instruction 1 goes into the decode phase and instruction 2 goes into the fetch phase. When the processor processes instruction 3, instruction 2 goes into the decode stage and instruction 1 goes into the execute stage.Keep in mind, if a branch instruction occurs, the pipeline might be flushed and start over again with a fresh set of cycles.You now have a strong basis and background of ARM Assembly and how it works regarding its load and store capability between memory and the respective registers and the basics of how the instruction set flows.Next week we will dive into our first C++ program!\n"},"pages/part-14-add.html":{"url":"pages/part-14-add.html","title":"Part 14 - ADD","keywords":"","body":"Part 14 - ADDFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn ARM Assembly, we have three instructions that handle addition, the first being ADD, the second ADC (Add With Carry) and the final ADDS (Set Flag). This week we will focus on ADD.Let’s look at an example to illustrate:Here we see that we move decimal 67 into r1 and decimal 53 into r2. We then add r1 and r2 and put the result into r0.\"So what the heck is all that and why should I care?\"This series is going to be unlike any other in it's class. The goal is to take small pieces of code and see exactly what it does. If you are going to understand how to reverse a binary or malware of any kind, it is critical that you understand the basics. Learning ARM Assembly basics will help you when reversing an iPhone or Android. This tutorial series is going to work to take extremely small bites of code and talk about:1)The Code: (Here) we speak briefly about what the code does.2)The Debug: We break down the binary in the GDB Debugger and step though each instruction and see what specifically it does to program flow, register values and flags.3)The Hack: We hack a piece of the code to make it do whatever WE want!This approach will allow you to spend just a few minutes each week to get a good grasp on what is going on behind the scenes.Next week we will dive into Debugging ADD.\n"},"pages/part-15-debugging-add.html":{"url":"pages/part-15-debugging-add.html","title":"Part 15 - Debugging ADD","keywords":"","body":"Part 15 - Debugging ADDFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our ADD example below:Again we see that we move decimal 67 into r1 and decimal 53 into r2. We then add r1 and r2 and put the result into r0.Let’s compile:as -o add.o add.sld -o add add.oLet’s bring into GDB to debug:gdb -q addWe can see that when we b _start, break on start and r, run we see the disassembly. If you do an i r we see the info registers where we notice our cpsr is 0x10.As we step again and info registers:We notice 0x43 hex or 67 decimal into r1. We also notice that the flags are unchanged (cpsr 0x10).Let’s step again and info registers:We can see r0 now holds 0x78 hex or 120 decimal. We successfully saw the add instruction in place and we again notice that the flags register (cpsr) remains unchanged by this operation.Next week we will dive into Hacking ADD.\n"},"pages/part-16-hacking-add.html":{"url":"pages/part-16-hacking-add.html","title":"Part 16 - Hacking ADD","keywords":"","body":"Part 16 - Hacking ADDFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s again review our ADD example below:Let’s debug:We see the value of 67 decimal is being moved into r1 below:Let’s hack! Lets set r1 = 66!Now we see we have hacked the program so when it adds the values it will have a different output. If you remember back to the last lecture, r0 = 120. Here we see we have hacked r1 and now the value of r0 is 119!This is the power of understanding assembly. This is a VERY simple example however with each new series as I have stated we will create a program, debug and hack it.This combination of instructions will help you to get hands on experience when learning how to have absolute control over an application and in the case of malware reverse engineering gives you the ability to make the binary do exactly what you want!Next week we will dive into ADDS.\n"},"pages/part-17-adds.html":{"url":"pages/part-17-adds.html","title":"Part 17 - ADDS","keywords":"","body":"Part 17 - ADDSFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialADDS is the same as ADD except it sets the flags accordingly in the CPSR.Let’s look at an example to illustrate:We add 100 decimal into r1, 4,294,967,295 into r2. We then add r1 and r2 and place in r0.We see adds which sets the flags in the CPSR. We have to remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.You can compile the above by:as -o adc.o adc.s\nld -o adc adc.o\nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:bit 31 - N = Negative Flagbit 30 - Z = Zero Flagbit 29 - C = Carry Flagbit 28 - V = Overflow FlagTherefore if the value in binary was 0110 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag SETCarry Flag SETOverflow Flag NOT Set It is critical that you compile, debug and hack each exercise in order to understand what is going on here.Next week we will dive into Debugging ADDS.\n"},"pages/part-18-debugging-adds.html":{"url":"pages/part-18-debugging-adds.html","title":"Part 18 – Debugging ADDS","keywords":"","body":"Part 18 – Debugging ADDSFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code:We again add 100 decimal into r1, 4,294,967,295 into r2. We then add r1 and r2 and place in r0.Lets debug:We again see adds which sets the flags in the CPSR. We have to remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.We need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:bit 31 - N = Negative Flagbit 30 - Z = Zero Flagbit 29 - C = Carry Flagbit 28 - V = Overflow FlagWe see the CPSR at 10 hex. 10 hex in binary is 0001.Therefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SETCarry Flag NOT SETOverflow Flag Set There is nothing in code above which set the Overflow Flag however in it’s natural state upon executing this binary it is set.Lets step through the program:We see 64 hex or 100 decimal moved into r1 as expected. No change in the CPSR. Lets step some more.We see the addition that transpires above and notice the value in r0 is 99 decimal after 100 decimal and 4294967295 decimal were added together. How is that possible? The answer is simple, we overflowed the 32-bit register of r0 from this addition.If we examine the CPSR we now see 20000010 hex or 0010 0000 0000 0000 0000 0000 0001 0000 binary. We only have to focus on the most significant bits which are 0010:The value in binary is 0010 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SETCarry Flag SETOverflow Flag NOT SetWe see that the Carry Flag was set and the Overflow Flag was NOT set. Why is that?The Carry Flag is a flag set when two unsigned numbers were added and the result is larger than the register where it is saved. We are dealing with a 32-bit register. We are also dealing with unsigned numbers therefore the CF is set and the OF was not as the OF flag deals with signed numbers.Next week we will dive into Hacking ADDS.\n"},"pages/part-19-hacking-adds.html":{"url":"pages/part-19-hacking-adds.html","title":"Part 19 – Hacking ADDS","keywords":"","body":"Part 19 – Hacking ADDSFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s once again re-examine our code:We again add 100 decimal into r1, 4,294,967,295 into r2. We then add r1 and r2 and place in r0.Lets debug:We again see adds which sets the flags in the CPSR. We have to remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.We need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:bit 31 - N = Negative Flagbit 30 - Z = Zero Flagbit 29 - C = Carry Flagbit 28 - V = Overflow FlagWe see the CPSR at 10 hex. 10 hex in binary is 0001.Therefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SETCarry Flag NOT SETOverflow Flag Set Lets take a look if we step again:We see 4294967295 decimal or 0xffffffff in r2. We know if we step again we will cause the CPSR to change from 0001 to 0010 which means:The value in binary is 0010 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SETCarry Flag SETOverflow Flag NOT SetThis action sets the carry flag. However lets hack:We hacked r2 and changed the value to 1 decimal and 0x1 hex. NOW we know before the CPSR went to 0010 last time however now that we hacked this, lets see what happens to the CPSR when we step.BAM! We hacked it and see r0 is 101 and therefore did NOT trigger the carry flag and kept the CPSR at 0x10 hex which means 0001 binary which means:Therefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SETCarry Flag NOT SETOverflow Flag Set It is so important that you understand this lesson in its entirety. If not, please review the last two weeks lessons.Next week we will dive into ADC.\n"},"pages/part-20-adc.html":{"url":"pages/part-20-adc.html","title":"Part 20 – ADC","keywords":"","body":"Part 20 – ADCFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialADC is the same as ADD except it adds a 1 if the carry flag is set. We need to pay particular attention to the CPSR or Status Register when we work with ADC.Let’s look at an example to illustrate:We add 100 decimal into r1, 4,294,967,295 into r2, 100 decimal into r3 and 100 decimal into r4. We then add r1 and r2 and place in r0 and then add r3 and r4 and place into r5.We see adds which sets the flags in the CPSR. We have to once again remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.You can compile the above by:as -o adc.o adc.s\nld -o adc adc.o\nI want you to ask yourself what is going to happen when r3(100 decimal) is added to r4(100 decimal)? What do you think the value of r5 will be with the above example of setting the flags with the adds result? Think about the first sentence in this tutorial and keep this in mind for the next tutorial.Next week we will dive into Debugging ADC.\n"},"pages/part-21-debugging-adc.html":{"url":"pages/part-21-debugging-adc.html","title":"Part 21 – Debugging ADC","keywords":"","body":"Part 21 – Debugging ADCFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialTo recap, ADC is the same as ADD except it adds a 1 if the carry flag is set. We need to pay particular attention to the CPSR or Status Register when we work with ADC.Let’s review our code:We add 100 decimal into r1, 4,294,967,295 into r2, 100 decimal into r3 and 100 decimal into r4. We then add r1 and r2 and place in r0 and then add r3 and r4 and place into r5.We see adds which sets the flags in the CPSR. We have to once again remember when we debug in GDB, the value of the CPSR is in hex. In order to see what flags are set, we must convert the hex to binary. This will make sense as we start to debug and hack this example in the coming tutorials.Last week I raised a question where I wanted you to ask yourself what is going to happen when r3(100 decimal) is added to r4(100 decimal)? What do you think the value of r5 will be with the above example of setting the flags with the adds result?Ok so we add 100 decimal and 100 decimal together in r3 and r4 and we get 201 decimal in r5! Is something broken? ADC is the same as ADD except it adds a 1 if the carry flag is set. Therefore we get the extra 1 in r5.We again need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:bit 31 - N = Negative Flagbit 30 - Z = Zero Flagbit 29 - C = Carry Flagbit 28 - V = Overflow FlagWe see the CPSR at 20000010 hex. The most significant bits of 20000010 hex in binary is 0010.Therefore if the value in binary was 0010 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SetCarry Flag SETOverflow Flag NOT SetAs we can clearly see the carry flag was set. I hope you can digest and understand each of these very simple operations and how they have an effect on the CPSR.Next week we will dive into Hacking ADC.\n"},"pages/part-22-hacking-adc.html":{"url":"pages/part-22-hacking-adc.html","title":"Part 22 – Hacking ADC","keywords":"","body":"Part 22 – Hacking ADCFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialTo recap again, ADC is the same as ADD except it adds a 1 if the carry flag is set. We need to pay particular attention to the CPSR or Status Register when we work with ADC.Let’s again review our code:We add 100 decimal into r1, 4,294,967,295 into r2, 100 decimal into r3 and 100 decimal into r4. We then add r1 and r2 and place in r0 and then add r3 and r4 and place into r5.We run the program and step to where we move 4,294,967,295 into r2. Let’s hack that value in r2 and change it to 100 decimal.Let’s step a few more times:Ok so now we add 100 decimal and 100 decimal together in r3 and r4 and we get 200 decimal in r5! Do you remember last week when we had 201? Let’s examine the CPSR below.We again need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the following:bit 31 - N = Negative Flagbit 30 - Z = Zero Flagbit 29 - C = Carry Flagbit 28 - V = Overflow FlagWe see the CPSR at 10 hex. The most significant bits of 10 hex in binary is 0001.Therefore if the value in binary was 0001 of bit 31, 30, 29 and 28 (NZCV) that would mean:Negative Flag NOT SetZero Flag NOT SetCarry Flag NOT SETOverflow Flag SetAs we can clearly see the carry flag was NOT set. I hope you can digest and understand each of these very simple operations and how they have an effect on the CPSR. Please take the time and review last weeks lesson for comparison.Next week we will dive into SUB.\n"},"pages/part-23-sub.html":{"url":"pages/part-23-sub.html","title":"Part 23 – SUB","keywords":"","body":"Part 23 – SUBFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialSubtraction in ARM has four instructions which are SUB, SBC, RSB and RSC. We will start today with SUB.Please keep in mind when you add the S suffix on the end of each such as SUBS, SBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags in the prior lessons so that you should have a firm grasp on this now.Let’s examine an example of SUB:To compile:as -o sub.o sub.s\nld -o sub sub.o\nWe simply take 67 decimal and move into r1 and 53 decimal and move into r2 and subtract r1 – r2 and put the result in r0.Next week we will dive into SUB debugging.\n"},"pages/part-24-debugging-sub.html":{"url":"pages/part-24-debugging-sub.html","title":"Part 24 – Debugging SUB","keywords":"","body":"Part 24 – Debugging SUBFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialAs stated, subtraction in ARM has four instructions which are SUB, SBC, RSB and RSC. We will start today with SUB.Please keep in mind when you add the S suffix on the end of each such as SUBS, SBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags in the prior lessons so that you should have a firm grasp on this now.Let’s re-examine our example of SUB:We simply take 67 decimal and move into r1 and 53 decimal and move into r2 and subtract r1 – r2 and put the result in r0.Let’s debug.As we can see the registers are clear. Lets step through and see what the value of r0 becomes.As you can see above r0 now has decimal 14 which works as expected.Next week we will dive into SUB hacking.\n"},"pages/part-25-hacking-sub.html":{"url":"pages/part-25-hacking-sub.html","title":"Part 25 – Hacking SUB","keywords":"","body":"Part 25 – Hacking SUBFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialAs stated, subtraction in ARM has four instructions which are SUB, SBC, RSB and RSC. We will start today with SUB.Please keep in mind when you add the S suffix on the end of each such as SUBS, SBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags in the prior lessons so that you should have a firm grasp on this now.Let’s re-examine our example of SUB:We simply take 67 decimal and move into r1 and 53 decimal and move into r2 and subtract r1 – r2 and put the result in r0.Let’s hack.As we can see the registers are clear. Lets step through and see what the value of r0 becomes when we do a little hacking.As you can see above r0 now has decimal 17 which works as expected as we hacked the value of r2 to decimal 50 instead of decimal 53.I want to thank you all for taking this journey to learn ARM Assembly. This is the end of the series as I encourage you all to take what you have learned and continue to work through the ARM instruction set and continue your progress.This tutorial’s purpose was to provide you a solid foundation in ARM Assembly and I believe we have done that. Thank you all and I look forward to seeing you all become future Reverse Engineers!\n"},"pages/part-1-the-meaning-of-life-part-2.html":{"url":"pages/part-1-the-meaning-of-life-part-2.html","title":"Part 1 – The Meaning Of Life Part 2","keywords":"","body":"Part 1 – The Meaning Of Life Part 2For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWelcome to the ARM Reverse Engineering tutorial. This is the third tutorial series that I have done focusing on Assembly Language and Reverse Engineering.The first series was on x86 Assembly and the second was on ARM Assembly. This series will be an expansion series on ARM focusing on ARM Reverse Engineering so rather than create programs directly in Assembly alone and then Reverse Engineer the binary in Assembly we will work with Assembly and C together and Reverse Engineer in Assembly so that you will get a flavor for a real-world series of applications and what it looks like disassembled.We will not be working with GUI tools such as IDA Pro as we will be working with GDB in CLI shell. We will not be working in a traditional lab environment where we are going to put a binary into a debugger rather we are going to SSH into the ARM device and actually attach to a running process (PID) and Reverse Engineer the process as it is running.The first 13 weeks will be an exact review of the ARM Assembly series as it is critical that we re-examine these concepts so that we have a very firm grasp when it comes time to reverse our binaries.I wanted to bring back the original quote below before we get started...“So if I go to college and learn Java will I make a million dollars and have nice things?”I felt it necessary to start out this tutorial series with such a statement. This is NOT an attack on Java as I have used Java in Android Development, Spring and JavaEE. In today’s Agile environment, rapid-development is reality. With the increased challenges in both the commercial market and the government sector, software development will continue to focus on more robust libraries that will do more with less. React, Python, Java, C# and the like will continue to grow not shrink as the race for project completion augments with each passing second of time.Like it or not, hardware is getting smaller and smaller and the trend is going from CISC to RISC. A CISC is your typical x86/x64 computer with a complex series of instructions. CISC computers will always exist however with the trend going toward cloud computing and the fact that RISC machines with a reduced instruction set are so enormously powerful today, they are the obvious choice for consumption.How many cell phones do you think exist on earth today? Most of them are RISC machines. How many of you have a Smart TV or Amazon Echo or any number of devices considered part of the IOT or Internet Of Things? Each of these devices have one thing in common – they are RISC and all are primarily ARM based.ARM is an advanced RISC machine. Compared to the very complex architecture of a CISC, most ARM systems today are what is referred to as a SoC or system on chip which is an integrated circuit which has all of the components of a computer and electronic system on a single chip. This includes RF functionality as well. These low-power embedded devices can run versions of Windows, Linux and many other advanced operating systems.“Well who cares about ARM, you can call it anything you want, I know Java and that’s all I need to know cause when I program it works everywhere so I don’t have to worry about anything under the hood.”I again just want you to reflect on the above statement for a brief moment. As every day continues to pass, more and more systems are becoming vulnerable to attack and compromise. Taking the time to understand what is going on under the hood can only help to curb this unfortunate reality.This series will focus on ARM Reverse Engineering. We will work with a Raspberry Pi 3 which contains the Broadcom BCM2837 SoC with a 4x ARM Cortex-A53, 1.2GHz CPU and 1 GB LPDDR2 RAM. We will work with the Raspbian Jessie, Linux-based operating system. If you don’t own a Raspberry Pi 3, they are usually available for $35 on Amazon or any number of retailers. If you would like to learn more visit https://www.raspberrypi.org.We will work solely in the terminal so no pretty pictures and graphics as we are keeping it to the hardcore bare-bones utilizing the GNU toolkit to compile and debug our code base.UNDER NO CONDITIONS ARE YOU TO EVER USE THIS EDUCATION TO CAUSE HARM TO ANY SYSTEM OF ANY KIND AS I AM NOT RESPONSIBLE! THIS IS FOR LEARNING PURPOSES ONLY!Next week we will dive into the binary number system and compare and contrast it with decimal and hexadecimal so we have a proper framework of understanding to move forward.\n"},"pages/part-11-firmware-boot-procedures.html":{"url":"pages/part-11-firmware-boot-procedures.html","title":"Part 11 - Firmware Boot Procedures","keywords":"","body":"Part 11 - Firmware Boot ProceduresFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s take a moment to talk about what happens when we first power on our Raspberry Pi device.As soon as the Pi receives power, the graphics processor is the first thing to run as the processor is held in a reset state to which the GPU starts executing code. The ROM reads from the SD card and reads bootcode.bin to which gets loaded into memory in C2 cache and turns on the rest of the RAM to which start.elf then loads.The start.elf is an OS for the graphics processor and reads config.txt to which you can mod. The kernel.img then gets loaded into 0x8000 in memory which is the Linux kernel.Once loaded, kernel.img turns on the CPU and starts running at 0x8000 in memory. If we wanted, we could create our own kernel.img to which we can hard code machine code into a file and replace the original image and then reboot. Keep in mind the ARM word size is 32 bit long which go from bit 0 to 31. As stated, when kernel.img is loaded the first byte, which is 8-bits, is loaded into address 0x800.Lets open up a hex editor and write the following:FE FF FF EASave the file as kernel.img and reboot.“Ok nothing happens, this sucks!”Actually something did happen, you created your first bare-metal firmware! Time to break out the champagne! When the Pi boots, the below code when it reached kernel.img loads the following:FE FF FF EA@ address 0x8000, 0xfe gets loaded.@ address 0x8001, 0xff gets loaded.@ address 0x8002, 0xff gets loaded.@ address 0x8003, 0xea gets loaded.“So what the hell is really going on?”This set of commands simply executes an infinite loop. Review the datasheet:https://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdfThe above code has 3 parts to it:1)Conditional – Set To Always2)Op Code – Branch3)Offset – How Far To Move Within The Current LocationCondition – bits 31-28: 0xe or 1110Op Code – bits 27-24: 0xa or 1010Offset – bits 23-0 -2I know this may be a lot to wrap your mind around however it is critical that you take the time and read the datasheet linked above. Do not cut corners if you truly have the passion to understand the above. READ THE DATASHEET!I will go through painstaking efforts to break everything down step-by-step however there are exercises like the above that I am asking you to review the datasheet above so you learn how to better understand where to look when you are stuck on a particular routine or set of machine code. This is one of those times I ask you to please read and research the datasheet above!“I’m bored! Why the hell does this crap matter?”Glad you asked! The single most dangerous malware on planet earth today is that of the root-kit variety. If you do not have a basic understanding of the above, you will never begin to even understand what a root-kit is as you progress in your understanding.Anyone can simply replace the kernel.img file with their own hacked version and you can have total control over the entire process from boot.Next week we will dive into the Von Neumann Architecture.\n"},"pages/part-14-hello-world.html":{"url":"pages/part-14-hello-world.html","title":"Part 14 - Hello World","keywords":"","body":"Part 14 - Hello WorldFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we begin our journey into the world of C++ and gaining a better understanding of how C++ interacts with our ARM processor.The prior lessons in this series focus on the basics of the ARM processor and touch upon its architecture and how everything ultimately translates down to Assembly Language and then ultimately opcodes into machine language.We start with our first program in C++ which is our “Hello World” program. Let’s dive in and break each line down step-by-step and see how this language works. We will call this example1.cpp and save it to our device.#include \nint main(void) {\n    std::cout \nreturn 0;\n}\nTo compile this we simply type:g++ example1.cpp -o example1\nWe simply then type:./example1\nSUCCESS! We see “Hello World” printed to the standard output or terminal!Lets break it down line by line:#include  is referred to as a preprocessor statement. These preprocessor statements happen just before the compilation of the rest of the code. The #include keyword will find a file called iostream and take all of the contents of that file and paste it into the existing code we just created. These files are also called header files. We call iostream because we need a declaration for a function called cout and endl. The cout function allows us to print text to the standard output or terminal and the endl function creates a new line after the text has been displayed.The main section which is of type integer is the entry point into the main application or binary. You will notice a void inside the () which indicates that it does not have any parameters which will be passed into the function.The std indicates a namespace which is quite simply a mechanism to organize code into logical groups in order to prevent name collisions when you are dealing with multiple libraries.You will see many examples where they declare a using namespace std; however I will NEVER utilize this approach as it can cause naming collisions in more complex applications.The  operator is referred to as an overloaded operator. They are essentially a function very similar to printf in the C language. We are simply moving the “Hello World” string into the cout function through the use of the  overloaded operator. We then push the endl which creates a new line to the console.The final line is the return 0. Since our main function is of type int, we have to return something. In C++ 11 there is no need for this in the main function however is required for every other function. I will stick to tradition and simply include it.The next stage is that we compile the file. The first thing that occurs is the entire contents of the iostream header goes into the source file as we discussed. The compile process is where the C++ code gets translated into machine code. The next stage of compilation occurs when the rest of the lines of our existing code are parsed through. Essentially we have all of the contents of iostream into a new file and then all of the contents of our existing file added to a single file.Compiling takes our text file the cpp file and converts it into an intermediate format called an obj file. An abstract syntax tree is created which is a conversion of constant data, variables and instructions.Once the tree is created the code is generated. This means we now have machine code that our ARM CPU will execute. Every cpp file (translation units) which will have its own respective obj file associated with it. Linking takes our obj files, our compiled files, in addition to the C++ Standard Library and finds where each symbol and function is and link them all together into one executable.   The concepts above may appear a bit confusing if you are new to programming however as you code and compile and later debug and hack in Assembly Language it will all become very clear and you will learn to master the processor.Next week we will dive into Debugging Hello World.\n"},"pages/part-15-debugging-hello-world.html":{"url":"pages/part-15-debugging-hello-world.html","title":"Part 15 - Debugging Hello World","keywords":"","body":"Part 15 - Debugging Hello WorldFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code from last week.Let’s debug! Let’s fire up GDB which is the GNU Debugger to which we will break down the C++ binary and step through it line-by-line in ARM Assembly.This is the ARM disassembly that we are seeing. No matter what language you program in, it ultimately will go down to this level. This might be a bit scary to you if you did not take my prior course on ARM Assembly. If you need to do a refresher, please link back to that series.You are probably asking yourself why we are not debugging with the original source code and seeing how it matches nicely to the assembly. The answer is when you are a professional Reverse Engineer, you do not get the luxury of seeing source code when you are reversing binaries. This is a childishly simple example and we will continue through the series with very simple examples so that you can learn effective techniques. We are using a text-based debugger here so that you fully understand what is going on and to also get some training if you had to ever attach yourself to a running process inside a foreign machine you will know how to properly debug or hack.I will focus SOLELY on this method rather than using a nice graphical debugger like IDA or the like so that you are able to manipulate at a very low-level.We start with loading the link register into r11 and adding 4 to the stack pointer and then adding it to r11. This is simply a routine which will allow the binary to preserve the link register and setting up space on the stack.We notice memory address 0x10750 being loaded from memory to the register r1. Let’s do a string examination and see what is located at that address.Voila! We see our string. “Hello World!” located at that memory address. Let’s set a breakpoint at main+16.Let’s take a look at our register values.Let’s now take a look at what is inside the r1 register and then step through the binary.We see the “Hello World!” string now residing inside of r1 which resides at memory address 0x10848. Finally let’s continue through the binary.Understanding assembly and step-by-step debugging allows you to have complete and ultimate control over any binary! More complex binaries can cause you hours, days or weeks to truly Reverse Engineer however the techniques are the same just more time consuming.Reverse Engineering is the most sophisticated form of analysis in advanced Computer Engineering. There are many tools that a professional Reverse Engineer uses however each of those tools have a usage and purpose however this technique is the most sophisticated and comprehensive.Next week we will dive into Hacking Hello World.\n"},"pages/part-16-hacking-hello-world.html":{"url":"pages/part-16-hacking-hello-world.html","title":"Part 16 - Hacking Hello World","keywords":"","body":"Part 16 - Hacking Hello WorldFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code from two weeks ago.Let’s debug once again.Let’s once again examine the contents of the string at memory address 0x10750 and continue through the execution of the program.As you can see it holds the “Hello World!” string and when we continue through it echo’s back to the terminal as such.Let’s hack! Let’s now overwrite the value inside of the memory address with the string, “Hacked World!” and continue execution.Woohoo! Our first hack! As you can see as you understand Assembly you have ABSOLUTE control over the entire binary no matter what language it is written in. In this very simple example we were able to hack the value inside the memory address of 0x10750 to which when executed it echoed, “Hacked World!” to the terminal or standard output.Let’s again run the binary and do a disassembly.Let’s now do the same procedure however lets si 3x and examine the string inside of r1. We see that it contains, “Hello World!” as it has been successfully ldr (load from memory into the register) at main+12.Let’s now set r1 to “Hacked World!” and continue execution. As you can see we now hacked it coming out of the register rather than in memory. You can clearly begin to see there are a number of ways to hack anything and here is a simple example of two such ways. Reverse Engineering is all about understanding how a program executes and hijacking execution flow and changing values to suit our purpose! Today you took your first step into this amazing journey!Next week we will dive into constants.\n"},"pages/part-17-constants.html":{"url":"pages/part-17-constants.html","title":"Part 17 - Constants","keywords":"","body":"Part 17 - ConstantsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialSo far we have created, debugged and hacked a simple string echo to the standard terminal. We will expand upon that example by adding a constant.A constant in C++ is a value that will not change throughout program execution (unless hacked). It is used such that you have a declaration early in the code so that if your future program architecture ever changes you can redefine the constant in one place rather than having to update code all through your code base.It is standard practice to code our constants in all CAPS so that when we see it referenced somewhere in the code we know that value is a constant.We start with our second program in C++ which is our “Constant” program. Let’s dive in and break each line down step-by-step and see how this language works. We will call this example2.cpp and save it to our device.#include \nint main(void) {\n            cons tint YEAR = 2017;\n        std::cout &lt;&lt; YEAR &lt;&lt; std::endl;\n\n        return 0;\n}\nTo compile this we simply type:g++ example2.cpp -o example2\nWe simply then type:./example2\nSUCCESS! We see “2017” printed to the standard output or terminal!Let’s break it down:We utilize the const keyword to indicate a constant to which we assign it the integer value of 2017.We then utilize the cout function to print it to the standard output or terminal and add a new line with the endl function.That’s it! Very simple.Next week we will dive into Debugging Constants.\n"},"pages/part-18-debugging-constants.html":{"url":"pages/part-18-debugging-constants.html","title":"Part 18 – Debugging Constants","keywords":"","body":"Part 18 – Debugging ConstantsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review last week’s code.Let’s debug!As we can see the value in the memory address 0x10730 is equal to 2017. Let’s continue and watch the value print to the standard output (terminal) as it did last week when we ran it.We can see very clearly that we move the value from memory into r1 and then we branch to our cout function to print to the terminal. At this stage you should feel a little more comfortable with understanding what the assembly is doing above.Next week we will dive into Hacking Constants.\n"},"pages/part-19-hacking-constants.html":{"url":"pages/part-19-hacking-constants.html","title":"Part 19 – Hacking Constants","keywords":"","body":"Part 19 – Hacking ConstantsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our original code.Let’s hack!As we can see the value in the memory address 0x10730 is equal to 2017. Let’s change that value in memory to 1981. Let’s continue and watch the value turn to 1981! Successful hack!Let’s hack a second way! Re-start the program and set a breakpoint at main+28 and continue to the breakpoint.Let's continue and we see the value in r1 is 2017. Let’s change the value in r1 to 1981. We continue and see the program successfully hacked to 1981!  Next week we will dive into Character Variables.\n"},"pages/part-20-character-variables.html":{"url":"pages/part-20-character-variables.html","title":"Part 20 – Character Variables","keywords":"","body":"Part 20 – Character VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of character variables. Unlike the strings we have dealt with thus far, a character only takes up one byte of data.Keep in mind, when we deal with any character data, we deal with literally two hex digits which are the ASCII code that represents an actual character that we see on our respective terminals.Remember that each hex digit is 4 bits in length. Therefore two hex digits are 8 bits in length or a byte long. To recap, each character translates down to an ASCII code in hex which the processor understands. The value of n is 0x6e hex or 110 decimal. You can review any ASCII table to see where we derived this value. This will come in handy in the next lesson.We start with our third program in C++ which is our “Character Variable” program. Let’s dive in and break each line down step-by-step and see how this language works. We will call this example3.cpp and save it to our device.#include \nint main(void) {\n        char yes_no = ‘n’;\n\n\n\n        std::cout &lt;&lt; yes_no &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example3.cpp -o example3We simply then type:./example3SUCCESS! We see “n” printed to the standard output or terminal!Let’s break it down:We utilize the char keyword to indicate a character variable to which we assign it the value of n.We then utilize the cout function to print it to the standard output or terminal and add a new line with the endl function.That’s it! Very simple.Next week we will dive into Debugging Character Variables.\n"},"pages/part-21-debugging-character-variables.html":{"url":"pages/part-21-debugging-character-variables.html","title":"Part 21 – Debugging Character Variables","keywords":"","body":"Part 21 – Debugging Character VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code.Let’s debug!Woah! This is confusing. I don’t see any clear memory addresses being loaded into a register to manipulate the data. Let’s keep in mind that we are dealing with a single byte character variable. If you remember from last week each character translates down to an ASCII code in hex which the processor understands. The value of n is 0x6e hex or 110 decimal. You can review any ASCII table to see where we derived this value.We do see 0x6e at main+12 which is the character ‘n’.  If we step into a few times we notice the value has been placed into r3. When we print the value in r3 we now see our ‘n’ character.Let’s continue.We now see the ‘n’ printed to the standard output as expected.It is important that you understand this process and understand that each character translates into an ASCII value to which the processor loads directly into a respective register. Our previous experience we have seen a string loaded directly into a memory location and this is not the case here.Next week we will dive into Hacking Character Variables.\n"},"pages/part-22-hacking-character-variables.html":{"url":"pages/part-22-hacking-character-variables.html","title":"Part 22 – Hacking Character Variables","keywords":"","body":"Part 22 – Hacking Character VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code.Let’s hack!We again see the direct value of 0x6e moved into r3 at main+12 which is our ‘n’.After stepping into 4 times and verify the value in r3 which we clearly see as ‘n’.Let’s hack the value in r3 to a ‘y’ and then reexamine the value in r3. We can now clearly see it has been changed to ‘y’.As we continue we successfully see our hack worked! We see the value of ‘y’ printing to the standard output.Next week we will dive into Boolean Variables.\n"},"pages/part-23-boolean-variables.html":{"url":"pages/part-23-boolean-variables.html","title":"Part 23 – Boolean Variables","keywords":"","body":"Part 23 – Boolean VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of Boolean variables. The name goes back to the great George Boole to which all modern computer science has derived. At the lowest level a value is either 0 or 1, false or true, + Let’s examine our code.#include \nint main(void) {\n        bool isHacked = false;\n\n\n\n        std::cout &lt;&lt; isHacked &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example4.cpp -o example4\n./example4\nSUCCESS! We see 0 printed to the standard output or terminal!Let’s break it down:We create a boolean variable called isHacked to which we assign a value of false or 0. When we run the binary we clearly see the value 0 that successfully was echoed to the standard output.Next week we will dive into Debugging Boolean Variables.\n"},"pages/part-24-debugging-boolean-variables.html":{"url":"pages/part-24-debugging-boolean-variables.html","title":"Part 24 – Debugging Boolean Variables","keywords":"","body":"Part 24 – Debugging Boolean VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.Let’s debug.Let’s step 4 times and disassemble.Let’s examine what is now in r3.As we can clearly see the value in isHacked is 0 or false which makes sense based on our c++ source code.I know these lessons may seem trivial however Reverse Engineering is all about breaking things down in their most basic components. Reverse Engineering is about patience and logical flow. It is critical that you take the time and work through all of these examples with a Raspberry Pi device so that you can have a proper appreciation for how the process actually works.Next week we will dive into Hacking Boolean Variables.\n"},"pages/part-25-hacking-boolean-variables.html":{"url":"pages/part-25-hacking-boolean-variables.html","title":"Part 25 – Hacking Boolean Variables","keywords":"","body":"Part 25 – Hacking Boolean VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.Let’s hack!Let’s break at main, run and disas in addition to step into four times. We see that 0 or FALSE is moved into r3 at main+12.Very simply we set r3 to 1 or TRUE and continue execution to which we notice that the Boolean variable isHacked is now TRUE.It’s that simple folks! These elementary examples will help build your mental library of examples of how to approach everything in code and understanding how to take control of code execution no matter what!Next week we will dive into Integer Variables.\n"},"pages/part-26-integer-variables.html":{"url":"pages/part-26-integer-variables.html","title":"Part 26 – Integer Variables","keywords":"","body":"Part 26 – Integer VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of Integer variables. A 32-bit register can store 2^32 different values. The range of integer values that can be stored in 32 bits depends on the integer representation used. With the two most common representations, the range is 0 through 4,294,967,295 (2^32 − 1) for representation as an (unsigned) binary number, and −2,147,483,648 (−2^31) through 2,147,483,647 (2^31 − 1) for representation as two's complement.Keep in mind with 32-bit memory addresses you can directly access a maximum of 4 GB of byte-addressable memory.Let’s examine our code.#include \nint main(void) {\n        int myNumber = 777;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example5.cpp -o example5./example5SUCCESS! We see 777 printed to the standard output or terminal!Let’s break it down:We assign the integer 777 directly into the variable myNumber and then print it out to the terminal with the c++ cout function.Next week we will dive into Debugging Integer Variables.\n"},"pages/part-27-debugging-integer-variables.html":{"url":"pages/part-27-debugging-integer-variables.html","title":"Part 27 – Debugging Integer Variables","keywords":"","body":"Part 27 – Debugging Integer VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code. I again want to include the below information from last week’s lesson to emphasize what is going on regarding integers.A 32-bit register can store 2^32 different values. The range of integer values that can be stored in 32 bits depends on the integer representation used. With the two most common representations, the range is 0 through 4,294,967,295 (2^32 − 1) for representation as an (unsigned) binary number, and −2,147,483,648 (−2^31) through 2,147,483,647 (2^31 − 1) for representation as two's complement.Keep in mind with 32-bit memory addresses you can directly access a maximum of 4 GB of byte-addressable memory.Let’s debug!We see at main+12 the address at 0x10730 loading data into r3. Let’s take a closer look.When we examine the data inside 0x10730 we clearly see the integer 777 present. When we continue we see 777 echoed back to the terminal which makes sense as we utilized the cout function within c++.#linux #arm #asm #cplusplus #reverseengineeringNext week we will dive into Hacking Integer Variables.\n"},"pages/part-28-hacking-integer-variables.html":{"url":"pages/part-28-hacking-integer-variables.html","title":"Part 28 – Hacking Integer Variables","keywords":"","body":"Part 28 – Hacking Integer VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code.  Let’s hack!Let’s take a look again inside the memory location of 0x10730.As we can clearly see the integer value of 777 appears and when we continue it echoes out to the terminal the value of 777 which corresponds with our c++ function cout.Let’s hack the value inside of 0x10730 and set the value to 666 and then reexamine the value inside 0x10730 and continue.Success! As we can see we hacked the value to 666 as we continue we see it echoed out to stdout.Next week we will dive into Float Variables.\n"},"pages/part-29-float-variables.html":{"url":"pages/part-29-float-variables.html","title":"Part 29 – Float Variables","keywords":"","body":"Part 29 – Float VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of Floating-Point variables. A floating-point variable is different from an integer as it has a fractional value attached to which we designate with a period.Let’s examine our code.#include \nfloat main(void) {\n        int myNumber = 1337.1;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example6.cpp -o example6./example6SUCCESS! We see 1337.1 printed to the standard output or terminal!Let’s break it down:We assign the floating-point variable directly into the variable myNumber and then print it out to the terminal with the c++ cout function.Thus far we have a good understanding of the ARM registers however next week we will introduce the registers within the math co-processor that work with floating-point variables. The registers you have worked with up to now only store whole numbers or integers and at the Assembly level, any fractional value must be manipulated through the math co-processor registers.Next week we will dive into Debugging Float Variables.\n"},"pages/part-30-debugging-float-variables.html":{"url":"pages/part-30-debugging-float-variables.html","title":"Part 30 – Debugging Float Variables","keywords":"","body":"Part 30 – Debugging Float VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n        float myNumber = 1337.1;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nLet’s debug!Let’s break on main+20 and continue to that point.Let’s examine what value is inside r11-8. We clearly see it is 1337.09998 which approximates our value in our original c++ code. Keep in mind a float has roughly 7 decimal digits of precision and that is why we do not see 1337.1 so please remember that as we go forward. We can also see this value in high memory.Let’s break on main+28 and continue.We see a strange new instruction. We see vldr and the value within r11, #8 being moved into s0. So what is s0? We have a math co-processor which has a series of additional registers that work with decimal or floating-point numbers. Here we see an example of such to which the value of 1337.09998 is being moved into s0. The vldr instruction loads a constant value into every element of a single-precision or double-precision register such as s0.We can only see these special registers if we do a info registers all command as we do below.Below we see the value now being moved into s0.Next week we will dive into Hacking Float Variables.\n"},"pages/part-31-hacking-float-variables.html":{"url":"pages/part-31-hacking-float-variables.html","title":"Part 31 – Hacking Float Variables","keywords":"","body":"Part 31 – Hacking Float VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n        int myNumber = 1337.1;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nLet’s review last week’s tutorial.Let’s break on main+20 and continue to that point.Let’s examine what value is inside r11-8. We clearly see it is 1337.09998 which approximates our value in our original c++ code. Keep in mind a float has roughly 7 decimal digits of precision and that is why we do not see 1337.1 so please remember that as we go forward.We can also see this value in high memory.Let’s break on main+28 and continue.We see a strange new instruction. We see vldr and the value within r11, #8 being moved into s0. So what is s0? We have a math co-processor which has a series of additional registers that work with decimal or floating-point numbers. Here we see an example of such to which the value of 1337.09998 is being moved into s0. The vldr instruction loads a constant value into every element of a single-precision or double-precision register such as s0.We can only see these special registers if we do a info registers all command as we do below.Below we see the value now being moved into s0.Let’s hack!Let’s now look at the registers and see what has transpired.As you can see we have hacked the value (less the precision issue of the float variable accurate up to 6 decimal places)!Finally as we continue we see our hacked value echoed back out to the terminal when the c++ cout function executes.Next week we will dive into Double Variables.\n"},"pages/part-32-double-variables.html":{"url":"pages/part-32-double-variables.html","title":"Part 32 – Double Variables","keywords":"","body":"Part 32 – Double VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of double-precision floating-point variables. A double-precision floating-point variable is different from a floating-point variable as it is 64-bits wide and 15-17 significant digits of precision.Let’s examine our code.#include \nint main(void) {\n        double myNumber = 1337.77;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example7.cpp -o example7./example7SUCCESS! We see 1337.77 printed to the standard output or terminal!Let’s break it down:We assign the floating-point variable directly into the variable myNumber and then print it out to the terminal with the c++ cout function.Next week we will dive into Debugging Double Variables.\n"},"pages/part-33-debugging-double-variables.html":{"url":"pages/part-33-debugging-double-variables.html","title":"Part 33 – Debugging Double Variables","keywords":"","body":"Part 33 – Debugging Double VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code.int main(void) {\n        double myNumber = 1337.77;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nLet’s debug!Let’s set a breakpoint at main+24 and continue.We see the strd r2, [r11, #-12] and we have to fully understand that this means we are storing the value at the offset of -12 from register r11 into r2. Let’s now examine what exactly resides there.  Voila! We see 1337.77 at that offset location or specifically stored into 0x7efff230 in memory.Let’s step into twice which executes the vldr d0, [r11, #-12] as we understand that 1337.77 will now be loaded into the double precision math co-processor d0 register. Let’s now print the value at that location below.Finally let’s continue and watch the value echo to the terminal. This completes our cout c++ function.Next week we will dive into Hacking Double Variables.\n"},"pages/part-34-hacking-double-variables.html":{"url":"pages/part-34-hacking-double-variables.html","title":"Part 34 – Hacking Double Variables","keywords":"","body":"Part 34 – Hacking Double VariablesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s review our code.int main(void) {\n        double myNumber = 1337.77;\n\n\n\n        std::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nLet’s debug!Let’s set a breakpoint at main+24 and continue.We see the strd r2, [r11, #-12] and we have to fully understand that this means we are storing the value at the offset of -12 from register r11 into r2. Let’s now examine what exactly resides there.  Voila! We see 1337.77 at that offset location or specifically stored into 0x7efff230 in memory.Let’s step into twice which executes the vldr d0, [r11, #-12] as we understand that 1337.77 will now be loaded into the double precision math coprocessor d0 register. Let’s now print the value at that location below.Let’s hack the d0 register!Now let’s reexamine the value inside d0.Let’s continue.Successfully hacked!Next week we will dive into the SizeOf Operator.\n"},"pages/part-35-sizeof-operator.html":{"url":"pages/part-35-sizeof-operator.html","title":"Part 35 – SizeOf Operator","keywords":"","body":"Part 35 – SizeOf OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of the SizeOf operator. Let’s examine our code.#include \nint main(void) {\n        int myNumber = 16;\n\n        int myNumberSize = sizeof(myNumber);\n\n\n\n        std::cout &lt;&lt; myNumberSize &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example8.cpp -o example8./example8We see 4 printed to the screen.Let’s break it down:We create a variable myNumber = 16 to which we create another variable myNumberSize which holds the value of the size of myNumber. We see that when we execute our code it shows 4 therefore we see that the SizeOf operator indicates an integer is 4 bytes wide.Next week we will dive into Debugging SizeOf Operator.\n"},"pages/part-36-debugging-sizeof-operator.html":{"url":"pages/part-36-debugging-sizeof-operator.html","title":"Part 36 – Debugging SizeOf Operator","keywords":"","body":"Part 36 – Debugging SizeOf OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n        int myNumber = 16;\n\n        int myNumberSize = sizeof(myNumber);\n\n\n\n        std::cout &lt;&lt; myNumberSize &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nRemember that we create a variable myNumber = 16 to which we create another variable myNumberSize which holds the value of the size of myNumber. We see that when we execute our code it shows 4 therefore we see that the SizeOf operator indicates an integer is 4 bytes wide.Let’s debug and break on main.Let’s break on main+20 as we can see the value of 4 being moved into r3.Let’s examine what is going on at main+16 as we can see that we are storing into the value of $r11-8 that which exists in r3 which in our case is 16. This makes sense as when we examine our original code the value of myNumber was in fact 16. We can see this here when we examine the value inside $r11-8.As we can see above the value inside $r11-12 is 4 as that represents the value that SizeOf is returning as the integer 16 is in fact 4 bytes wide.Finally when we continue execution we in fact see the value 4 echoed to the terminal.Next week we will dive into Hacking SizeOf Operator.\n"},"pages/part-37-hacking-sizeof-operator.html":{"url":"pages/part-37-hacking-sizeof-operator.html","title":"Part 37 – Hacking SizeOf Operator","keywords":"","body":"Part 37 – Hacking SizeOf OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n        int myNumber = 16;\n\n        int myNumberSize = sizeof(myNumber);\n\n\n\n        std::cout &lt;&lt; myNumberSize &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nRemember that we create a variable myNumber = 16 to which we create another variable myNumberSize which holds the value of the size of myNumber. We see that when we execute our code it shows 4 therefore we see that the SizeOf operator indicates an integer is 4 bytes wide.Let’s review last week’s code as we start with debugging and breaking on main.Let’s break on main+20 as we can see the value of 4 being moved into r3.Let’s examine what is going on at main+16 as we can see that we are storing into the value of $r11-8 that which exists in r3 which in our case is 16. This makes sense as when we examine our original code the value of myNumber was in fact 16. We can see this here when we examine the value inside $r11-8.As we can see above the value inside $r11-12 is 4 as that represents the value that SizeOf is returning as the integer 16 is in fact 4 bytes wide.Finally when we continue execution we in fact see the value 4 echoed to the terminal.Let’s hack!We run and break on main+28.We see the value in r3 is 4 which is expected.We break on main+36.We see the value in r1 is 4 which should make logical sense as the value was stored from r3 into r11-12 and then back to r1.Let’s hack the value in r1!Success! We have hacked the machine!Next week we will dive into the Pre-Increment Operator.\n"},"pages/part-38-pre-increment-operator.html":{"url":"pages/part-38-pre-increment-operator.html","title":"Part 38 – Pre-Increment Operator","keywords":"","body":"Part 38 – Pre-Increment OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe next stage in our journey is that of the pre-increment operator. Let’s examine our code.#include \nint main(void) {\n        int myNumber = 16;\n\n        int myNewNumber = ++myNumber;\n\n\n\n        std::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example9.cpp -o example9./example9We see 17 printed to the screen.Let’s break it down:We create a variable myNumber = 16 to which we create another variable myNewNumber which pre-increments the value of myNumber. We see that when we execute our code it shows 17.When we pre-increment the value of the variable is incremented before assigning it to another variable. For example myNumber is 16 so it gets incremented before being assigned to myNewNumber so therefore we get 17.Next week we will dive into Debugging Pre-Increment Operator.\n"},"pages/part-39-debugging-pre-increment-operator.html":{"url":"pages/part-39-debugging-pre-increment-operator.html","title":"Part 39 – Debugging Pre-Increment Operator","keywords":"","body":"Part 39 – Debugging Pre-Increment OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n        int myNumber = 16;\n\n        int myNewNumber = ++myNumber;\n\n\n\n        std::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\n\n\n\n        return 0;\n}\nTo compile this we simply type:g++ example9.cpp -o example9./example9We see 17 printed to the screen.Let’s break it down:We create a variable myNumber = 16 to which we create another variable myNewNumber which pre-increments the value of myNumber. We see that when we execute our code it shows 17.When we pre-increment the value of the variable is incremented before assigning it to another variable. For example myNumber is 16 so it gets incremented before being assigned to myNewNumber so therefore we get 17.Let’s debug.We do our normal start in gdb and break on main. Take note at main+24 we are moving the value of 1 into r3. We then see at main+28 we are storing that value at r11-8 to which we will set a breakpoint and continue.As we evaluate the value in r3 at this stage we see 17. Remember back in our original code that the value in the myNumber variable was 16. We can see that the pre-increment operator was successful to increment the value 1 to give us 17.We see that when we continue through the code the value 17 is successfully echoed to the terminal as expected.Next week we will dive into Hacking Debugging Pre-Increment Operator.\n"},"pages/part-40-hacking-pre-increment-operator.html":{"url":"pages/part-40-hacking-pre-increment-operator.html","title":"Part 40 – Hacking Pre-Increment Operator","keywords":"","body":"Part 40 – Hacking Pre-Increment OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s one again re-examine our code.#include \nint main(void) {\n        int myNumber\n= 16;\n        int\nmyNewNumber = ++myNumber;\n        std::cout\n\n        return 0;\n}\nTo compile this we simply type:g++ example9.cpp -o example9./example9We see 17 printed to the screen.Let’s break it down:We create a variable myNumber = 16 to which we create another variable myNewNumber which pre-increments the value of myNumber. We see that when we execute our code it shows 17.When we pre-increment the value of the variable is incremented before assigning it to another variable. For example myNumber is 16 so it gets incremented before being assigned to myNewNumber so therefore we get 17.Let’s debug.We do our normal start in gdb and break on main. Take note at main+24 we are moving the value of 1 into r3. We then see at main+28 we are storing that value at r11-8 to which we will set a breakpoint and continue.As we evaluate the value in r3 at this stage we see 17. Remember back in our original code that the value in the myNumber variable was 16. We can see that the pre-increment operator was successful to increment the value 1 to give us 17.We see that when we continue through the code the value 17 is successfully echoed to the terminal as expected.Let’s re-run the program.Let’s hack! Here were review the value in r3 which we know to be 17. Let’s hack it to something else.Success! As we can see when we continue we now see the hacked value echoing to the terminal.Next week we will dive into the Post-Increment Operator.\n"},"pages/part-41-post-increment-operator.html":{"url":"pages/part-41-post-increment-operator.html","title":"Part 41 – Post-Increment Operator","keywords":"","body":"Part 41 – Post-Increment OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s dive into our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = ++myNumber;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nTo compile this we simply type:g++ example10.cpp -o example10./example10We see 16 and 17 printed to the screen.Let’s break it down:We create a variable myNumber = 16 to which we create another variable myNewNumber which post-increments the value of myNumber. We see that when we execute our code it shows 16 as the value of myNewNumber and 17 as the value of myNumber as myNewNumber does not get incremented as only myNumber get incremented as it is a post operator.When we post-increment the value of the variable is incremented after assigning it to another variable. For example myNumber is 16 so it gets incremented after being assigned to myNewNumber so therefore we get 17.Next week we will dive into Debugging Post-Increment Operator.\n"},"pages/part-42-debugging-post-increment-operator.html":{"url":"pages/part-42-debugging-post-increment-operator.html","title":"Part 42 – Debugging Post-Increment Operator","keywords":"","body":"Part 42 – Debugging Post-Increment OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = ++myNumber;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which post-increments the value of myNumber. We see that when we execute our code it shows 16 as the value of myNewNumber and 17 as the value of myNumber as myNewNumber does not get incremented as only myNumber get incremented as it is a post operator.When we post-increment the value of the variable is incremented after assigning it to another variable. For example myNumber is 16 so it gets incremented after being assigned to myNewNumber so therefore we get 17.Let's debug.Let's break on *main+28 and continue.As we can see the value in r3 is 16 and the value in r2 is 17. We can see that as they are loaded from memory into the registers in *main+12 directly by the mov instruction and *main+24 we add 1 into r3 and then put that value into r2.As we continue we can see the cout c++ function called which echos out the values to the terminal (standard output) as expected.Next week we will dive into Hacking Post-Increment Operator.\n"},"pages/part-43-hacking-post-increment-operator.html":{"url":"pages/part-43-hacking-post-increment-operator.html","title":"Part 43 – Hacking Post-Increment Operator","keywords":"","body":"Part 43 – Hacking Post-Increment OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet’s re-examine our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = ++myNumber;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nWe create a variable myNumber = 16 to which we create another variable myNewNumber which post-increments the value of myNumber. We see that when we execute our code it shows 16 as the value of myNewNumber and 17 as the value of myNumber as myNewNumber does not get incremented as only myNumber get incremented as it is a post operator.When we post-increment the value of the variable is incremented after assigning it to another variable. For example myNumber is 16 so it gets incremented after being assigned to myNewNumber so therefore we get 17.Let's debug.Let's break on *main+28 and continue.As we can see the value in r3 is 16 and the value in r2 is 17. We can see that as they are loaded from memory into the registers in *main+12 directly by the mov instruction and *main+24 we add 1 into r3 and then put that value into r2.Let's hack this baby!We know we can now set the value of r3 to our heart's desire!As we continue we see the c++ cout function echo our new hacked value to the screen!Next week we will dive into the Pre-Decrement Operator.\n"},"pages/part-44-pre-decrement-operator.html":{"url":"pages/part-44-pre-decrement-operator.html","title":"Part 44 – Pre-Decrement Operator","keywords":"","body":"Part 44 – Pre-Decrement OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's take a look at our pre-decrement operator example. The pre-decrement operator decrements a given value before the action gets assigned.Let's examine our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = --myNumber;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\nstd::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nAs we compile and run we see 15 echoed out to the terminal.The value of myNumber was 16 and when it is assigned with the pre-decrement operator we see that the new value is 15 as it is assigned into myNewNumber.Next week we will dive into the Debuggin Pre-Decrement Operator.\n"},"pages/part-45-debugging-pre-decrement-operator.html":{"url":"pages/part-45-debugging-pre-decrement-operator.html","title":"Part 45 – Debugging Pre-Decrement Operator","keywords":"","body":"Part 45 – Debugging Pre-Decrement OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's re-examine our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = --myNumber;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\nstd::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nWe remember when we compile we get 15.Let's debug.Let's break.As we can see r3 holds 15. Keep in mind hacking this value may not be the final place it may be stored. Remember this for next week and re-examine the debug code above to see if you can figure it out.As we can see r1 holds 15 as well. Keep in mind the above statement.As we continue we see our cout function echoing 15 for both areas as expected.Next week we will dive into the Hacking Pre-Decrement Operator.\n"},"pages/part-46-hacking-pre-decrement-operator.html":{"url":"pages/part-46-hacking-pre-decrement-operator.html","title":"Part 46 – Hacking Pre-Decrement Operator","keywords":"","body":"Part 46 – Hacking Pre-Decrement OperatorThis week we will address the post-decrement operator. Let's examine our code.\n#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = myNumber--;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\nstd::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\n\n\n\n\n As we compile we see 16 and 15 printed out respectively.\n\n\n\nWe see that in this scenario myNewNumber does get decremented as myNumber-- takes the value of 16 and reduces it to 15.\nNext week we will dive into the Debugging Post-Decrement Operator.\n"},"pages/part-47-post-decrement-operator.html":{"url":"pages/part-47-post-decrement-operator.html","title":"Part 47 – Post-Decrement Operator","keywords":"","body":"Part 47 – Post-Decrement OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's re-examine our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = myNumber--;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\nstd::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nWe see our very simple C++ code above to which we are doing nothing more than assigning a number into a variable to which we init another int variable and assign the original variable to which it is post-decremented. We then output each value to the terminal.Let's debug.It is clear that the value for the post-decrement operator gets loaded into r1 at main+68 so let's break at main+72.We can clearly see that r1 does in fact hold the value of 15 to which was decremented from our original value.Next week we will dive into Hacking Post-Decrement Operator.\n"},"pages/part-48-debugging-post-decrement-operator.html":{"url":"pages/part-48-debugging-post-decrement-operator.html","title":"Part 48 – Debugging Post-Decrement Operator","keywords":"","body":"Part 48 – Debugging Post-Decrement OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's once again review our code.#include \nint main(void) {\n    int myNumber = 16;\n    int myNewNumber = myNumber--;\nstd::cout &lt;&lt; myNewNumber &lt;&lt; std::endl;\nstd::cout &lt;&lt; myNumber &lt;&lt; std::endl;\n\nreturn 0;\n}\nLet's review last week's debug.As we can see here the value in r1 at main+68 is 15. Let's hack!Once again we have manipulated and changed program execution to our own bidding. With each of these bite-size lessons you continue to get a better grasp on the processor and how it interfaces with the binary.I hope this series gives you a solid framework for understanding the ARM processor. This concludes the series. Thank you all for coming along on the journey!\n"},"pages/part-49-hacking-post-decrement-operator.html":{"url":"pages/part-49-hacking-post-decrement-operator.html","title":"Part 49 – Hacking Post-Decrement Operator","keywords":"","body":"Part 49 – Hacking Post-Decrement OperatorFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialI often wonder when I see all the latest hacks on a variety of networks, computers and IoT devices how many people really have even the most basic understanding of what goes on down to the microprocessor level.For years I have published x86 and ARM Assembly and Reverse Engineering tutorials with the intent of opening up the eyes of the public to better understand what Assembly Language is in addition to the notion that there is actually more than just the decimal number system.Today we have drones, AI, IoT and smart devices that the public rarely understands what the true impact is on their privacy or security.Everything is Cyber. No matter what you do or where you go or where you live or where you work you will be forced to engage \"The Cyber Revolution\".This tutorial series is your opportunity to learn FREE OF CHARGE the very basics of x64 Assembly. Naturally you might ask what is x64 Assembly and why would I possibly want to understand the basics of it let alone Reverse Engineering?Just about every computer and server today including the cloud runs on an x64 based chipset. Just about every phone, IoT and tablet device runs on an ARM chip (with a number of exceptions). Our last tutorial series dove deep into the ARM chip so if you would like to dive in please review the archives here on my LinkedIn profile.Understanding x64 will give you a better idea of the very infrastructure that supports just about everything we do. You do not have to have any computer science skills to take this FREE course. Simply a few minutes of your time once a week will do.UNDER NO CONDITIONS ARE YOU TO EVER USE THIS EDUCATION TO CAUSE HARM TO ANY SYSTEM OF ANY KIND AS I AM NOT RESPONSIBLE! THIS IS FOR LEARNING PURPOSES ONLY!Let's dive in!\n"},"pages/part-1-the-cyber-revolution.html":{"url":"pages/part-1-the-cyber-revolution.html","title":"Part 1 – The Cyber Revolution","keywords":"","body":"Part 1 – The Cyber RevolutionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialTo understand modern computing we have to go down to the most basic level. Our journey starts with the transistor. A transistor is nothing more than a complex relay as it is a switch that can be open or closed by applying an electrical charge. This charge is made possible by the use of a control wire. The control wire is attached to a material that can conduct or resist electricity to which on the other end there are two electrodes attached to such a material. This is the concept of a semiconductor. The control wire attaches to a gate electrode where if you change the electrical charge of the gate the conductivity of the semiconductor material can be manipulated. Think of a simple kitchen faucet to which you can turn water on or off. The concept is quite similar.Quite simply the flow of electricity represents a 1 and the lack of such an electricity flow represents a 0. This is a boolean on or off architecture to which we need to take a deeper dive into the binary number system at a later time.I deliberately try to keep these lessons short so that it draws the largest audience to take just a few minutes each week to properly grasp some complicated architectures.Next week we will touch on logic gates and discuss how the combination of such gates make up the core of how the processor works. We will only discuss them on a high level as it would be an entire additional course in electrical engineering to really get into how the processor is made to which we will stick to the basics and spend more of our time on how to program the chip.After some basics about the processor and an introduction to the binary and hexadecimal number systems we will build our very own bootable operating system.\n"},"pages/part-2-transistors.html":{"url":"pages/part-2-transistors.html","title":"Part 2 - Transistors","keywords":"","body":"Part 2 - TransistorsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn our last tutorial we spoke briefly about binary to which we represent as either true or false. In binary, true is equal to 1 and false is equal to 0. Computers are ultimately built on this very simple concept to which at the core we have four possible logic gates which can be combined in an infinite amount of sequences.Let’s start with the AND Gate below.In an AND Gate there are two binary values to which outputs 1 only if both binary values are 1. The NOT Gate is represented below.In a NOT Gate it simply takes a single binary value and negates it.The OR Gate is represented below.In an OR Gate only one of the inputs has to be 1 in order to output a 1.The XOR Gate  is represented below.In an XOR Gate if both inputs are either 0 or 1 the output is 0.\"The Why...\" Ok so why am I going over this? What does this have to do with understanding Assembly or Reverse Engineering? Well... At the very CORE of all processors are these simple logic gates that when combined together form complex instructions. I could spend literally years showing you this in practice however I will leave that for another to pick up the charge. What is important is that you get a basic understanding of what is going on here when we ultimately see instructions such as AND, OR, XOR, etc when we code in Assembly and more importantly when we Reverse Engineer.Stay tuned! We will be building our own very SIMPLE Operating System shortly!\n"},"pages/part-3-logic-gates.html":{"url":"pages/part-3-logic-gates.html","title":"Part 3 - Logic Gates","keywords":"","body":"Part 3 - Logic GatesFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIt really all breaks down to 1 and 0. No matter how sophisticated the future frameworks evolve they all including interpreted languages ultimately use a JVM or the like and go down to Assembly then Machine Code then binary.Why would we need to even talk about number systems? Why is it relevant to our series here? The answer is simple. In addition to everything going down to 1 and 0, the instructions and memory in addition to the processor registers all utilize another number system called hexadecimal. Let’s discuss binary! At the core of the microprocessor are a series of binary numbers which are either +5V (on or 1) or 0V (off or 0). Each 0 or 1 represents a bit of information within the microprocessor. A combination of 8 bits results in a single byte.Before we dive into binary, let's examine the familiar decimal. If we take the number 2017, we would understand this to be two thousand and seventeen.Let’s take a look at the binary system and the basics of how it operates.If we were to convert a binary number into decimal, we would very simply do the following. Let's take a binary number of 0101 1101 and as you can see it is 93 decimal.Adding the values in the value column gives us 0 + 64 + 0 + 16 + 8 + 4 + 0 + 1 = 93 decimal.If we were to convert a decimal number into binary, we would check to see if a subtraction is possible relative to the highest order bit and if so, a 1 would be placed into the binary column to which the remainder would be carried into the next row. Let’s consider the example of the decimal value of 120 which is 0111 1000 binary.1)Can 128 fit inside of 120: No, therefore 0.2)Can 64 fit inside of 120: Yes, therefore 1, then 120 – 64 = 56.3)Can 32 fit inside of 56: Yes, therefore 1, then 56 – 32 = 24.4)Can 16 fit inside of 24: Yes, therefore 1, then 24 – 16 = 8.5)Can 8 fit inside of 8: Yes, therefore 1, then 8 – 8 = 0.6)Can 4 fit inside of 0: No, therefore 0.7)Can 2 fit inside of 0: No, therefore 0.8)Can 1 fit inside of 0: No, therefore 0.When we want to convert binary to hex we simply work with the following table.Let's convert a binary number such as 0101 1111 to hex. To do this we very simply look at the table and compare each nibble which is a combination of 4 bits. Keep in mind, 8 bits is equal to a byte and 2 nibbles are equal to a byte.Therefore 0101 1111 binary = 0x5f hex. The 0x notation denotes hex.To go from hex to binary it’s very simple as you have to simply do the opposite such as:It is important to understand that each hex digit is a nibble in length therefore two hex digits are a byte in length.To convert from hex to decimal we do the following:Therefore we can see that 80 + 15 = 95 which is 0x5f hex.Finally to convert from decimal to hex. Let's take the number 850 decimal which is 352 hex.“Why the hell would I waste my time learning all this crap when the computer does all this for me!”As I mentioned above, it is vital you have a good understanding of these two additional number systems if you are truly to grasp and master reverse engineering at its core. There are some amazing tools that help the RE process however the better understanding that you have of these will help you as you grow.I am not suggesting you memorize the above, nor am I suggesting that you do a thousand examples of each. All I ask is that you take the time to really understand that literally everything and I mean everything goes down to binary bits in the processor.Whether you are creating, debugging or hacking an Assembly, Python, Java, C, C++, R, JavaScript, or any other new language application that hits the street, ultimately everything MUST go down to binary 0 and 1 to which represent a +5V or 0V.We as humans operate on the base 10 decimal system. Let’s expand our mind to base 2 binary and base 16 hexadecimal!Next week we will dive into binary addition! Stay tuned!\n"},"pages/part-4-number-systems.html":{"url":"pages/part-4-number-systems.html","title":"Part 4 - Number Systems","keywords":"","body":"Part 4 - Number SystemsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBinary addition can occur in one of four different fashions:Keep in mind the (1) means a carry bit. It very simply means an overflow.Lets take the following 4-bit nibble example:We see an obvious carry in the 3rd bit. If the 8th bit had a carry then this would generate a carry flag within the CPU.Let’s examine an 8-bit number:If we had:Here we see a carry bit which would trigger the carry flag within the CPU to be 1 or true. We will discuss the carry flag in later tutorials. Please just keep in mind this example to reference as it is very important to understand.Next week we will dive into binary subtraction! Stay tuned!\n"},"pages/part-5-binary-addition.html":{"url":"pages/part-5-binary-addition.html","title":"Part 5 - Binary Addition","keywords":"","body":"Part 5 - Binary AdditionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBinary subtraction is nothing more than adding the negative value of the number to be subtracted. For example 8 + - 4, the starting point would be zero to which we move 8 points in the positive direction and then four points in the negative direction yielding a value of 4.We represent a sign bit in binary to which bit 7 indicates the sign of number where 0 is positive and 1 is negative.The above would represent -2.We utilize the concept of twos compliment which inverts each bit and then finally adding 1.Lets example binary 2.Invert the bits.Add 1.Let’s examine a subtraction operation:So what is the (1) you may ask, that is the overflow bit. In future tutorials we will examine what we refer to as the overflow flag and carry flag.Next week we will dive into word lengths! Stay tuned!\n"},"pages/part-6-binary-subtraction.html":{"url":"pages/part-6-binary-subtraction.html","title":"Part 6 - Binary Subtraction","keywords":"","body":"Part 6 - Binary SubtractionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBefore we dive into the architecture lets talk about how we define various bits and how they are structured within the processor.In both x64 and x86, we define a byte as 8 bits. We define a word as 16 bits. We define a double word as 32 bits and a quadword as 64 bits. Finally we define a double quadword as 128 bits. Intel processors store bytes as what we refer to as \"little endian,\" meaning lower significant bytes are stored in lower memory addresses. Lets give an example of a simple 16-bit or 2 byte value. On disk - 0xAABB. When it goes into memory it is stored as 0xBBAA as I hope this provides a good visual as this concept can be quite confusing.Keep in mind, 8 bits make up a byte. 4 bits are also called a nibble which are equivalent to one hex digit.Next week we will dive into general architecture! Stay tuned!\n"},"pages/part-7-word-lengths.html":{"url":"pages/part-7-word-lengths.html","title":"Part 7 - Word Lengths","keywords":"","body":"Part 7 - Word LengthsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe x64 architecture is a backwards-compatible extension of the x86 platform. It provides a legacy 32-bit mode, which is identical to x86, and a new 64-bit mode. You can review my legacy x86 tutorial if you would like to get more information right here on LinkedIn.The term \"x64\" includes both AMD 64 and Intel64. The instruction sets are similar.x64 extends x86's 8 general-purpose registers to be 64-bit, and adds 8 new 64-bit registers. The 64-bit registers have names beginning with \"r\", so for example the 64-bit extension of eax is called rax. The new registers are named r8 through r15.The lower 32 bits, 16 bits, and 8 bits of each register are directly addressable in operands. This includes registers, like esi, whose lower 8 bits were not previously addressable. The following table specifies the assembly-language names for the lower portions of 64-bit registers.The table below breaks out each bytes distinction.Operations that output to a 32-bit subregister are automatically zero-extended to the entire 64-bit register. Operations that output to 8-bit or 16-bit subregisters are not zero-extended (this is compatible x86 behavior).The high 8 bits of ax, bx, cx, and dx are still addressable as ah, bh, ch, dh, but cannot be used with all types of operands.The instruction pointer, eip, and flags register have been extended to 64 bits (rip and rflags, respectively) as well.The x64 processor also provides several sets of floating-point registers:Eight 80-bit x87 registers.Eight 64-bit MMX registers. (These overlap with the x87 registers.)The original set of eight 128-bit SSE registers is increased to sixteen.Next week we will dive into calling conventions! Stay tuned!\n"},"pages/part-8-general-architecture.html":{"url":"pages/part-8-general-architecture.html","title":"Part 8 - General Architecture","keywords":"","body":"Part 8 - General ArchitectureFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe x64 processor uses what we refer to as __fastcall. The __fastcall calling convention specifies that arguments to functions are to be passed in registers, when possible. This calling convention only applies to the x86 architecture.The first two DWORD or smaller arguments that are found in the argument list from left to right are passed in ecx and edx registers; all other arguments are passed on the stack from right to left.Called function pops the arguments from the stack.At sign (@) is prefixed to names; an at sign followed by the number of bytes (in decimal) in the parameter list is suffixed to names.No case translation performed.Here is a simple breakdown to illustrate:If you have two parameters you are passing from a function, for example int x and int y and it is a QWORD, x will go into rcx and y will go into rdx. If you have five parameters you are passing for example int a, int b, int c, int d, int e and it is a WORD in length, a will go into cx, b into dx, c into r8w, d into r9w and e into the stack.Next week we will dive into boolean instructions! Stay tuned!\n"},"pages/part-9-calling-conventions.html":{"url":"pages/part-9-calling-conventions.html","title":"Part 9 - Calling Conventions","keywords":"","body":"Part 9 - Calling ConventionsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThere are four boolean instructions to which exist are AND, OR, XOR and NOT. Earlier in this tutorial we briefly discussed gates which took advantage of the same logic down to the metal. We will see this logic throughout our reversing so it is important to understand what it does down at the individual bit level.AND = If the first number has a 0 and the second number has a 0, the result is 0.AND = If the first number has a 0 and the second number has a 1, the result is 0.AND = If the first number has a 1 and the second number has a 0, the result is 0.AND = If the first number has a 1 and the second number has a 1, the result is 1.ex: 0 0 1 0 0 0 1 0 ex: 0 1 1 0 1 1 1 0ex:———————ex: 0 0 1 0 0 0 1 0OR = If the first number has a 0 and the second number has a 0, the result is 0.OR = If the first number has a 0 and the second number has a 1, the result is 1.OR = If the first number has a 1 and the second number has a 0, the result is 1.OR = If the first number has a 1 and the second number has a 1, the result is 1.ex: 0 0 1 0 0 0 1 0 ex: 0 1 1 0 1 1 1 0ex:———————ex: 0 1 1 0 1 1 1 0XOR = If the first number has a 0 and the second number has a 0, the result is 0.XOR = If the first number has a 0 and the second number has a 1, the result is 1.XOR = If the first number has a 1 and the second number has a 0, the result is 1.XOR = If the first number has a 1 and the second number has a 1, the result is 0.ex: 0 0 1 0 0 0 1 0 ex: 0 1 1 0 1 1 1 0ex:———————ex: 0 1 0 0 1 1 0 0NOT = If the first number has a 0 the second number becomes 1.NOT = If the first number has a 1 the second number becomes 0.ex: 0 0 1 0 0 0 1 0 ex:———————ex: 1 1 0 1 1 1 0 1Next week we will dive into pointers! Stay tuned!\n"},"pages/part-10-boolean-instructions.html":{"url":"pages/part-10-boolean-instructions.html","title":"Part 10 - Boolean Instructions","keywords":"","body":"Part 10 - Boolean InstructionsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorialx64 utilizes the flat memory model to which we have one large array of addresses that exist within the processor. A pointer is nothing more than the address of a specific value in memory. Let’s take an example:mov rax, 0x10In this example we are moving 10 hex into the rax register.To get the value inside rax at 0x10, you would use the following syntax:mov rbx, word ptr [rax] Let’s assume the value inside memory 0x10 was 0x20 therefore rax points to the value inside 0x10 which when you dereference by [rax] contains 0x20. 0x20 is the value inside of the register rax.We are moving a word value pointed inside of rax  into rbx.If we do:mov word ptr [rax], 0x66This will put the value of 0x66 into the memory location at 0x10. We know that the value inside 0x10 memory location was 0x20 so therefore the new value inside the memory at 0x10 will be 0x66.This can get confusing however when we get into code over the coming months this will become more apparent. Next week we will dive into load effective address! Stay tuned!\n"},"pages/part-11-pointers.html":{"url":"pages/part-11-pointers.html","title":"Part 11 - Pointers","keywords":"","body":"Part 11 - PointersFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWhen a binary executes in RAM the OS will unmap the code into a data segment where it finds free space in memory. Load Effective Address loads a given memory address as a pointer to any given variable. For example:lea rbx, my_varThis will load the address of my_var  into rbx. In C++, a pointer actually adds what the user would see as one if something was incremented however it is actually moving it 2 bytes forward under the hood assuming it is a word in length or 16 bits or 2 bytes. Same thing.In Assembly every single byte is addressable. For example:lea rax, my_varinc raxmov word ptr [rax], rbxLet’s say the value of 0x20 is in rbx. This above instruction will place the value of 0x20 into a non-word boundary which will result in an error. You would have to increment rax by 2 to ensure that does not happen.Next week we will dive into the data segment! Stay tuned!\n"},"pages/part-12-load-effective-address.html":{"url":"pages/part-12-load-effective-address.html","title":"Part 12 - Load Effective Address","keywords":"","body":"Part 12 - Load Effective AddressFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe data segment allocates memory on the heap in memory rather than the stack as they are not local variables they are known throughout the entire binary. The sizes of data are as follows:1)byte - We use the db notation which is obviously 1 byte or 8 bits.2)word - We use dw and it is 2 bytes in length.3)double word - We use dd to assign and they are 4 bytes long.4)quad word - We use dq which is 8 bytes long.5)xmm word - We use xmmword which is 16 bytes long.6)ymm word - We use ymmword which is 32 bytes long.There are SSE math registers which are separate from the CPU which hold the following:1)real4 - This is a single or what you would think of as a floating point numbers as this is 4 bytes long.2)real8 - This is a double floating point as this is 8 bytes long.Finally there are arrays which can be single or multidimensional arrays where you can allocate against a db, dw, dd, dq, xmmword or ymmword.We will see this in code when we get more advanced into the series however its critical that you understand the variables within a function are local and go to the stack as they do not last throughout the program. These variables which are part of the data segment are not local they are global and go to the heap.The stack - local vars - grows down in memory so they start at a high memory address and grow down. The heap - global vars - grows from a lower memory address and grows up. If you have questions please ask them in the comments as it is critical you get this concept down when we start to build our very basic operating system.Next week we will dive into SHL! Stay tuned!\n"},"pages/part-13-the-data-segment.html":{"url":"pages/part-13-the-data-segment.html","title":"Part 13 - The Data Segment","keywords":"","body":"Part 13 - The Data SegmentFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe SHL command stands for shift left.Let’s assume the register al holds 01010101b which is an 8-bit binary value. Let’s assume the instruction is shl al, 2. Below is what transpires as we see the values move two bits to the left.   0001010100010101Therefore the new value will be:10100000Next week we will dive into SHR! Stay tuned!\n"},"pages/part-14-shl-instruction.html":{"url":"pages/part-14-shl-instruction.html","title":"Part 14 - SHL Instruction","keywords":"","body":"Part 14 - SHL InstructionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe SHR command stands for shift right.Let’s assume the register al holds 00010100b which is an 8-bit binary value. Let’s assume the instruction is shr al, 2. Below is what transpires as we see the values move two bits to the left. 00010100   0001010000000101Next week we will dive into ROL! Stay tuned!\n"},"pages/part-15-shr-instruction.html":{"url":"pages/part-15-shr-instruction.html","title":"Part 15 - SHR Instruction","keywords":"","body":"Part 15 - SHR InstructionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe ROL command stands for rotate left.In our simple x64 example on an Ubuntu Linux machine above we see we mov 1 into al and rotate left by 1 bit.The binary representation is 00000001b. If we ROL 1 bit the value simply becomes 00000010b as demonstrated below.We first compile and link by:nasm -f elf64 -o test.o test.asmld -o test test.oWe can see here in the debugger that al starts with 1 and when we rotate left it goes to 10b.You can ROL with additional bits as well. The logic would remain the same as the bits will rotate left just as we demonstrated above.Next week we will dive into ROR! Stay tuned!\n"},"pages/part-16-rol-instruction.html":{"url":"pages/part-16-rol-instruction.html","title":"Part 16 - ROL Instruction","keywords":"","body":"Part 16 - ROL InstructionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThe ROR command stands for rotate right.In our simple x64 example on an Ubuntu Linux machine above we see we mov 1 into al and rotate right by 1 bit.The binary representation is 00000001b. If we ROR 1 bit the value simply becomes 10000000b as demonstrated below.We first compile and link by:nasm -f elf64 -o test.o test.asmld -o test test.oWe can see here in the debugger that al starts with 1 and when we rotate right it goes to 10000000b.Next week we will dive into Boot Sector Basics! Stay tuned!\n"},"pages/part-17-ror-instruction.html":{"url":"pages/part-17-ror-instruction.html","title":"Part 17 - ROR Instruction","keywords":"","body":"Part 17 - ROR InstructionFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialOver the next few tutorials we are going to write a very basic x86 Operating System to which we will use QEMU which is a full system emulator or OS emulator. You could also install VirtualBox and ultimately convert our boot loader to an ISO if you so choose.At the very core of a computer booting is what we refer to as the boot loader. The boot loader physically reads the first sector or sector 0 from your HD or other media to ultimately bootstrap an OS.When the computer boots it reads the first sector which is exactly 0x200 bytes (hex) or 512 bytes in decimal.The system that is reading this boot loader is what is referred to as BIOS which is a basic input output system and it loads in 16-bit mode. It does this to be compatible with older processors. Modern processors immediately switch to what we refer to as UEFI which is a more sophisticated IO system however we will focus on the very basics here with BIOS.Next week we will discuss what exactly goes on when BIOS reads the boot sector.\n"},"pages/part-18-boot-sector-basics-part-1.html":{"url":"pages/part-18-boot-sector-basics-part-1.html","title":"Part 18 - Boot Sector Basics [Part 1]","keywords":"","body":"Part 18 - Boot Sector Basics [Part 1]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWe are at the stage where we are going to start integrating real-world code. If you do not have an active linux desktop I would suggest you get Virtualbox and Ubuntu on either your Windows or Mac. I have a prior tutorial that will walk you through this process below. For some reason I am not able to embed the link so please just copy and paste it into your browser.https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-16/ You will additionally need a text editor for the terminal. I use VIM. You will find a link to set that up as well below.https://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-engineering-kevin-m-thomas-17/In addition you will have to install nasm so you may simply type:sudo apt-get install nasmNASM is the assembler we will use and we will focus on the intel syntax. First go into the terminal and fire up Vim and type the following:Remember to type 'i' to insert and then 'esc' and 'wq' to go into command mode and save your file.The above line simply sets an infinite loop and does nothing more. The loop label is created to which we simply jmp back to itself. This code in itself will compile however it will not run in an OS as it does not trigger what we refer to as the magic number to which BIOS looks to understand this is the end of your boot sector. We will cover more on that in future lectures.We type the above command assuming you saved your file in vim as bootsector.asm. This will create a binary file to which we will examine the contents within a hex editor. A hex editor is an application that examines each byte of data that is compiled into a file. We will see that our assembly instructions above will ultimately get translated down to their raw opcode values. The processor only understands raw opcodes which are simply operation codes. Below is a link to a table identifying the opcodes. I saved you the effort of referencing the intel dataset as it is literally thousands of pages and several volumes:http://ref.x86asm.net/coder64.htmlLet's use a hex editor like ghex and open up our bin file.We see EB FE which are hex bytes and each letter is a nibble (a nibble is 4 bits or half a byte). Both EB FE make up two full bytes. Keep in mind the processor reads from disk in reverse byte order such that FE gets read first and then EB. This process is called little endian and is how the x64 processor works.If you review the table to which I provided the link you will see that FE represents an INC or increment by one. This is our loop value.Next you will find that EB stands for JMP which is our jump instruction above.This is alot of information if you are new to assembly. Take it step-by-step and follow along with me in a real linux OS and with each lesson you will get a better understanding of the basics.Next week we will build upon this lesson by adding some simple data to our binary.\n"},"pages/part-19-boot-sector-basics-part-2.html":{"url":"pages/part-19-boot-sector-basics-part-2.html","title":"Part 19 - Boot Sector Basics [Part 2]","keywords":"","body":"Part 19 - Boot Sector Basics [Part 2]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialFor those of you that are familiar with assembly these next several weeks/months might seem like we are progressing very slowly however the aim is to help those with little understanding of hardware to get a better understanding of the very systems that power the cloud.The vast majority of AWS and Azure as well as many other cloud services utilize x64 based operating systems. Understanding what happens when these systems boot is of significant value and that is why we are going to go thorough a very slow process looking at each piece of a boot sector when a machine loads.Let's examine our source code. Follow along in Vim or Nano.Last week we learned the opcodes for line 1 and 2 to which we do not have to review. Today we add a byte of data into our code. Notice this is a hexadecimal number and will match our binary upon inspection. In future lessons we will see how it looks when we do decimal and other systems.Let's compile. If you do not have NASM installed please ensure you type sudo apt-get install nasm.Let's look at our binary in a hex editor. I use GHex as I keep to the GNU tradition as we will in future lessons use the GNU debugger called GDB. These are all on your Linux systems as I am using Ubuntu for these tutorials.We saw last week that the EB and FE correspond to our INC and JMP instructions. If this is unclear please re-read last weeks lecture. We see the 3rd byte as 10. Remember this is hexadecimal so the value in decimal would be 16.Next week we will keep adding to our code and progress in our OS development series.\n"},"pages/part-20-boot-sector-basics-part-3.html":{"url":"pages/part-20-boot-sector-basics-part-3.html","title":"Part 20 - Boot Sector Basics [Part 3]","keywords":"","body":"Part 20 - Boot Sector Basics [Part 3]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we continue our Boot Sector Basics. Let's examine the code:We add a string to our code as seen above and compile.Let's examine the binary in a hex editor.Closely examine the above. We see our original code which we do not have to review however now we see a series of numbers, hex numbers that represent ASCII characters. We see that each letter corresponds with a letter. When we say that ultimately everything goes down to 0 and 1 this is a proof of concept. As you can see EB is selected above and we can see those hex values ultimately go to 11101011 in binary.Homework: Google and research the ASCII conversion table and do some research on your own and better understand how hex values represent characters.Next week we take it to the next level. Stay tuned!\n"},"pages/part-21-boot-sector-basics-part-4.html":{"url":"pages/part-21-boot-sector-basics-part-4.html","title":"Part 21 - Boot Sector Basics [Part 4]","keywords":"","body":"Part 21 - Boot Sector Basics [Part 4]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWe begin by looking at some simple additions to our code. What we will accomplish today is to create a simple operating system that does literally nothing but boot. We will use QEMU as an emulator as I am too lazy to set up VirtualBox or VMWare however you can easily port the .bin to an .iso if you chose and boot from either.We are simply adding a padding algorithm on line 7 that simply examines how many bytes are left after we subtract 200h or 512 and then it pads the remaining bytes with zeros. At the end you will see what we refer to as the magic number which is 0xaa55 as this is a signature that the cpu is looking for to identify a boot sector. Remember this code is at sector 0 when it boots as there is no file system so if it finds the successful signature it will attempt to boot it.We build the binary with the code above. Now let's look at the code in the hex editor.As you can see it pads out the remaining bytes up to 200h or 512 with 0's as we anticipated. Below is the remainder of the binary.As you can see at the very end we have 55 AA. We remember that our processor is little endian so when we code it it was aa 55 and which is in it's mapped format. When it goes into the cpu it reverses the byte order. This is critical that you understand this.Next week we will simply do nothing more than launch our new operating system. Stay tuned.\n"},"pages/part-22-boot-sector-basics-part-5.html":{"url":"pages/part-22-boot-sector-basics-part-5.html","title":"Part 22 - Boot Sector Basics [Part 5]","keywords":"","body":"Part 22 - Boot Sector Basics [Part 5]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThis week we will focus on how to use QEMU which is an emulator to boot our simple new OS.Type the above to obtain qemu specifically for x86 systems.Run the emulator with our binary.You will see the following. Keep in mind it does nothing but an infinite loop jump which we discussed in detail in previous lessons. This however is the most basic x86 OS one can create.It simply looks for the signature which we spoke of last week (if this does not make sense please review last weeks lecture) and if it is exactly 200h bytes and it is placed at the first sector of the boot medium the process will be successful.If you are interested there are different emulators for different architectures.Next week we will discuss memory addressing so that we can set up a stack within our simple os.\n"},"pages/part-23-boot-sector-basics-part-6.html":{"url":"pages/part-23-boot-sector-basics-part-6.html","title":"Part 23 - Boot Sector Basics [Part 6]","keywords":"","body":"Part 23 - Boot Sector Basics [Part 6]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWe need to discuss memory at this point. Before we can discuss setting up a simple stack in our bootloader we must understand how memory is allocated in the bootsector.1)0x0 = Interrupt Vector Table - This is where our interrupt table exists at the very base of memory. This is where all of our interrupt calls exist.2)0x400 = BIOS Data Area - This stores variables about the state of the bootable device.3)0x7c00 = Loaded Boot Sector - This has our machine code that will be loaded into RAM by the bootloader firmware (note: firmware is simply code that runs before an OS runs like what we are doing).4)0x7e00 = Free - This is your stack area that you can develop in.5)0x9fc00 = Extended BIOS Data Area - Holds data from disk track buffers and other connected devices as remember there is no file system as of yet.6)0xa0000 = Video Memory - BIOS maps your video memory here at boot.7)0xc0000 = BIOS - Where BIOS officially resides.8)0x100000 = Free - Additional space you can develop in.This is critical that you understand how memory is laid out at boot. In our next lesson we will create a simple stack at 0x7e00.\n"},"pages/part-24-boot-sector-basics-part-7.html":{"url":"pages/part-24-boot-sector-basics-part-7.html","title":"Part 24 - Boot Sector Basics [Part 7]","keywords":"","body":"Part 24 - Boot Sector Basics [Part 7]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we will put all the pieces together. We will create our custom OS that does nothing but boot-up, set a video mode and then only accept numeric digits in the console. This is the final tutorial in this mini-series of Boot Sector Basics.Let's examine our code:The first thing we do is move to the programable area of the boot sector code at address 0x7c00. We then set the stack base and identify the area for our stack and set the base pointer into the stack pointer.We then call our video mode function where we set a 640x200 greyscale console. We then call our get character input function that will only allow digits 0 to 9 as you can see 0x30 is the hex ascii value for 0 and 0x39 is the hex ascii value of 9. If the user types anything else in the console literally nothing will enter into the console. This is the absolute control you have in Assembly.Lets compile and run:We then see the qemu console:As you can see I am only able to type numeric digits in our OS. Try it for yourself. Write the code and compile and run in the qemu editor. If you do not have qemu installed I show you in detail how to install it in the last two tutorials.Take the time to really review what I am doing here as it is critical to understand that this is how your computer boots before going into 32 then 64-bit mode.Next week we will simply discuss the high-level concept of how your computer bridges a 64-bit OS.\n"},"pages/part-25-boot-sector-basics-part-8.html":{"url":"pages/part-25-boot-sector-basics-part-8.html","title":"Part 25 - Boot Sector Basics [Part 8]","keywords":"","body":"Part 25 - Boot Sector Basics [Part 8]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialBefore we dive into x64 Assembly I want to talk very briefly about what we refer to as long mode.When the computer boots it needs to enable what we refer to as the A-20 line. In early architectures, processors had 20 address lines which were A-0 to A-19 to which could access 2 to the power of 20 bytes of information. The A-20 line is an external memory reference containing a 16-bit offset address added to a 16-bit segmented number which shifts 4 bits to get the additional access.This process combined with the Global Descriptor Table allows you to work with your Control Register to to execute a far jump to enter protected mode which is 32-bits.Long mode which is 64-bit mode which we are all familiar with in our modern architectures extend the address space to access 0xFFFFFFFFFFFFFFFF.This topic alone can take weeks to explain however I wanted to at a very high level touch base on the fact that the processor needs to bridge to 32-bit mode and then finally to 64-bit through setting the A-20 line, working with the control register and GDT in combination with paging.I took several months to get to this point so that you have a basic understanding of Assembly as we will start to get into actual 64-bit Assembly in the following tutorials and then our C++ tutorial to which we will reverse engineer each code block into 64-bit Assembly.\n"},"pages/part-26-boot-sector-basics-part-9.html":{"url":"pages/part-26-boot-sector-basics-part-9.html","title":"Part 26 - Boot Sector Basics [Part 9]","keywords":"","body":"Part 26 - Boot Sector Basics [Part 9]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we begin our actual x64 code basics. Over the next few weeks I will create very simple examples so we get a grasp of the x64 architecture. Let's start with a basic code block:We begin by declaring the .data section to which all of our global data is stores. If we had a string or some other form of hard coded data it would go in that block. In our example we will leave it empty.The .text section declares where the entry point of the program will begin in our case we use _start or you can use main.We simply move the value of decimal 16 or hex 10 into the 64-bit RAX register. We will see in a moment that the processor will use only the lower EAX when we debug in GDB.The last piece is just a simple exit routine which we move 60 into RAX and then syscall. It simply returns operation back to the OS.Let's compile and link:Let's debug in GDB:Let's set the debugger for intel syntax and set a break on start:As we can see 16 decimal or hex 10 is about to be moved into EAX but as we can see it has not been completed until we step forward.Now we can view our registers.We can see that RAX holds decimal 16 or hex 10 successfully.We will spend several weeks on these simple examples so you can get comfortable with how the processor operates and its internal workings.\n"},"pages/part-27-x64-assembly-part-1.html":{"url":"pages/part-27-x64-assembly-part-1.html","title":"Part 27 - x64 Assembly [Part 1]","keywords":"","body":"Part 27 - x64 Assembly [Part 1]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's continue with another example:As we can see we are moving 0x10 into RAX and adding 0x05 into RAX.We compile and let's disassemble.As you can see as expected we see our code in debug.We step twice and then...We see 0x15 or 21 decimal moved into RAX. Take the time to carefully try these very simple examples as we go forward.\n"},"pages/part-28-x64-assembly-part-2.html":{"url":"pages/part-28-x64-assembly-part-2.html","title":"Part 28 - x64 Assembly [Part 2]","keywords":"","body":"Part 28 - x64 Assembly [Part 2]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we continue our tutorial with a simple subtract example. Let's examine the source code:Let's compile and run the debugger:Let's run and disassemble:As we can see very we load 16 or 0x10 hex into EAX and then subtract 5 from it in the next instruction.We step twice and then look at the resulting value in RAX.As we can see the result is 0xb hex or 11 decimal as expected. It is important that you try these simple examples to get a grasp of what happens when we start to debug C++ code in future tutorials.\n"},"pages/part-29-x64-assembly-part-3.html":{"url":"pages/part-29-x64-assembly-part-3.html","title":"Part 29 - x64 Assembly [Part 3]","keywords":"","body":"Part 29 - x64 Assembly [Part 3]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we will code our simple, \"hello world\" program in x64 Assembly.We simply create a string in the .data section and add a return character at the end of the statement. We then perform a simple write call which utilizes the OS's interrupt vector table to spit out our string in the standard output or terminal.We will compile and run below:As we can see \"Hello World!\" has been echoed to the terminal. Next week we will debug this simple program in GDB.\n"},"pages/part-30-x64-assembly-part-4.html":{"url":"pages/part-30-x64-assembly-part-4.html","title":"Part 30 - x64 Assembly [Part 4]","keywords":"","body":"Part 30 - x64 Assembly [Part 4]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialThis lecture will be a bit longer than most however it is important that you all take the time to really code and practice the topics discussed below. Let's review our code:Let's compile and run:As we can see from last week we successfully created our simple \"Hello World\" program successfully.In prior lessons I touched upon the x64 register set however I will review again with this table:In prior lessons we described what these registers basic functionality consists of however it is important to understand the 64-bit to 8-bit slices of the registers. Registers hold temporary memory. This is the key takeaway here.We have three sections in Linux-based assembly which consist of a:.data = consist of data definitions.bss = consist of variable data allocation.text = actual codeIn our example above we used the label of text not to be confused with the .text section. Our compiler will take all of our labels and determine an actual mapped memory location and replace each label with the memory in the actual binary file.It is important to understand that each string character is a byte in length which is represented by two hex digits. There is an ascii table that you can Google that will show you all of these values. Each hex digit is a nibble or 4-bits long. For example our 'H' is 0x48 and 'e' is 0x65. Let's look at our binary in a hex editor to illustrate.In last week's lecture's comments, Aaron pointed out something that is very critical that you understand when looking at Assembly in an Operating System vs Firmware such as the code we created for our Operating System in our prior lectures.Aaron carefully pointed out in the comments last week that a SYSCALL is completely dependent on the operating system. System calls will differ depending on the OS because each OS has a different Kernel and each have their own vector interrupt tables which have an ID associated with them with a corresponding number value.A SYSCALL is nothing more then when a binary requests a service from a respective kernel to which will take arguments or a list of inputs. It is important to understand in x64 that System Call arguments or inputs correspond to specific registers:There are 328 SYSCALLS in a traditional linux kernel. As we see above in our code we use both the SYS_WRITE and SYS_EXIT. Let's illustrate:Please take a moment to look at our code above to see how this works. In SYS_WRITE we load 1 into RAX which is our SYSCALL. We load 1 into RDI which is our first argument which represents our standard output (0 = standard input & 2 = standard error). Our second argument is loaded into RSI which is our text label to which when compiled will have an actual memory address as you will see this in a debugger. Finally our third argument will hold the string length which is 13 in our case and loaded into RDX. As an exercise I want you to write out how SYS_EXIT does the same and keep in mind there is only 1 argument there. PLEASE REVIEW the code above to firmly understand this before moving on!In addition we have our _start label to which our respective operating system will look for otherwise it will throw an error when it seeks to find an entry point to our code. The global declaration tells the linker the actual address of the data.Next week we will debug the binary in GDB.\n"},"pages/part-31-x64-assembly-part-5.html":{"url":"pages/part-31-x64-assembly-part-5.html","title":"Part 31 - x64 Assembly [Part 5]","keywords":"","body":"Part 31 - x64 Assembly [Part 5]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's review our code.Compile...Debug...Let's evaluate what is inside the memory address of 0x6000d8.As we can see \"Hello World\" with the return character will then be moved into our RSI register.Next week we will examine this a bit closer.\n"},"pages/part-32-x64-assembly-part-6.html":{"url":"pages/part-32-x64-assembly-part-6.html","title":"Part 32 - x64 Assembly [Part 6]","keywords":"","body":"Part 32 - x64 Assembly [Part 6]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's again review our source code.Let's compile...As we have seen before it produces our string.We debug and see the string being moved into 0x6000d8 and then RSI.Just to verify we can see the string at the aforementioned address. NOW FOR A BIT OF FUN :)...Here we demonstrate we have the power to simply hack and redefine the string in memory. We are simply setting a char byte length and setting a new string.As we can see we have successfully altered the string in memory.We continue and run through the binary and see that our hack continues through RSI.Finally we see when we run the binary we have successfully hacked it's operation. This is a very simple example however shows the power of truly understanding assembly at this level. GUI debugger tools will also provide this functionality however I like to use the command line tools so that they could be used on every environment.The purpose of these tools is to UNDERSTAND how this is done and what to look for when you are professionally reversing in real-time. You need to understand how an attacker can alter memory and/or instructions. We need more professional RE's to help defend infrastructures throughout the world and hopefully these tutorials motivate you toward a career in such.\n"},"pages/part-33-x64-assembly-part-7.html":{"url":"pages/part-33-x64-assembly-part-7.html","title":"Part 33 - x64 Assembly [Part 7]","keywords":"","body":"Part 33 - x64 Assembly [Part 7]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialToday we start our RE with the C++ language. The vast majority of malware is written in C++ and walking through simple code examples over the coming months and breaking them down in a debugger will give you a real hands-on approach to learning true RE.We will use Kali Linux going forward with Radare 2. You can get VirtualBox and download the Kali Linux x64 Appliance to follow along.Let's start with the C++ 1 code example:Here we simply create a main function and use the C++ output stream library to output the text \"Hello World\" with a new line at the end to the terminal. Let's compile and link:Let's run in the terminal:As we can see \"Hello World\" successfully echoed to the terminal.Next week we will introduce Radare 2 and debug the code and examine what it looks like in x64 Assembly.\n"},"pages/part-34-x64-c++-1-code-part-1.html":{"url":"pages/part-34-x64-c++-1-code-part-1.html","title":"Part 34 - x64 C++ 1 Code [Part 1]","keywords":"","body":"Part 34 - x64 C++ 1 Code [Part 1]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's review our code:Compile:Run:For literally years I have been using GDB as the debugger of choice. The reason is that it is on every Linux based system which runs just about every IoT and Server in the world. In addition, there are versions for Windows.I have struggled hard with this but have decided to introduce another terminal based debugger called Radare 2. The reason I like Radare 2 so much is that it is still terminal based yet more robust with its feature set. If you are running a Kali Linux VM like I am here you can simply the below.Let's open up our binary for write mode and simply analyze the binary.Ok, there is a lot going on here. Let's break it down. First, we open up Radare 2 in write mode by typing 'r2 -w ./1' and then use the 'aaa' command to analyze the binary. We then use 's sym.main' to seek to the main routine of the binary which is our entry point. We then do a 'pdf' command to disassemble the binary.We see what we refer to as the prologue where we push rbp the stack base pointer onto the stack. We then move rsp into rbp for safe keeping and then we reserve 0x10 hex bytes or 16 decimal bytes on the stack to make room for our string.If none of this makes sense please go back to the beginning of the tutorial series to review basic assembly and the registers as it is CRITICAL you understand this before we move forward.We can clearly see the qword of 'Hello World\\n' at memory address 0x2005 and then we see our C++ library call for the output stream which is cout to display our string to the terminal.Let's examine 0x2005 to verify that our string is at that location:Next week we will hack the value and modify the binary. I highly encourage you all to install VirtualBox which is free and get the Kali Linux VirtualBox image and install Vim as well.There are tutorials on all of this in my prior series. Stay tuned for the hack next week!\n"},"pages/part-35-x64-c++-2-debug-part-2.html":{"url":"pages/part-35-x64-c++-2-debug-part-2.html","title":"Part 35 - x64 C++ 2 Debug [Part 2]","keywords":"","body":"Part 35 - x64 C++ 2 Debug [Part 2]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's review our code:Compile:Run:Let's remember this line above when we compare against our hacked binary.Let's open up our binary for write mode and simply analyze the binary.Ok, there is a lot going on here. Let's break it down. First, we open up Radare 2 in write mode by typing 'r2 -w ./1' and then use the 'aaa' command to analyze the binary. We then use 's sym.main' to seek to the main routine of the binary which is our entry point. We then do a 'pdf' command to disassemble the binary.We see what we refer to as the prologue where we push rbp the stack base pointer onto the stack. We then move rsp into rbp for safe keeping and then we reserve 0x10 hex bytes or 16 decimal bytes on the stack to make room for our string.If none of this makes sense please go back to the beginning of the tutorial series to review basic assembly and the registers as it is CRITICAL you understand this before we move forward.We can clearly see the qword of 'Hello World\\n' at memory address 0x2005 and then we see our C++ library call for the output stream which is cout to display our string to the terminal.Let's examine 0x2005 to verify that our string is at that location:NOW TIME FOR THE HACK!Let's hack the value to something like:Now let's see what is now inside memory value @ 0x2005!BOOM! As we can see we have hacked the value and when we quit Radare 2 it will write it and modify our binary as such.,As you can see we have hacked the binary! This is very basic but now you have an elementary level of understanding of Reverse Engineering a C++ binary.Next week we will continue our journey into C and step-by-step reverse engineering.\n"},"pages/part-36-x64-c++-3-hacking-part-3.html":{"url":"pages/part-36-x64-c++-3-hacking-part-3.html","title":"Part 36 - x64 C++ 3 Hacking [Part 3]","keywords":"","body":"Part 36 - x64 C++ 3 Hacking [Part 3]For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialCongrats you wrote, compiled and hacked your first C++ program. For the rest of this tutorial I am going to focus on the father of all programming languages from \"Hello World\" to web servers in the programming language to which ALL modern languages come from C.Like the variety of religions there are programming languages. Nonetheless there is the ROOT religion or language to which all spawn which is C. I am going to over the next several months teach you C and Reverse Engineer each binary so you have a mastery over the MASTER language of all existence.When we need to develop in an agile environment we will of course use Java or Python or any of the other rapid development languages however if you are to master Cyber Engineering you MUST become ONE with the WORD to which in digital and cyber terms is the C Programming Language.Think of C as if you are in church where Python or Java or C# you are in a secular environment. C will allow TOTAL and complete control over your program or environment where Java or Python will allow only partial control however they are NECESSARY languages in today's rapid development business logic environments.In our next lesson we begin with the basic \"hello world\" program as we did in our prior lesson however we now will work with C. Remember Einstein - \"I want to know God's thoughts, the rest are details.\" This is the difference between C and any other language you are sitting at the ROOT of engineering design for portable systems!\n"},"pages/part-38-x64-networking-basics.html":{"url":"pages/part-38-x64-networking-basics.html","title":"Part 38 - x64 Networking Basics","keywords":"","body":"Part 38 - x64 Networking BasicsFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialSo... What does an x64 server or computer actually understand? 0100010100100100101010 and many more...A small level above that we are at machine code which is a series of hex digits which translate into machine instructions and/or data.With the C programming language, we created a construct to more easily create programs to communicate with the hardware. C is the Grandfather of almost every programming language in modern existence.C abstracts away the x64 binary of 010101000101001011 or machine code of 0x90 0x45 0x22 0x22 or assembly mov rax, 0x222323123, etc...Next we create our first real C program!\n"},"pages/part-39-why-c?.html":{"url":"pages/part-39-why-c?.html","title":"Part 39 - Why C?","keywords":"","body":"Part 39 - Why C?For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialOk it is time we look at the most basic C program, debug it and hack it. If we are to have mastery we must create and destroy in a single-step so that we have mastery over the domain.Let us fire up VIM and type out the following. We include our standard library and create a main function to which we use the library function of printf to echo a string of chars and since the type of main is int meaning integer we return 0.Let us compile and see what happens when we run:As we see like we did in our C++ example we see 'Hello World!' echoed successfully.Let's debug in Radare:This is simple, we use aaa to analyze the binary and seek to main with s sym.main.Let's look at the assembly and analyze:Assembly! The definition of raw sexy!I went over this in detail in the previous lessons on Assembly but let us review.1)We push rbp which means we push the value currently in the base pointer onto the stack.2)We lea rdi, qword str.Hello_World which means we load the effective address of the quad word of our string into the rdi register. So far should be simple for you to follow along.3)We then call sym.imp.puts um wait! We used printf what the hell! Well our compiler optimizes our code and the compiler chose the puts function in the stdio library to echo the string to our terminal. Again easy enough.4)We clean out eax and then pop the original value in the rbp register back into rbp. If you are confused by this review the earlier part of the series please.We know our string 'Hello World!' lives at a pretty house in Arlington, VA at the address of 0x2004 well ok, it's not Arlington, VA but it is in mapped memory (since we are not technically debugging we are messing with mapped code meaning the same values on disk).To confirm we see the value at 0x2004 is 'Hello World!' Let's hack that value to anything we want with the w command and write directly to that mapped memory address.Let us re-examine who NOW lives in our Arlington, VA house!Success! We hacked the value and when we exit our debugger we see:We have successfully altered the binary.This is alot to digest here. If you are stumped ask questions in the comments PLEASE! Do not continue as I am here to help. It is CRITICAL you understand these most basic things before we continue!\n"},"pages/part-40-hacking-hello-world!.html":{"url":"pages/part-40-hacking-hello-world!.html","title":"Part 40 - Hacking Hello World!","keywords":"","body":"Part 40 - Hacking Hello World!For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialIn C we have several data types to which we can create variables. I will use a few simple examples:Let's compile and run:Ok as we can see we have a character an integer and a double. These are some of the most basic data types in C to which we have created a series of variables as shown above.Let us load the binary into Radare:Let's disassemble at main:Ok very simply we see 3 variable declarations defined up at the top in reverse order as they are local_1h which is our char a, local_8h which is our int b and local_10h which is our double c. You can also see the rbp base pointer allocating space for these variables. This is nice pseudo code that the debugger shows you up top.Ok stay with me!Within memory at 0x0000113d we see the instructions mov byte [local1_h], 0x61 which is in our ascii table a lowercase 'a'. We know that [local1_h] is not real code however what is going on under the hood is the fact that these variables are pushed onto the stack in reverse order as we can see above. Therefore, if we were to hack our code to something like mov byte [rbp-0x1], 0x62 what do you think might happen? Very simple, we know that in reality the code at the mapped memory address of 0x0000113d what is really going on is mov byte [rbp-0x1], 0x61. Quite simply what we have just done is hack our value of 'a' to 'b'. This should hopefully make sense to you.Now let us re-examine our binary:As we can clearly see at memory address 0x0000113d we in fact see 'b'. We have successfully hacked this portion.We exit out of Radare and re-run the binary and we can see we have successfully hacked the value.HOMEWORK TIME! I want you to with this knowledge now hack the int and the double. I want you to put your results in the comment sections below. It is VERY important that you type all of this out and actually explore the exercises so I am looking forward to seeing your hacks in the comments!\n"},"pages/part-41-hacking-variables!.html":{"url":"pages/part-41-hacking-variables!.html","title":"Part 41 - Hacking Variables!","keywords":"","body":"Part 41 - Hacking Variables!For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialLet's take a look at some branching logic:As we can plainly see we init an int to 1 and if the variable is equal to 1 the first if statement prints a response to standard output.Let's compile:Let's run:As we can logically see the first branch is taken. Let's take it into Radare and look around at the assembly:We can see the branching logic with the aqua colored arrows. At 0x0000114a we see our first branch being loaded into rdi. Take note at 0x00001148 we see a jne 0x1158. At 0x00001158 we see our second branch being loaded into rdi.The jne means jump if not equal. This means if what is being compared in 0x00001144 is not equal to 1 (we see 1 being compared to what is in local_4h which we know is pseudo code for what is actually in rbp-0x4. This should make sense as I went over this in detail last week if you are confused please revisit our last lesson.To hack we simply make the jne statement to je which is jump if equal which we know the cmp or comparison is equal so it will now branch to \"A is NOT 1!\".When we exit Radare we can see we have hacked the binary successfully:Stay tuned!\n"},"pages/part-42-hacking-branches!.html":{"url":"pages/part-42-hacking-branches!.html","title":"Part 42 - Hacking Branches!","keywords":"","body":"Part 42 - Hacking Branches!For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/Reverse-Engineering-TutorialWe are at the end of the road. This is the final video in the x64 series. The final topic is that of pointers.What are pointers? Let us start with an example.A pointer is nothing more than a memory address. When we compile we will clearly see where lottery_number lives in mapped memory (this is a running example unlike our unmapped Radare examples).Let's add a true pointer to the example:We see the same value:Let us experiment more:We see the pointer address point to a new address:Remember pointers are memory addresses of other variables. Let's look at it another way:Let us compile:We deference by doing the following:Then we compile:We can see the deference pointer is equal to 777.We can see the example with an array:Let's debug:Then we disassemble:Let's hack!Let's re-examine the binary:We can see we hacked the value of 3 with 6.We can see we have made the successful hack.I hope over the years through the literal hundreds of x86, ARM and x64 tutorials you have a basic knowledge of how to do GOOD to protect critical infrastructures from malicious hands by understanding how the enemy works. Go and do GOOD work!\n"},"pages/part-43-hacking-pointers!.html":{"url":"pages/part-43-hacking-pointers!.html","title":"Part 43 - Hacking Pointers!","keywords":"","body":"Part 43 - Hacking Pointers!For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover.  https://github.com/mytechnotalent/hacking_c-_arm64Why C++?  I primarily develop in Python professionally as an Automator however with every day passing we see another Ransomware attack that further cripples society in a catastrophic way.This course is a comprehensive series where we learn every facet of C++ and how it relates to the ARM 64 architecture as we will reverse engineer each step in ARM 64 assembly language to get a full understanding of the environment.There are roughly over 2,000 hacks a day world-wide and so few who truly understand how the hacks are executed on a fundamental level.  This course is going to take a very basic and step-by-step approach to understanding low-level architecture as it relates to the ARM 64.In our next lesson we will set up our development environment.\n"},"pages/part-2-development-setup.html":{"url":"pages/part-2-development-setup.html","title":"Part 2 - Development Setup","keywords":"","body":"Part 2 - Development SetupFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to start at the beginning and take a very simple C++ program that does nothing more than use the stream insertion operator to send a string literal to the stdout and then use the end line manipulator to flush the output buffer.Let's start by creating a file 0x01_asm64_helloworld.cpp and type the following into it.#include \nint main()\n{\n    std::cout Let's compile and link.g++ -o 0x01_asm64_helloworld 0x01_asm64_helloworld.cpp\nLet's run../0x01_asm64_helloworld\nWe see the simple result.Hello World!\nThese lessons are deliberately intended to be SHORT an SIMPLE. I know a number of you are more advanced however I really want to make this course as beginner friendly as possible.In our next lesson we will debug this very simple binary using our dev build of Radare2.\n"},"pages/part-3-\"hello-world\".html":{"url":"pages/part-3-\"hello-world\".html","title":"Part 3 - \"Hello World\"","keywords":"","body":"Part 3 - \"Hello World\"For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to debug our first program utilizing our dev build of Radare2.If this is your first time working with Assembly I would encourage you check out this series as it may better prepare you for the upcoming lessons.To begin let's open up our binary in Radare2.radare2 ./0x01_asm_64_helloworld\nLet's take advantage of Radare2's auto analysis feature.aaa\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.ood\nNow that we have a running instance we can seek to the main entry point of the binary.s main\nLet us take an initial examination by doing the following.v\nYou can right click and Open image in new tab to get an expanded view.Remember there is a difference between an executable on disk and what resides when it is mapped. When it is on disk it is referred to as unmapped. We will look at that at the end of the lesson. For now we are looking at a mapped version as you see it is an offset of the mapped code we will examine later.Do you notice that as your mapped memory values are different than mine? That is because of ALSR.Address Space Layout Randomization (ASLR) is a security technique used in operating systems, first implemented in 2001. The current versions of all major operating systems (iOS, Android, Windows, macOS, and Linux) feature ASLR protection.ASLR is primarily used to protect against buffer overflow attacks. In a buffer overflow, attackers feed a function as much junk data as it can handle, followed by a malicious payload.We notice in my mapped memory that at address 0x55629cab48 we see our string \"Hello World!\". You will have a different offset as we discussed but will find the same result.Let us get back to a console window by doing the following.q\nLet's verify our initial analysis.[0x55629ca9e4]> ps @0x55629cab48\nHello World!\n[0x55629ca9e4]>\nWe can see that it is in fact true that at the mapped memory address of 0x55629cab48 we see the string \"Hello World!\".Let's also look at the hex view so we can see and better understand what is going on at the machine code level.px @0x55629cab48\nWe see our \"Hello World!\" string and we can again see that it exists starting at the mapped memory address of 0x55629cab48.We see that our machine code instructions are 16 bytes long or 64-bits long as we can see the first column start at 48 and end with 00.It is VERY important we understand a few key things. First is the fact that a single hex digit is 4-bits wide or a nibble or a half of a byte. In our case 4 is a half of a byte and 8 is the other half of the byte. Together they form a byte and in our case a valid ascii char code.Let's visit the online ascii table.Second, we need to understand what the machine code translates to. Let's look up what 48 is in hex. We see that it is a capital 'H'. That maps perfectly as you see in the right hand column of the image above we see a 0 and below it the letter H.Obviously 65 hex is 'e' and so on and so forth. You can extrapolate the rest for yourself now that you have a basic understanding of what you are looking at.Let's now define a breakpoint on main and execute this binary to verify in fact that when we continue on from main it will print \"Hello World\" to the stdout.[0x55629ca9e4]> db 0x55629ca9e4\n[0x55629ca9e4]>\nLet us continue and verify our hypothesis. First we continue and break on main.[0x55629ca9e4]> dc\nhit breakpoint at: 0x55629ca9e4\n[0x55629ca9e4]>\nNow we step again and since there are no other breakpoints we will conclude the execution and verify our result in stdout.[0x55629ca9e4]> dc\nHello World!\n(59575) Process exited with status=0x0\n[0x7fb146cb8c]>\nLet's exit Radare2.q\ny\ny\nLet us rerun Radare2 again and this time not run the binary and simply look at the unmapped binary that is on disk.radare2 ./0x01_asm_64_helloworld\nLet's auto analyze.aaa\nLet's seek to main.s main\nThen view.v\nYou can right click and Open image in new tab to get an expanded view.Notice that we have \"Hello World!\" this time at the unmapped memory address of 0xb48. You notice that when you ran the binary the executable had an offset to this value but the LSB were 48 hex.I hope this lesson helps you to understand the basics of 64-bit ARM assembly and how to reverse it properly.In our next lesson we will hack the value.\n"},"pages/part-4-debugging-\"hello-world\".html":{"url":"pages/part-4-debugging-\"hello-world\".html","title":"Part 4 - Debugging \"Hello World\"","keywords":"","body":"Part 4 - Debugging \"Hello World\"For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64In the last lesson we spent a good deal of time really understanding what is going on inside our binary.  This laid the groundwork for an easy hack.Let's fire up radare2 in write mode.radare2 -w ./0x01_asm_64_helloworld\nLet's auto analyze.aaa\nSeek to main.s main\nView disassembly.v\nYou can right click and Open image in new tab to get an expanded view.We see the memory addresses as they are on disk as we are not running the binary as we discussed in the last lesson.We see that at 0xb48 we very easily find our string.Let's get back to the terminal view.q\nLet's verify the string.[0x000009e4]> ps @0xb48\nHello World!\n[0x000009e4]>\nLet's hack the string.[0x000009e4]> w Hacked World @0xb48\nLet's verify the hack.[0x000009e4]> ps @0xb48\nHacked World\n[0x000009e4]>\nLet's quit radare2.q\nNow let's run our binary again!./0x01_asm_64_helloworld\nHacked World\nWe see that we very easily hacked the binary.  These lessons will help you understand how an attacker creates a workflow so you can learn how to anticipate and better reverse engineer.In our next lesson we will work with simple I/O.\n"},"pages/part-5-hacking-\"hello-world\".html":{"url":"pages/part-5-hacking-\"hello-world\".html","title":"Part 5 - Hacking \"Hello World\"","keywords":"","body":"Part 5 - Hacking \"Hello World\"For a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to look at a basic I/O C++ program that has some minimal validation.Before I get into the brief lecture as I try to keep these short, I wanted to explain why I am not using the textbook straight cin examples that you see across the globe.The cin, standard input stream, which takes input from the keyboard is referred to as our stdin.What cin does is use whitespace, tab and newline as a terminator to the input stream. For example if you input 'abc' and hit a tab or put a whitespace or newline by hitting return the data to the right of it will be ignored.The problem is if you read from cin again it will pick up the remaining data in the stream if you do not flush the input buffer.If you had for example:std::cin >> val1;\nstd::cin >> val2;\nIf the user enters 1 and then leaves a space and then 2 and presses enter, you have no issue. 1 will be assigned into val1 and 2 will be assigned to val2 as they are chained.The problem is what if you enter 'Hey Jude' instead of an integer? What happens is it tries to read an integer and it goes into a failed state and from that point everything else it is extracting is unreliable.I did not mean to be long winded but I really wanted to emphasize why you would NEVER use cin by itself and I mean NEVER!Let's take a look at our basic i/o program that we will debug in the next lesson with a very basic C++ program that validates input.#include \ninclude \ninclude \nint main()\n{\n    int age = 0;\n    bool valid = false;\n    char null = '\\0';\nwhile (!valid)\n{\n    std::cout &lt;&lt; \"Enter Age: \";\n\n    // Get input as string\n    std::string line;\n    getline(std::cin, line);\n\n    // Init stringstream\n    std::stringstream is(line);\n\n    // Attempt to read a valid age from the stringstream and\n    // if a number can't be read, or there is more than white\n    // space in the string after the number, then fail the read\n    // and get another string from the user and make sure the \n    // dude is at least a year old and less than or equal to\n    // 100 years old\n    if (!(is &gt;&gt; age) || (is &gt;&gt; std::ws &amp;&amp; is.get(null)) || age &gt;= 100 || age &lt;= 0)\n        std::cout &lt;&lt; \"Dude be real!\" &lt;&lt; std::endl;\n    else\n        valid = true ;\n}\n\nstd::cout &lt;&lt; \"Your are \" &lt;&lt; age &lt;&lt; \" years old, seems legit!\" &lt;&lt; std::endl;\n\nreturn 0;\n}\nWe start by importing iostream, sstream and string. So far nothing tricky.We then prompt the user to enter their age. We then create a string object called line and take advantage of C++ getline() which is a standard C++ library function that is used to read a string or a line from an input stream properly.We then take advantage of the stringstream as it associates a string object with a stream allowing you to read from the string as if it were a stream like we would do with raw cin. In this simple example we create an is object which is short for input stringstream and connect it with our line object.Then before we echo data to stdout we do a little validation. We first check to see if age is the type it was defined as which is an int OR is there a white space in the stream after a given integer OR is age greater than 100 or less than 0. Very simply it provides a response if the input does not meet this criteria.Finally if all is well it echoes out a simple cout.Let's compile and link.g++ -o 0x02_asm64_basicio 0x02_asm64_basicio.cpp\nLet's run../0x02_asm64_basicio\nDepending on what you enter it will validate as appropriate as described above. PLEASE try this example and manipulate the source to get a full understanding of what is going on here.In our next lesson we will debug this very simple binary using our dev build of Radare2.\n"},"pages/part-6-basic-io.html":{"url":"pages/part-6-basic-io.html","title":"Part 6 - Basic I/O","keywords":"","body":"Part 6 - Basic I/OFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to debug our very basic input validation program from last lecture.To begin let's open up our binary in Radare2.radare2 ./0x02_asm_64_basicio\nLet's take advantage of Radare2's auto analysis feature.aaa\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.ood\nNow that we have a running instance we can seek to the main entry point of the binary.s main\nLet us take an initial examination by doing the following.v\nYou can right click and Open image in new tab to get an expanded view.A couple things to note we see at 0x5566be00cc the output of \"Enter Age: \" and at 0x5566be017c a call to istream which is going to capture the values from stdin to which we identify a failure condition at 0x5566be01d0 where we find \"Dude be real!\" and we see the results of a proper input validation starting at 0x5566be0218 where we say \"You are \" and then we see a call to the output stream at 0x5566be0238 and then the continuation of the validation string at 0x5566be0244 where we say \" years old, seems legit!\".The next step is to look at the binary with a visual graph.q\nVV\nppppp\nWe see the following:This is our zoomed out visual graph.  We can see how the program moves from function to function.  You will notice there are a series of tags such as [ol] or [ok] and  you can literally type the following:p\nol\nNow we are inside that function:Then to go back to main.qq\ns main\nVV\nThis will take us to an expanded graph that we can also use our arrow keys to look around.Let's set a breakpoint at 0x5566be00c4 where we bne 0x5566be0214 which is where we see the success route of our binary.[0x5566be0194]> db 0x5566be00c4\n[0x5566be0194]> dc\nhit breakpoint at: 0x5566be00c4\nEnter Age: 33\nhit breakpoint at: 0x5566be00c4\n[0x5566be0194]> dc\nYour are 33 years old, seems legit!\n(2215) Process exited with status=0x0\nAs you can see we cycled the loop and entered in a correct validation and was able to get our success return.In our next lesson we will hack the validation.\n"},"pages/part-7-debugging-basic-io.html":{"url":"pages/part-7-debugging-basic-io.html","title":"Part 7 - Debugging Basic I/O","keywords":"","body":"Part 7 - Debugging Basic I/OFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we hack the input validation from our last lesson. Let's fire up radare2 in write mode.radare2 -w ./0x02_asm_64_basicio\nLet's auto analyze.aaa\nSeek to main.s main\nView disassembly.v\nYou can right click and Open image in new tab to get an expanded view.Let's get back to the terminal view.q\nLet's look at the visual graph and begin with the first b.ne which under the proper expected conditions it will only accept a valid integer between 0 and 100 as we demonstrated in the last lecture.The b.ne meaning branch if not equal.  The assembly before it simply does not matter in this case as we know if we leave b.ne as is the input validation will be in tact.We need to disable this input validation by changing that instruction to a b.eq or branch if equal.Let's look at that code block.We see that it if it is true, meaning validation is correct and we have an integer between 0 and 100 we will follow the true green line to the next function which is as follows:You can right click and Open image in new tab to get an expanded view.If we fail the validation we will be sent to the false condition to obtain new input:Let's q to a terminal prompt.qq\nLet's seek to the statement we want to hack.[0x000010a4]> s 0x000010c4\nLet's now hack the branch as discussed.[0x000010c4]> wa b.eq 0x1214\nWritten 4 byte(s) (b.eq 0x1214) = wx 800a0054\n[0x000010c4]>\nLet's quit.q\nNow when we run the binary it will simply ignore any input at all let alone input validation and simply arrive at the desired point.kali@kali:~/Documents/0x02_asm_64_basicio$ ./0x02_asm_64_basicio\nYour are 0 years old, seems legit!\nkali@kali:~/Documents/0x02_asm_64_basicio$\nEven though 0 is valid it is simply an unstable value that happened to be in one of the registers that the program expected to be properly assigned during a normal program flow.  Here we were able to change the binary permanently to accomplish our hack.These are VERY simple examples however when you combine these as you progress you will literally be able to Reverse Engineer anything.In our next lesson we will discuss the char primitive data type.\n"},"pages/part-8-hacking-basic-io.html":{"url":"pages/part-8-hacking-basic-io.html","title":"Part 8 - Hacking Basic I/O","keywords":"","body":"Part 8 - Hacking Basic I/OFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to talk about the first of the C++ primitive.  The char dataype is used to store a single character and must be surrounded by single quotes.Let's look at our basic example.#include \nint main()\n{\n    char my_char = 'c';\nstd::cout &lt;&lt; my_char &lt;&lt; std::endl;\n\nreturn 0;\n}\nExtremely simple.  We are simply creating a char variable called my_char and assigning it the character c.We then print it to stdout and nothing more.Let's compile and link.g++ -o 0x03_asm64_char_primitive_datatype 0x03_asm64_char_primitive_datatype.cpp\nLet's run../0x03_asm64_char_primitive_datatype\nVery simply we see the following.c\nIt successfully echoed c to the terminal stdout.  Very simple.  Next week we will debug this very simple example.\n"},"pages/part-9-character-primitive-datatype.html":{"url":"pages/part-9-character-primitive-datatype.html","title":"Part 9 - Character Primitive Datatype","keywords":"","body":"Part 9 - Character Primitive DatatypeFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we are going to debug our very simple character primitive datatype.To begin let's open up our binary in Radare2.radare2 ./0x03_asm64_char_primitive_datatype\nLet's take advantage of Radare2's auto analysis feature.aaa\nThe next thing we want to do logically is fire up the program in debug mode so it maps the raw machine code from disk to a running process.ood\nNow that we have a running instance we can seek to the main entry point of the binary.s main\nLet us take an initial examination by doing the following.v\nYou can right click and Open image in new tab to get an expanded view.We can see that at 0x5576bff9ec we are moving 0x63 or ascii 'c' into the w0 register.Let's set a breakpoint at 0x5576bff9ec and verify the contents.[0x5576bff9e4]> db 0x5576bff9ec\n[0x5576bff9e4]> dc\nhit breakpoint at: 0x5576bff9ec\n[0x5576bff9ec]> dr w0\n0x00000001\n[0x5576bff9ec]> ds\n[0x5576bff9ec]> dr w0\n0x00000063\n[0x5576bff9ec]>\nThis is very simple but let's break it down.  We set our breakpoint and continued.  We looked inside the register w0 and saw that the value is 0x01. We then stepped once and looked again to see that 0x63 was successfully moved into w0 as now we see it does in fact contain 0x63.If we dc again we see it echoed to the stdout as expected.[0x5576bff9ec]> dc\nc\n(10845) Process exited with status=0x0\n[0x7f9727503c]>\nIn our next lesson we will hack the char to another value of our choice.\n"},"pages/part-10-debugging-character-primitive-datatype.html":{"url":"pages/part-10-debugging-character-primitive-datatype.html","title":"Part 10 - Debugging Character Primitive Datatype","keywords":"","body":"Part 10 - Debugging Character Primitive DatatypeFor a complete table of contents of all the lessons please click below as it will give you a brief of each lesson in addition to the topics it will cover. https://github.com/mytechnotalent/hacking_c-_arm64Today we hack the char from the last lesson.Let's fire up radare2 in write mode.radare2 -w ./0x03_asm64_char_primitive_datatype\nLet's auto analyze.aaa\nSeek to main.s main\nView disassembly.v\nYou can right click and Open image in new tab to get an expanded view.Let's get back to the terminal view.q\nAll we have to do is write assembly to 0x000009ec and specify a new char of our choosing.[0x000009e4]> wa movz w0, 0x66 @ 0x000009ec\nWritten 4 byte(s) (movz w0, 0x66) = wx c00c8052\n[0x000009e4]>\nLet's quit and run the new binary from the terminal.[0x000009e4]> q\nkali@kali:~/Documents/0x03_asm64_char_primitive_datatype$ ./0x03_asm64_char_primitive_datatype\nf\nAs you can see we successfully and permanently hacked the binary!  It is very trivial but when you take the last series of lessons together with each new successive lesson you build a real skill-set!In our next lesson we will work with the boolean primitive datatype.\n"}}}